{"version":3,"file":"notification.model.js","sourceRoot":"/","sources":["components/notification/notification.model.ts"],"names":[],"mappings":";;;AAAA,uEAA2D;AAC3D,uCAAiE;AAwBpD,QAAA,kBAAkB,GAAG,IAAI,iBAAM,CAC1C;IACE,cAAc,EAAE;QACd,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,CAAC,MAAM,EAAE,aAAa,EAAE,MAAM,EAAE,UAAU,EAAE,aAAa,CAAC;KACjE;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;KACb;IACD,OAAO,EAAE;QACP,IAAI,EAAE,MAAM;KACb;IACD,OAAO,EAAE;QACP,IAAI,EAAE,MAAM;KACb;IACD,MAAM,EAAE;QACN,IAAI,EAAE,OAAO;KACd;CACF,EACD;IACE,UAAU,EAAE,IAAI;CACjB,CACF,CAAC;AAEW,QAAA,YAAY,GAAG,IAAA,gBAAK,EAC/B,cAAc,EACd,0BAAkB,CACnB,CAAC;AAEW,QAAA,cAAc,GAAG,IAAA,0CAAe,EAC3C,oBAAmB,CACpB,CAAC","sourcesContent":["import { composeMongoose } from 'graphql-compose-mongoose';\nimport { Schema, Model, Types, Document, model } from 'mongoose';\n\nexport type CollectionNameEnum =\n  | 'user'\n  | 'creditScore'\n  | 'loan'\n  | 'contract'\n  | 'paymentPlan';\n\nexport interface INotification {\n  collectionName: CollectionNameEnum;\n  subject: string;\n  message: string;\n  active: boolean;\n  user: string;\n}\n\nexport type NotificationDocument = Document<\n  Types.ObjectId,\n  any,\n  INotification\n> &\n  INotification;\n\nexport const notificationSchema = new Schema<INotification>(\n  {\n    collectionName: {\n      type: String,\n      enum: ['user', 'creditScore', 'loan', 'contract', 'paymentPlan'],\n    },\n    user: {\n      type: String,\n    },\n    subject: {\n      type: String,\n    },\n    message: {\n      type: String,\n    },\n    active: {\n      type: Boolean,\n    },\n  },\n  {\n    timestamps: true,\n  }\n);\n\nexport const Notification = model<INotification, Model<INotification>>(\n  'Notification',\n  notificationSchema\n);\n\nexport const NotificationTC = composeMongoose<NotificationDocument>(\n  Notification as any\n);\n"]}