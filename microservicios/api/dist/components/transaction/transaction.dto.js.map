{"version":3,"file":"transaction.dto.js","sourceRoot":"/","sources":["components/transaction/transaction.dto.ts"],"names":[],"mappings":";;;AAAA,2DAAoD;AAEvC,QAAA,eAAe,GAAG,iCAAa,CAAC,OAAO,EAAE,CAAC;AAC1C,QAAA,mBAAmB,GAAG,iCAAa,CAAC,WAAW,EAAE,CAAC;AAClD,QAAA,qBAAqB,GAChC,iCAAa,CAAC,aAAa,EAAE,CAAC,WAAW,EAAE,CAAC;AACjC,QAAA,sBAAsB,GAAG,iCAAa,CAAC,cAAc,EAAE,CAAC;AAExD,QAAA,yBAAyB,GAAG;;;;+BAIV,uBAAe;;;;;;;;;;;;CAY7C,CAAC;AAMW,QAAA,uBAAuB,GAAG;;0BAEb,6BAAqB;;CAE9C,CAAC;AACF,uHAAuH;AAC1G,QAAA,oBAAoB,GAAG;;;;CAInC,CAAC","sourcesContent":["import { TransactionTC } from './transaction.model';\n\nexport const TransactionType = TransactionTC.getType();\nexport const TransactionTypeName = TransactionTC.getTypeName();\nexport const TransactionTypePlural =\n  TransactionTC.getTypePlural().getTypeName();\nexport const TransactionTypeNonNull = TransactionTC.getTypeNonNull();\n\nexport const borrowerCreditHistoryType = `\n  type creditHistory {\n    creditsLimit: [previousCreditsLimit]\n    creditsReceived: [previousCreditsReceived]\n    borrowerLastTransaction: ${TransactionType}\n  }\n\n  type previousCreditsLimit {\n    month: Date\n    borrowerCreditLimit: Float\n  }\n\n  type previousCreditsReceived {\n    month: Date\n    borrowed: Float\n  }\n`;\n\nexport type userTransactionEnum = 'borrower' | 'lender';\n\nexport type dateTransactionEnum = '1D' | '7D' | '2W' | '1M' | '6M' | '1Y';\n\nexport const lenderCreditHistoryType = `\n  type lenderCreditHistory {\n    transactionsByDate: ${TransactionTypePlural}\n  }\n`;\n// el input lo recibimos string ya que graphql no acepta enum de numeros con string siendo el primero numero, \"1D\" \"2W\"\nexport const dateTransactionInput = `\n  input dateTransaction {\n    date: String\n  }\n`;\n"]}