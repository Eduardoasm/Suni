{"version":3,"file":"currency.model.js","sourceRoot":"/","sources":["components/currency/currency.model.ts"],"names":[],"mappings":";;;AAAA,uCAAiE;AACjE,uEAA2D;AAY3D,MAAM,cAAc,GAAG,IAAI,iBAAM,CAAY;IAC3C,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,IAAI;QACd,MAAM,EAAE,IAAI;KACb;IACD,MAAM,EAAE;QACN,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,IAAI;QACd,MAAM,EAAE,IAAI;KACb;IACD,MAAM,EAAE;QACN,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,IAAI;KACd;CACF,CAAC,CAAC;AAEU,QAAA,QAAQ,GAAG,IAAA,gBAAK,EAC3B,UAAU,EACV,cAAc,CACf,CAAC;AAEW,QAAA,UAAU,GAAG,IAAA,0CAAe,EAAmB,gBAAe,CAAC,CAAC","sourcesContent":["import { Schema, Document, Types, Model, model } from 'mongoose';\nimport { composeMongoose } from 'graphql-compose-mongoose';\n\nexport interface ICurrency {\n  _id?: any;\n  name: string;\n  symbol: string;\n  active?: boolean;\n}\n\nexport type CurrencyDocument = Document<Types.ObjectId, any, ICurrency> &\n  ICurrency;\n\nconst currencySchema = new Schema<ICurrency>({\n  name: {\n    type: String,\n    trim: true,\n    required: true,\n    unique: true,\n  },\n  symbol: {\n    type: String,\n    trim: true,\n    required: true,\n    unique: true,\n  },\n  active: {\n    type: Boolean,\n    default: true,\n  },\n});\n\nexport const Currency = model<ICurrency, Model<ICurrency>>(\n  'Currency',\n  currencySchema\n);\n\nexport const CurrencyTC = composeMongoose<CurrencyDocument>(Currency as any);\n"]}