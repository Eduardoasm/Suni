{"version":3,"file":"currency.controller.js","sourceRoot":"/","sources":["components/currency/currency.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Request, Response, NextFunction } from 'express';\nimport { schemaComposer } from 'graphql-compose';\nimport {\n  TCreateCurrencyInput,\n  CreateCurrencyInput,\n  CurrencyType,\n} from './currency.dto';\nimport { CurrencyTC } from './currency.model';\n// eslint-disable-next-line import/no-cycle\nimport * as currencyService from './currency.service';\n\nconst createCurrency = schemaComposer.createResolver<\n  any,\n  {\n    data: TCreateCurrencyInput;\n  }\n>({\n  name: 'createCurrency',\n  kind: 'mutation',\n  description: 'create a currency',\n  type: CurrencyType,\n  args: {\n    data: CreateCurrencyInput,\n  },\n  async resolve({ args }) {\n    const currency = await currencyService.create(args?.data);\n    return currency;\n  },\n});\n\nconst currencyQueries = {\n  currency: CurrencyTC.mongooseResolvers.findOne(),\n  currencies: CurrencyTC.mongooseResolvers.findMany({\n    limit: { defaultValue: 1000000 },\n  }),\n};\n\nconst currencyMutations = {\n  updateCurrency: CurrencyTC.mongooseResolvers.updateOne(),\n  createCurrency,\n};\n\n// REST Controller\n\nexport async function getAll(req: Request, res: Response, next: NextFunction) {\n  try {\n    const currencies = await currencyService.find({});\n    return res.status(200).json({ success: true, currencies });\n  } catch (err) {\n    res.status(500).json({ err: 'Internal server error', success: false });\n  }\n}\n\nexport async function getOne(req: Request, res: Response, next: NextFunction) {\n  try {\n    const currency = await currencyService.findOne({ _id: req.params._id });\n    return res.status(200).json({ success: true, currency });\n  } catch (err) {\n    res.status(500).json({ err: 'Internal server error', success: false });\n  }\n}\n\nexport async function createOne(\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  try {\n    const currency = await currencyService.create(req.body);\n    return res.status(200).json({ success: true, currency });\n  } catch (err) {\n    res.status(500).json({ err: 'Internal server error', success: false });\n  }\n}\n\nexport async function updateOne(\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  try {\n    const currency = await currencyService.updateOne(\n      { _id: req.params._id },\n      req.body\n    );\n    return res.status(200).json({ success: true, currency });\n  } catch (err) {\n    res.status(500).json({ err: 'Internal server error', success: false });\n  }\n}\n\nexport async function pagination(\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  try {\n    const data = await currencyService.pagination(\n      Number(req.params.page),\n      Number(req.params.perPage)\n    );\n    return res.status(200).json({ success: true, pagination: data });\n  } catch (err) {\n    res.status(500).json({ err: 'Internal server error', success: false });\n  }\n}\n\nexport { currencyQueries, currencyMutations };\n"]}