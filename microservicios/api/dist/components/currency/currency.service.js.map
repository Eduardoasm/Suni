{"version":3,"file":"currency.service.js","sourceRoot":"/","sources":["components/currency/currency.service.ts"],"names":[],"mappings":";;;;AAMA,2CAA2C;AAC3C,uCAA4C;AAC5C,qDAAuD;AAEvD,SAAsB,OAAO,CAC3B,MAA+B,EAC/B,UAA6C,EAC7C,OAAwC;;QAExC,OAAO,yBAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;IAC9D,CAAC;CAAA;AAND,0BAMC;AAED,SAAsB,IAAI,CACxB,MAA+B,EAC/B,UAA6C,EAC7C,OAAwC;;QAExC,OAAO,yBAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;IAC3D,CAAC;CAAA;AAND,oBAMC;AAED,SAAsB,SAAS,CAC7B,MAA+B,EAC/B,MAAsC,EACtC,OAAwC;;QAExC,OAAO,yBAAQ,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;IAC5D,CAAC;CAAA;AAND,8BAMC;AAED,SAAsB,MAAM,CAAC,QAAmB;;QAC9C,OAAO,yBAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;CAAA;AAFD,wBAEC;AAED,SAAsB,UAAU,CAC9B,IAAY,EACZ,OAAe,EACf,MAA+B,EAC/B,UAA6C,EAC7C,OAAwC;;QAExC,OAAO,IAAA,qBAAa,EAAC,IAAI,EAAE,OAAO,EAAE,yBAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;IAC7E,CAAC;CAAA;AARD,gCAQC","sourcesContent":["import type {\n  FilterQuery,\n  ProjectionType,\n  QueryOptions,\n  UpdateQuery,\n} from 'mongoose';\n// eslint-disable-next-line import/no-cycle\nimport { paginateModel } from '../../utils';\nimport { ICurrency, Currency } from './currency.model';\n\nexport async function findOne(\n  filter?: FilterQuery<ICurrency>,\n  projection?: ProjectionType<ICurrency> | null,\n  options?: QueryOptions<ICurrency> | null\n) {\n  return Currency.findOne(filter, projection, options).exec();\n}\n\nexport async function find(\n  filter?: FilterQuery<ICurrency>,\n  projection?: ProjectionType<ICurrency> | null,\n  options?: QueryOptions<ICurrency> | null\n) {\n  return Currency.find(filter, projection, options).exec();\n}\n\nexport async function updateOne(\n  filter?: FilterQuery<ICurrency>,\n  update?: UpdateQuery<ICurrency> | null,\n  options?: QueryOptions<ICurrency> | null\n) {\n  return Currency.updateOne(filter, update, options).exec();\n}\n\nexport async function create(currency: ICurrency) {\n  return Currency.create(currency);\n}\n\nexport async function pagination(\n  page: number,\n  perPage: number,\n  filter?: FilterQuery<ICurrency>,\n  projection?: ProjectionType<ICurrency> | null,\n  options?: QueryOptions<ICurrency> | null\n) {\n  return paginateModel(page, perPage, Currency, filter, projection, options);\n}\n"]}