{"version":3,"file":"country.controller.js","sourceRoot":"/","sources":["components/country/country.controller.ts"],"names":[],"mappings":";;;;AACA,sEAA0C;AAC1C,mDAA4C;AAC5C,0EAAoD;AAEpD,SAAsB,MAAM,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;;QAC1E,IAAI;YACF,MAAM,UAAU,GAAG,MAAM,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACjE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACzC;QAAC,OAAO,KAAK,EAAE;YACd,IAAI,CAAC,IAAA,qBAAe,EAAC,GAAG,EAAE,KAAK,CAAC,OAAO,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;SACnE;IACH,CAAC;CAAA;AAPD,wBAOC;AAED,SAAsB,SAAS,CAC7B,GAAY,EACZ,GAAa,EACb,IAAkB;;QAElB,IAAI;YACF,MAAM,UAAU,GAAG,MAAM,cAAc,CAAC,SAAS,CAC/C,GAAG,CAAC,IAAI,CAAC,MAAM,EACf,GAAG,CAAC,IAAI,CAAC,MAAM,CAChB,CAAC;YACF,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACzC;QAAC,OAAO,KAAK,EAAE;YACd,IAAI,CAAC,IAAA,qBAAe,EAAC,GAAG,EAAE,KAAK,CAAC,OAAO,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;SACnE;IACH,CAAC;CAAA;AAdD,8BAcC;AACD,SAAsB,MAAM,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;;QAC1E,IAAI;YACF,MAAM,UAAU,GAAG,MAAM,cAAc,CAAC,IAAI,EAAE,CAAC;YAC/C,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACzC;QAAC,OAAO,KAAK,EAAE;YACd,IAAI,CAAC,IAAA,qBAAe,EAAC,GAAG,EAAE,KAAK,CAAC,OAAO,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;SACnE;IACH,CAAC;CAAA;AAPD,wBAOC;AAED,SAAsB,OAAO,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;;QAC3E,IAAI;YACF,MAAM,UAAU,GAAG,MAAM,cAAc,CAAC,OAAO,CAAC;gBAC9C,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,GAAG;aACpB,CAAC,CAAC;YACH,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACzC;QAAC,OAAO,KAAK,EAAE;YACd,IAAI,CAAC,IAAA,qBAAe,EAAC,GAAG,EAAE,KAAK,CAAC,OAAO,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;SACnE;IACH,CAAC;CAAA;AATD,0BASC;AAED,MAAM,gBAAgB,GAAG;IACvB,aAAa,EAAE,yBAAS,CAAC,iBAAiB,CAAC,SAAS,EAAE;IACtD,aAAa,EAAE,yBAAS,CAAC,iBAAiB,CAAC,SAAS,EAAE;CACvD,CAAC;AAQuB,4CAAgB;AANzC,MAAM,cAAc,GAAG;IACrB,OAAO,EAAE,yBAAS,CAAC,iBAAiB,CAAC,OAAO,EAAE;IAC9C,SAAS,EAAE,yBAAS,CAAC,iBAAiB,CAAC,QAAQ,EAAE;IACjD,cAAc,EAAE,yBAAS,CAAC,iBAAiB,CAAC,KAAK,EAAE;CACpD,CAAC;AAEO,wCAAc","sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport createHttpError from 'http-errors';\nimport { CountryTC } from './country.model';\nimport * as countryService from './country.service';\n\nexport async function create(req: Request, res: Response, next: NextFunction) {\n  try {\n    const newCountry = await countryService.create(req.body.country);\n    return res.status(200).json(newCountry);\n  } catch (error) {\n    next(createHttpError(500, error.message, { err: error.message }));\n  }\n}\n\nexport async function updateOne(\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  try {\n    const newCountry = await countryService.updateOne(\n      req.body.filter,\n      req.body.update\n    );\n    return res.status(200).json(newCountry);\n  } catch (error) {\n    next(createHttpError(500, error.message, { err: error.message }));\n  }\n}\nexport async function getAll(req: Request, res: Response, next: NextFunction) {\n  try {\n    const newCountry = await countryService.find();\n    return res.status(200).json(newCountry);\n  } catch (error) {\n    next(createHttpError(500, error.message, { err: error.message }));\n  }\n}\n\nexport async function findOne(req: Request, res: Response, next: NextFunction) {\n  try {\n    const newCountry = await countryService.findOne({\n      _id: req.params._id,\n    });\n    return res.status(200).json(newCountry);\n  } catch (error) {\n    next(createHttpError(500, error.message, { err: error.message }));\n  }\n}\n\nconst countryMutations = {\n  createCountry: CountryTC.mongooseResolvers.createOne(),\n  updateCountry: CountryTC.mongooseResolvers.updateOne(),\n};\n\nconst countryQueries = {\n  country: CountryTC.mongooseResolvers.findOne(),\n  countries: CountryTC.mongooseResolvers.findMany(),\n  totalCountries: CountryTC.mongooseResolvers.count(),\n};\n\nexport { countryQueries, countryMutations };\n"]}