{"version":3,"file":"country.service.js","sourceRoot":"/","sources":["components/country/country.service.ts"],"names":[],"mappings":";;;;AAMA,mDAAoD;AAEpD,SAAsB,MAAM,CAAC,OAAiB;;QAC5C,OAAO,uBAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC;CAAA;AAFD,wBAEC;AAED,SAAsB,SAAS,CAC7B,MAA6B,EAC7B,MAAoC,EACpC,OAAuC;;QAEvC,OAAO,uBAAO,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;IAC3D,CAAC;CAAA;AAND,8BAMC;AAED,SAAsB,OAAO,CAC3B,MAA8B,EAC9B,UAA4C,EAC5C,OAAuC;;QAEvC,OAAO,uBAAO,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;IACtD,CAAC;CAAA;AAND,0BAMC;AAED,SAAsB,IAAI,CACxB,MAA8B,EAC9B,UAA4C,EAC5C,OAAuC;;QAEvC,OAAO,uBAAO,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;IAC1D,CAAC;CAAA;AAND,oBAMC","sourcesContent":["import type {\n  FilterQuery,\n  ProjectionType,\n  QueryOptions,\n  UpdateQuery,\n} from 'mongoose';\nimport { Country, ICountry } from './country.model';\n\nexport async function create(country: ICountry) {\n  return Country.create(country);\n}\n\nexport async function updateOne(\n  filter: FilterQuery<ICountry>,\n  update: UpdateQuery<ICountry> | null,\n  options?: QueryOptions<ICountry> | null\n) {\n  return Country.updateOne(filter, update, options).exec();\n}\n\nexport async function findOne(\n  filter?: FilterQuery<ICountry>,\n  projection?: ProjectionType<ICountry> | null,\n  options?: QueryOptions<ICountry> | null\n) {\n  return Country.findOne(filter, projection, options);\n}\n\nexport async function find(\n  filter?: FilterQuery<ICountry>,\n  projection?: ProjectionType<ICountry> | null,\n  options?: QueryOptions<ICountry> | null\n) {\n  return Country.find(filter, projection, options).exec();\n}\n"]}