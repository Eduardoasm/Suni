{"version":3,"file":"history.model.js","sourceRoot":"/","sources":["components/history/history.model.ts"],"names":[],"mappings":";;;AAAA,uCAAiE;AACjE,uEAA2D;AAC3D,uCAA6C;AAqB7C,MAAM,aAAa,GAAG,IAAI,iBAAM,CAC9B;IACE,IAAI,EAAE;QACJ,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,MAAM;KACZ;IACD,WAAW,EAAE;QACX,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,IAAI;KACX;IACD,cAAc,EAAE;QACd,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,CAAC,MAAM,EAAE,aAAa,EAAE,MAAM,EAAE,UAAU,EAAE,aAAa,CAAC;QAChE,4EAA4E;KAC7E;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,QAAQ,EAAE,CAAC,IAAI,EAAE,2CAA2C,CAAC;KAC9D;IACD,MAAM,EAAE;QACN,IAAI,EAAE,OAAO;KACd;CACF,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEW,QAAA,OAAO,GAAG,IAAA,gBAAK,EAC1B,SAAS,EACT,aAAa,CACd,CAAC;AAEW,QAAA,SAAS,GAAG,IAAA,0CAAe,EAAkB,eAAc,CAAC,CAAC;AAE1E,iBAAS,CAAC,WAAW,CAAC,MAAM,EAAE;IAC5B,QAAQ,EAAE,GAAG,EAAE,CAAC,aAAM,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;IACnE,WAAW,EAAE;QACX,GAAG,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI;KAC7B;IACD,UAAU,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE;CACxB,CAAC,CAAC","sourcesContent":["import { Schema, Document, Types, Model, model } from 'mongoose';\nimport { composeMongoose } from 'graphql-compose-mongoose';\nimport { IUser, UserTC } from '../user/user';\n\nexport type CollectionNameEnum =\n  | 'user'\n  | 'creditScore'\n  | 'loan'\n  | 'contract'\n  | 'paymentPlan';\n\nexport interface IHistory {\n  _id?: any;\n  user: Types.ObjectId | IUser;\n  description: string;\n  collectionName: CollectionNameEnum;\n  document: Types.ObjectId;\n  active: boolean;\n}\n\nexport type HistoryDocument = Document<Types.ObjectId, any, IHistory> &\n  IHistory;\n\nconst historySchema = new Schema<IHistory>(\n  {\n    user: {\n      type: Schema.Types.ObjectId,\n      ref: 'User',\n    },\n    description: {\n      type: String,\n      trim: true,\n    },\n    collectionName: {\n      type: String,\n      enum: ['user', 'creditScore', 'loan', 'contract', 'paymentPlan'],\n      // required: [true, 'Nombre de la colección en donde ocurrió la actividad'],\n    },\n    document: {\n      type: Schema.Types.ObjectId,\n      required: [true, '_id del documento que generó la actividad'],\n    },\n    active: {\n      type: Boolean,\n    },\n  },\n  { timestamps: true }\n);\n\nexport const History = model<IHistory, Model<IHistory>>(\n  'History',\n  historySchema\n);\n\nexport const HistoryTC = composeMongoose<HistoryDocument>(History as any);\n\nHistoryTC.addRelation('user', {\n  resolver: () => UserTC.mongooseResolvers.dataLoader({ lean: true }),\n  prepareArgs: {\n    _id: (source) => source.user,\n  },\n  projection: { user: 1 },\n});\n"]}