{"version":3,"file":"auth.service.js","sourceRoot":"/","sources":["components/auth/auth.service.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable array-callback-return */\n/* eslint-disable no-unused-expressions */\nimport jwt from 'jsonwebtoken';\nimport { verify } from 'argon2';\nimport { v4 as uuid } from 'uuid';\nimport axios from 'axios';\nimport { formatWallet } from '../../utils/formatWallet';\nimport { BrowserDetectInfo } from '../../types/browser';\nimport { NoSentryError, sendResetPasswordEmail } from '../../utils';\nimport {\n  TAdminDeleteUserInput,\n  TChangePasswordInput,\n  TCreateAdminInput,\n  TGetUserWalletInput,\n  TSignInInput,\n} from './auth.dto';\nimport * as userService from '../user/user/user.service';\nimport { apiPriceBtc } from '../../utils/apiPriceBtc';\nimport { getUserInfo } from '../../utils/walletService/userInfo';\n\nexport async function createAdmin(\n  body: TCreateAdminInput,\n  token: string,\n  _browser?: BrowserDetectInfo | null\n) {\n  if (!token) {\n    return null;\n  }\n  const payload = jwt.decode(token) as { id: string };\n  const userSuperAdmin = await userService.findOne({\n    _id: payload.id,\n    active: true,\n  });\n\n  if (!userSuperAdmin.userRole.includes('superadmin')) {\n    throw new NoSentryError(\n      'El usuario no cuenta con los permisos suficientes'\n    );\n  }\n\n  const _user = await userService.findOne({ email: body.email });\n\n  if (_user) {\n    throw new NoSentryError('Este correo ya se encuenta registrado');\n  }\n\n  const user = await userService.create({\n    ...body,\n    dniType: userService.translateDniType(body.dniType),\n    userRole: 'admin',\n    emailVerify: false,\n    permission: [],\n  });\n\n  await sendResetPasswordEmail({\n    user,\n    os: _browser,\n    url: `${process.env.DASHBOARD_URL}/reset-password/${user?.resetToken}`,\n  });\n\n  return user;\n}\n\nexport async function signIn(\n  body: TSignInInput,\n  _browser?: BrowserDetectInfo | null\n) {\n  const user = await userService.findOne({ email: body.email, active: true });\n  if (!user) {\n    throw new NoSentryError(\n      `No se ha encontrado a un usuario con correo ${body.email}`\n    );\n  }\n\n  const compare = await verify(user.password, body.password);\n\n  if (!compare) {\n    throw new NoSentryError(`La contraseña es incorrecta ${body.email}`);\n  }\n  const token = jwt.sign(\n    JSON.stringify({\n      id: user._id,\n      privilege: user.userRole,\n    }),\n    process.env.SECRET\n  );\n\n  await userService.updateOne(\n    { _id: user._id },\n    {\n      $push: {\n        sessions: [\n          {\n            user: user._id,\n            token,\n            device: `${_browser.os} ${_browser.name} ${_browser.version}`,\n            active: true,\n          },\n        ],\n      },\n    }\n  );\n\n  return {\n    user,\n    token,\n  };\n}\n\nexport async function signOut(token: string) {\n  try {\n    const payload = jwt.decode(token) as { id: string };\n    const user = await userService.findOne({ _id: payload.id, active: true });\n    const sessions = user?.sessions?.map((session) => ({\n      ...(session as any)?._doc,\n      active: false,\n    }));\n    if (user) {\n      const updatedUser = await userService.updateOne(\n        { _id: user._id },\n        {\n          sessions,\n        }\n      );\n      if (updatedUser?.modifiedCount > 0) {\n        return { success: true };\n      }\n      return {\n        success: false,\n        message: 'Error: Error actualizando las sesiones del usuario',\n      };\n    }\n    return { success: false, message: 'Usuario no encontrado' };\n  } catch (error) {\n    throw new NoSentryError('Error cerrando sesión');\n  }\n}\n\nexport async function currentUser(token: string) {\n  if (!token) {\n    return null;\n  }\n  const payload = jwt.decode(token) as { id: string };\n  const user = await userService.findOne({ _id: payload.id, active: true });\n  return { user };\n}\n\nexport async function resetPassword(\n  email: string,\n  browserData: BrowserDetectInfo\n) {\n  const user = await userService.findOne({ email }, '-password');\n\n  if (!user) {\n    throw new NoSentryError(\n      `El usuario con correo ${email} no esta registrado`\n    );\n  }\n  user.resetToken = uuid();\n  user.resetTokenValidity = new Date(Date.now() + 24 * 60 * 60 * 1000); // 24 hours in ms\n  await Promise.all([\n    user.save(),\n    sendResetPasswordEmail({\n      user,\n      os: browserData,\n      url: `${process.env.DASHBOARD_URL}/reset-password/${user?.resetToken}`,\n    }),\n  ]);\n}\n\nexport async function changePassword(data: TChangePasswordInput) {\n  const user = await userService.findOne({\n    resetToken: data.token,\n    resetTokenValidity: {\n      $gt: Date.now(),\n    },\n  });\n  if (!user) {\n    throw new NoSentryError(`El token ha expirado, debe solicitar uno nuevo`);\n  }\n  user.password = data.password;\n  user.resetToken = undefined;\n  user.resetTokenValidity = undefined;\n  await user.save();\n}\n\nexport async function signInAdmin(\n  body: TSignInInput,\n  _browser?: BrowserDetectInfo | null\n) {\n  const user = await userService.findOne({\n    email: body.email,\n    active: true,\n    userRole: 'admin' || 'superadmin',\n  });\n  if (!user) {\n    throw new NoSentryError(\n      `No se ha encontrado a un usuario con correo ${body.email}`\n    );\n  }\n  const compare = await verify(user.password, body.password);\n\n  if (!compare) {\n    throw new NoSentryError(`La contraseña es incorrecta ${body.email}`);\n  }\n  const token = jwt.sign(\n    JSON.stringify({\n      id: user._id,\n      privilege: user.userRole,\n    }),\n    process.env.SECRET\n  );\n\n  const sessions = user?.sessions?.map((session) => ({\n    ...(session as any)?._doc,\n    active: false,\n  }));\n  sessions.push({\n    user: user._id,\n    token,\n    device: `${_browser.os} ${_browser.name} ${_browser.version}`,\n    active: true,\n  });\n\n  await userService.updateOne(\n    { _id: user._id },\n    {\n      sessions,\n    }\n  );\n\n  return {\n    user,\n    token,\n  };\n}\n\nexport async function deleteUser(token: string) {\n  if (!token) {\n    return false;\n  }\n  const payload = jwt.decode(token) as { id: string };\n  const user = await userService.findOne({ _id: payload.id, active: true });\n\n  await userService.updateOne(\n    { _id: user._id },\n    { email: user._id, dni: user._id, active: false },\n    { runValidators: true, new: true }\n  );\n  return true;\n}\n\nexport async function adminDeleteUser(\n  body: TAdminDeleteUserInput,\n  token: string\n) {\n  const ROLE = ['admin', 'superadmin'];\n  if (!token) {\n    return false;\n  }\n  const payload = jwt.decode(token) as { id: string };\n  const admin = await userService.findOne({ _id: payload.id, active: true });\n  if (!admin || !ROLE.includes(admin.userRole)) {\n    throw new NoSentryError('No tiene permiso para realizar esta acción');\n  }\n  const _deleteUser = await userService.updateOne(\n    { _id: body.userId },\n    { email: body.userId, dni: body.userId, active: false },\n    { runValidators: true, new: true }\n  );\n  return true;\n}\n\nexport async function getUserWallets(token: string, body: TGetUserWalletInput) {\n  try {\n    const config = {\n      method: 'get',\n      baseURL: process.env.SERVICE_URL,\n      url: '/wallet/user-balances',\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    };\n    const { data } = await axios(config);\n    const btcPrice = await apiPriceBtc();\n    const userWallets = data?.data\n      ?.filter(\n        (wallet) =>\n          (wallet?.type?.toLowerCase() === body?.currency?.toLowerCase() &&\n            body?.currency) ||\n          !body?.currency\n      )\n      ?.map((wallet) => formatWallet(wallet, btcPrice));\n    return { userWallets };\n  } catch (err) {\n    throw new NoSentryError(err);\n  }\n}\n\nexport async function validateForKYC(token: string) {\n  const { data: user } = await getUserInfo(token);\n\n  if (user?.userDniDuplicated) {\n    return {\n      isAllowed: false,\n      message: 'Tu DNI ya ha sido validado con una cuenta de Suni',\n    };\n  }\n  if (\n    (user?.metamapStatus?.status === 'UNVERIFIED' &&\n      !user?.metamapStatus?.dni_value) ||\n    !user?.metamapStatus\n  )\n    return { isAllowed: true, message: 'El usuario no ha realizado el kyc' };\n  return { isAllowed: false, message: 'KYC ya realizado' };\n}\n"]}