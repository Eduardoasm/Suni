{"version":3,"file":"auth.routes.js","sourceRoot":"/","sources":["components/auth/auth.routes.ts"],"names":[],"mappings":";;AAAA,qCAAiC;AAEjC,uDAM2B;AAE3B,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAiHG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6BG;AACH,MAAM,CAAC,IAAI,CAAC,0BAA0B,EAAE,0CAAwB,CAAC,CAAC;AAElE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6BG;AACH,MAAM,CAAC,IAAI,CAAC,yBAAyB,EAAE,yCAAuB,CAAC,CAAC;AAEhE;;;;;;;;;;;;;;;;;;;;;;GAsBG;AACH,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE,mCAAiB,CAAC,CAAC;AAEpD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6BG;AACH,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,kCAAgB,CAAC,CAAC;AAClD,MAAM,CAAC,GAAG,CAAC,uBAAuB,EAAE,iCAAe,CAAC,CAAC;AAErD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6BG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6BG;AAEH,kBAAe,MAAM,CAAC","sourcesContent":["import { Router } from 'express';\n\nimport {\n  changePasswordController,\n  resetPasswordController,\n  signOutController,\n  signInController,\n  currentUserRest,\n} from './auth.controller';\n\nconst router = Router();\n\n/**\n * @openapi\n * components:\n *   schemas:\n *    SuccessfulResponse:\n *      type: object\n *      properties:\n *        success:\n *          type: boolean\n *\n *    UnsuccessfulResponse:\n *      type: object\n *      properties:\n *        success:\n *          type: boolean\n *        err:\n *          type: string\n *\n *    ChangePassword:\n *      type: object\n *      properties:\n *        token:\n *          type: string\n *          description: The reset token for the user\n *        password:\n *          type: string\n *          description: The new password for the user\n *\n *    ResetPassword:\n *      type: object\n *      properties:\n *        token:\n *          type: string\n *          description: The reset token for the user\n *        password:\n *          type: string\n *          description: The new password for the user\n *\n *    SignIn:\n *      type: object\n *      properties:\n *        email:\n *          type: string\n *          description: The reset token for the user\n *        password:\n *          type: string\n *          description: The new password for the user\n *\n *    RegisterUser:\n *      type: object\n *      properties:\n *        email:\n *          type: string\n *          description: The email for the new user\n *        password:\n *          type: string\n *          description: The password for the new user\n *        firstName:\n *          type: string\n *          description: The first name of user\n *        lastName:\n *          type:  string\n *          description: The last name of user\n *        dni:\n *          type: string\n *          description: The dni for the new user\n *        dniType:\n *          type: string\n *          description: The type of dni for the new user\n *          enum: ['V', 'E', 'J', 'G', 'P', 'N/A']\n *\n *    CreateUser:\n *      type: object\n *      properties:\n *        email:\n *          type: string\n *          description: The email for the new user\n *        password:\n *          type: string\n *          description: The password for the new user\n *        firstName:\n *          type: string\n *          description: The first name of user\n *        lastName:\n *          type:  string\n *          description: The last name of user\n *        dni:\n *          type: string\n *          description: The dni for the new user\n *        dniType:\n *          type: string\n *          description: The type of dni for the new user\n *          enum: ['V', 'E', 'J', 'G', 'P', 'N/A']\n *        userRole:\n *          type: string\n *          enum: ['client', 'admin', 'superadmin']\n *        permissions:\n *          type: array\n *          items:\n *            $ref: '#/components/schemas/PermissionInput'\n *\n *    PermissionInput:\n *      type: object\n *      properties:\n *        name:\n *          type: string\n *        key:\n *          type: string\n *        options:\n *          type: array\n *          items:\n *            type: string\n *            enum: ['create', read', 'update', 'delete']\n */\n\n/**\n * @openapi\n * /api/v1/auth/change-password:\n *   post:\n *     description: Change the password for an user.\n *     tags:\n *      - auth\n *     requestBody:\n *      required: true\n *      content:\n *        application/json:\n *          schema:\n *            type: object\n *            $ref: '#/components/schemas/ChangePassword'\n *     responses:\n *       200:\n *         description: Change the password for an user.\n *         content:\n *          application/json:\n *            schema:\n *              type: object\n *              $ref: '#/components/schemas/SuccessfulResponse'\n *       500:\n *         description: Internal Server Error.\n *         content:\n *          application/json:\n *            schema:\n *              type: object\n *              $ref: '#/components/schemas/UnsuccessfulResponse'\n */\nrouter.post('/v1/auth/change-password', changePasswordController);\n\n/**\n * @openapi\n * /api/v1/auth/reset-password:\n *   post:\n *     description: Send a reset the password email for an user.\n *     tags:\n *      - auth\n *     requestBody:\n *      required: true\n *      content:\n *        application/json:\n *          schema:\n *            type: object\n *            $ref: '#/components/schemas/ResetPassword'\n *     responses:\n *       200:\n *         description: Send a reset the password email for an user.\n *         content:\n *          application/json:\n *            schema:\n *              type: object\n *              $ref: '#/components/schemas/SuccessfulResponse'\n *       500:\n *         description: Internal Server Error.\n *         content:\n *          application/json:\n *            schema:\n *              type: object\n *              $ref: '#/components/schemas/UnsuccessfulResponse'\n */\nrouter.post('/v1/auth/reset-password', resetPasswordController);\n\n/**\n * @openapi\n * /api/v1/auth/sign-out:\n *   post:\n *     description: Delete the cookie of the current user.\n *     tags:\n *      - auth\n *     responses:\n *       200:\n *         description: Delete the cookie of the current user.\n *         content:\n *          application/json:\n *            schema:\n *              type: object\n *              $ref: '#/components/schemas/SuccessfulResponse'\n *       500:\n *         description: Internal Server Error.\n *         content:\n *          application/json:\n *            schema:\n *              type: object\n *              $ref: '#/components/schemas/UnsuccessfulResponse'\n */\nrouter.post('/v1/auth/sign-out', signOutController);\n\n/**\n * @openapi\n * /api/v1/auth/sign-in:\n *   post:\n *     description: Sign in an user.\n *     tags:\n *      - auth\n *     requestBody:\n *      required: true\n *      content:\n *        application/json:\n *          schema:\n *            type: object\n *            $ref: '#/components/schemas/SignIn'\n *     responses:\n *       200:\n *         description: Sign in na user.\n *         content:\n *          application/json:\n *            schema:\n *              type: object\n *              $ref: '#/components/schemas/SuccessfulResponse'\n *       500:\n *         description: Internal Server Error.\n *         content:\n *          application/json:\n *            schema:\n *              type: object\n *              $ref: '#/components/schemas/UnsuccessfulResponse'\n */\nrouter.post('/v1/auth/sign-in', signInController);\nrouter.get('/v1/auth/current-user', currentUserRest);\n\n/**\n * @openapi\n * /api/v1/auth/sign-up:\n *   post:\n *     description: Register a new user.\n *     tags:\n *      - auth\n *     requestBody:\n *      required: true\n *      content:\n *        application/json:\n *          schema:\n *            type: object\n *            $ref: '#/components/schemas/RegisterUser'\n *     responses:\n *       200:\n *         description: Send a reset the password email for an user.\n *         content:\n *          application/json:\n *            schema:\n *              type: object\n *              $ref: '#/components/schemas/SuccessfulResponse'\n *       500:\n *         description: Internal Server Error.\n *         content:\n *          application/json:\n *            schema:\n *              type: object\n *              $ref: '#/components/schemas/UnsuccessfulResponse'\n */\n\n/**\n * @openapi\n * /api/v1/auth/create-user:\n *   post:\n *     description: Creates a new user.\n *     tags:\n *      - auth\n *     requestBody:\n *      required: true\n *      content:\n *        application/json:\n *          schema:\n *            type: object\n *            $ref: '#/components/schemas/CreateUser'\n *     responses:\n *       200:\n *         description: Create a new user.\n *         content:\n *          application/json:\n *            schema:\n *              type: object\n *              $ref: '#/components/schemas/SuccessfulResponse'\n *       500:\n *         description: Internal Server Error.\n *         content:\n *          application/json:\n *            schema:\n *              type: object\n *              $ref: '#/components/schemas/UnsuccessfulResponse'\n */\n\nexport default router;\n"]}