{"version":3,"file":"creditScore.service.js","sourceRoot":"/","sources":["components/creditScore/creditScore/creditScore.service.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable import/no-cycle */\nimport axios from 'axios';\nimport type {\n  FilterQuery,\n  ProjectionType,\n  QueryOptions,\n  UpdateQuery,\n  UpdateWithAggregationPipeline,\n} from 'mongoose';\nimport dayjs from 'dayjs';\nimport { NoSentryError, paginateModel } from '../../../utils';\nimport { ICreditScore, CreditScore } from './creditScore.model';\nimport {\n  TCreateCreditScore,\n  TGetClientWithCreditScoreInput,\n  TGetCreditScoreUser,\n} from './creditScore.dto';\nimport { getUserInfo } from '../../../utils/walletService/userInfo';\nimport * as settingsService from '../../settings/settings/settings.service';\n\nexport async function findOne(\n  filter?: FilterQuery<ICreditScore>,\n  projection?: ProjectionType<ICreditScore> | null,\n  options?: QueryOptions<ICreditScore> | null\n) {\n  return CreditScore.findOne(filter, projection, options).exec();\n}\n\nexport async function find(\n  filter?: FilterQuery<ICreditScore>,\n  projection?: ProjectionType<ICreditScore> | null,\n  options?: QueryOptions<ICreditScore> | null\n) {\n  return CreditScore.find(filter, projection, options).exec();\n}\n\nexport async function updateOne(\n  filter: FilterQuery<ICreditScore>,\n  update: UpdateQuery<ICreditScore> | UpdateWithAggregationPipeline,\n  options?: QueryOptions<ICreditScore> | null\n) {\n  return CreditScore.updateOne(filter, update, options).exec();\n}\n\nexport async function getClientWithCreditScore(\n  body: TGetClientWithCreditScoreInput\n) {\n  const client = await axios.get(\n    `${process.env.SERVICE_URL}/user/${body?.id}`,\n    {\n      headers: {\n        Authorization: `Bearer ${process.env.TOKEN_ADMIN_SUNI}`,\n      },\n    }\n  );\n  const creditScore = await CreditScore.findOne({\n    user: body?.id,\n  });\n  const settings = await settingsService.getActiveSetting();\n  const creditScoreRange = settings?.creditScoreRange;\n  let data;\n  if (creditScore) {\n    const values = creditScore?.values?.sort((valueA, valueB) =>\n      dayjs(valueA?.createdAt).isBefore(dayjs(valueB?.createdAt)) ? 1 : -1\n    );\n    const suniValues = values?.filter((val) => val?.provider === 'suni');\n    const credoLabValues = values?.filter(\n      (val) => val?.provider === 'credolab'\n    );\n    let rangeCredoLab = 0;\n    let rangeSuni = 0;\n    creditScoreRange?.forEach((scoreRange, index) => {\n      if (credoLabValues[0]?.value >= scoreRange.initial) {\n        if (\n          index === creditScoreRange.length - 1 &&\n          credoLabValues[0]?.value >= scoreRange?.final\n        ) {\n          rangeCredoLab = index;\n        } else if (credoLabValues[0]?.value <= scoreRange?.final) {\n          rangeCredoLab = index;\n        }\n      }\n      if (suniValues[0]?.value >= scoreRange.initial) {\n        if (\n          index === creditScoreRange.length - 1 &&\n          suniValues[0]?.value >= scoreRange?.final\n        ) {\n          rangeCredoLab = index;\n        } else if (suniValues[0]?.value <= scoreRange?.final) {\n          rangeCredoLab = index;\n        }\n        rangeSuni = index;\n      }\n    });\n    const currentCreditScore = {\n      credoLab: credoLabValues[0]\n        ? {\n            ...(credoLabValues[0] as any)?._doc,\n            range: rangeCredoLab,\n          }\n        : null,\n      suni: suniValues[0]\n        ? {\n            ...(suniValues[0] as any)?._doc,\n            range: rangeSuni,\n          }\n        : null,\n    };\n    data = {\n      client,\n      currentCreditScore,\n      historicalCreditScore: creditScore,\n    };\n  } else {\n    data = {\n      client: client?.data?.data ?? {},\n      currentCreditScore: {\n        credoLab: null,\n        suni: null,\n      },\n      historicalCreditScore: creditScore,\n    };\n  }\n\n  return { ...data };\n}\n\nexport async function getClientsWithCreditScore(\n  filter?: FilterQuery<ICreditScore>\n) {\n  const users = await axios.get(`${process.env.SERVICE_URL}/user`, {\n    headers: {\n      Authorization: `Bearer ${process.env.TOKEN_ADMIN_SUNI}`,\n    },\n  });\n  const clients = users?.data?.data ?? [];\n  const clientObject = [];\n  const creditScores = await CreditScore.find({ values: { $ne: undefined } });\n  const settings = await settingsService.getActiveSetting();\n  const creditScoreRange = settings?.creditScoreRange;\n  let data;\n  for (const client of clients) {\n    const creditScore =\n      creditScores.find((score) => score?.user === client?.id) ?? null;\n    if (creditScore) {\n      const values = creditScore?.values?.sort((valueA, valueB) =>\n        dayjs(valueA?.createdAt).isBefore(dayjs(valueB?.createdAt)) ? 1 : -1\n      );\n      const suniValues = values?.filter((val) => val?.provider === 'suni');\n      const credoLabValues = values?.filter(\n        (val) => val?.provider === 'credolab'\n      );\n      let rangeCredoLab = 0;\n      let rangeSuni = 0;\n      creditScoreRange?.forEach((scoreRange, index) => {\n        if (credoLabValues[0]?.value >= scoreRange.initial) {\n          if (\n            index === creditScoreRange.length - 1 &&\n            credoLabValues[0]?.value >= scoreRange?.final\n          ) {\n            rangeCredoLab = index;\n          } else if (credoLabValues[0]?.value <= scoreRange?.final) {\n            rangeCredoLab = index;\n          }\n        }\n        if (suniValues[0]?.value >= scoreRange.initial) {\n          if (\n            index === creditScoreRange.length - 1 &&\n            suniValues[0]?.value >= scoreRange?.final\n          ) {\n            rangeCredoLab = index;\n          } else if (suniValues[0]?.value <= scoreRange?.final) {\n            rangeCredoLab = index;\n          }\n          rangeSuni = index;\n        }\n      });\n      const currentCreditScore = {\n        credoLab: credoLabValues[0]\n          ? {\n              ...(credoLabValues[0] as any)?._doc,\n              range: rangeCredoLab,\n            }\n          : null,\n        suni: suniValues[0]\n          ? {\n              ...(suniValues[0] as any)?._doc,\n              range: rangeSuni,\n            }\n          : null,\n      };\n      data = {\n        client,\n        currentCreditScore,\n        historicalCreditScore: creditScore,\n      };\n    } else {\n      data = {\n        client,\n        currentCreditScore: {\n          credoLab: null,\n          suni: null,\n        },\n        historicalCreditScore: creditScore,\n      };\n    }\n\n    clientObject.push(data);\n  }\n\n  return { clients: clientObject };\n}\n\nexport async function create(\n  body: TCreateCreditScore,\n  token: string,\n  session?: any\n) {\n  const { data: user } = await getUserInfo(token);\n\n  if (!user) {\n    throw new NoSentryError('Invalid user');\n  }\n\n  const creditScore = await CreditScore.findOne({ user: user.id }, null, {\n    session,\n  });\n\n  if (creditScore) {\n    creditScore.values.push(body.values);\n    await creditScore.save();\n    return creditScore;\n  }\n\n  return CreditScore.create([{ user: user.id, values: body.values }], {\n    session,\n  });\n}\n\nexport async function pagination(\n  page: number,\n  perPage: number,\n  filter?: FilterQuery<ICreditScore>,\n  projection?: ProjectionType<ICreditScore> | null,\n  options?: QueryOptions<ICreditScore> | null\n) {\n  return paginateModel(page, perPage, CreditScore, filter, projection, options);\n}\n\nexport async function getCreditScoreUser(body: TGetCreditScoreUser) {\n  const startDate = new Date(body.startDate);\n  const endDate = new Date(body.endDate).setUTCHours(23, 59, 59);\n  const enDateLastHour = new Date(endDate);\n\n  if (!body.userId) {\n    throw new NoSentryError('Error, Invalid user');\n  }\n\n  const creditScore = await CreditScore.aggregate([\n    {\n      $unwind: '$values',\n    },\n    {\n      $match: {\n        $and: [\n          {\n            user: body.userId,\n          },\n          {\n            'values.createdAt': {\n              $gte: startDate,\n              $lte: enDateLastHour,\n            },\n          },\n        ],\n      },\n    },\n    {\n      $group: {\n        _id: '$_id',\n        user: { $first: '$user' },\n        values: { $push: '$values' },\n      },\n    },\n  ]);\n\n  if (!creditScore) {\n    throw new NoSentryError('Error in get CreditScore');\n  }\n\n  return creditScore[0];\n}\n\nasync function getCredolabAuthAccessToken() {\n  try {\n    const { data } = await axios.post(\n      `${process.env.CREDOLAB_URL}/api/account/v1/login`,\n      {\n        userEmail: process.env.CREDOLAB_EMAIL,\n        password: process.env.CREDOLAB_PASSWORD,\n      }\n    );\n    return data.access_token;\n  } catch (error) {\n    console.log(error, 'credolab auth error');\n    throw new NoSentryError(`General auth error credolab: ${error.title}`);\n  }\n}\n\nexport async function getCredolabDataset(referenceNumber: string) {\n  try {\n    const accessToken = await getCredolabAuthAccessToken();\n\n    const config = {\n      method: 'get',\n      baseURL: process.env.CREDOLAB_URL,\n      url: `/api/insights/v1/${referenceNumber}`,\n      headers: {\n        authorization: `Bearer ${accessToken}`,\n      },\n    };\n    const { data } = await axios(config);\n\n    return data.insights;\n  } catch (error) {\n    throw new NoSentryError(`Error credolab dataset: ${error.title}`);\n  }\n}\n\n// export async function getCreditScoreCredolab(token: string): Promise<any> {\n//   // servicio para obtener el credit score\n//   if (!token) {\n//     return new NoSentryError('User not Authorized');\n//   }\n\n//   const { user } = await currentUser(token);\n\n//   const userCreditScore = user.creditScores[user.creditScores.length - 1];\n\n//   const { referenceNumber } = await CreditScore.findOne({\n//     _id: userCreditScore._id,\n//   });\n\n//   const accessToken = await getCredolabUserAccessToken();\n\n//   const data = await getCredolabUserValues(accessToken, referenceNumber);\n\n//   const userCreditScoreCredolab = await createCreditScoreCredolab(\n//     user,\n//     referenceNumber,\n//     data\n//   );\n\n//   return userCreditScoreCredolab;\n// }\n"]}