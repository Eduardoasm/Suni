{"version":3,"file":"creditScore.model.js","sourceRoot":"/","sources":["components/creditScore/creditScore/creditScore.model.ts"],"names":[],"mappings":";;;AAAA,uEAA2D;AAC3D,uCAAiE;AACjE,4FAGuD;AAY1C,QAAA,iBAAiB,GAAG,IAAI,iBAAM,CACzC;IACE,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;KACb;IACD,MAAM,EAAE,CAAC,kDAAuB,CAAC;CAClC,EACD;IACE,UAAU,EAAE,IAAI;CACjB,CACF,CAAC;AAEW,QAAA,WAAW,GAAG,IAAA,gBAAK,EAC9B,aAAa,EACb,yBAAiB,CAClB,CAAC;AAEW,QAAA,aAAa,GAAG,IAAA,0CAAe,EAC1C,mBAAkB,CACnB,CAAC","sourcesContent":["import { composeMongoose } from 'graphql-compose-mongoose';\nimport { Schema, Model, Types, Document, model } from 'mongoose';\nimport {\n  ICreditScoreValues,\n  creditScoreValuesSchema,\n} from '../creditScoreValues/creditScoreValues.schema';\n\nexport interface ICreditScore {\n  _id?: any;\n  user: string;\n  values: [ICreditScoreValues];\n  active?: boolean;\n}\n\nexport type CreditScoreDocument = Document<Types.ObjectId, any, ICreditScore> &\n  ICreditScore;\n\nexport const creditScoreSchema = new Schema<ICreditScore>(\n  {\n    user: {\n      type: String,\n    },\n    values: [creditScoreValuesSchema],\n  },\n  {\n    timestamps: true,\n  }\n);\n\nexport const CreditScore = model<ICreditScore, Model<ICreditScore>>(\n  'CreditScore',\n  creditScoreSchema\n);\n\nexport const CreditScoreTC = composeMongoose<CreditScoreDocument>(\n  CreditScore as any\n);\n"]}