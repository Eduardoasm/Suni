{"version":3,"file":"creditScore.dto.js","sourceRoot":"/","sources":["components/creditScore/creditScore.dto.ts"],"names":[],"mappings":";;;AACA,2DAAkE;AAErD,QAAA,mBAAmB,GAAG,iCAAa,CAAC,WAAW,EAAE,CAAC;AAClD,QAAA,eAAe,GAAG,iCAAa,CAAC,OAAO,EAAE,CAAC;AAC1C,QAAA,qBAAqB,GAChC,iCAAa,CAAC,aAAa,EAAE,CAAC,WAAW,EAAE,CAAC;AACjC,QAAA,sBAAsB,GAAG,iCAAa,CAAC,cAAc,EAAE,CAAC;AAOxD,QAAA,iBAAiB,GAAG;;;;;CAKhC,CAAC;AAEW,QAAA,gBAAgB,GAAG;;;;CAI/B,CAAC;AASW,QAAA,uBAAuB,GAAG;;;;;;;CAOtC,CAAC","sourcesContent":["import { Types } from 'mongoose';\nimport { CreditScoreTC, ProviderEnum } from './creditScore.model';\n\nexport const CreditScoreTypeName = CreditScoreTC.getTypeName();\nexport const CreditScoreType = CreditScoreTC.getType();\nexport const CreditScoreTypePlural =\n  CreditScoreTC.getTypePlural().getTypeName();\nexport const CreditScoreTypeNotNull = CreditScoreTC.getTypeNonNull();\n\nexport type TCredolabData = {\n  data: string;\n  realIp: string;\n};\n\nexport const CredolabDataInput = `\n  input CredolabData {\n    data: String!\n    realIp: String!\n  }\n`;\n\nexport const CredolabDataType = `\n  type CredolabDataInfo {\n    success: Boolean\n  }\n`;\n\nexport type TGetCreditScoreUser = {\n  _id: Types.ObjectId;\n  provider: ProviderEnum;\n  startDate: Date;\n  endDate: Date;\n};\n\nexport const GetCreditScoreUserInput = `\n  input GetCreditScore {\n    _id: MongoID\n    provider: String\n    startDate: Date\n    endDate: Date\n  }\n`;\n"]}