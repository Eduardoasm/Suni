{"version":3,"file":"profit.controller.js","sourceRoot":"/","sources":["components/profit/profit.controller.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable import/no-cycle */\nimport type { Request, Response, NextFunction } from 'express';\nimport { schemaComposer } from 'graphql-compose';\nimport { ProfitTC } from './profit.model';\nimport * as profitService from './profit.service';\n\nconst profitQueries = {\n  profit: ProfitTC.mongooseResolvers.findOne(),\n  profits: ProfitTC.mongooseResolvers.findMany({\n    limit: { defaultValue: 1000000 },\n  }),\n  profitPagination: ProfitTC.mongooseResolvers.pagination(),\n};\n\nconst profitMutations = {\n  updateProfit: ProfitTC.mongooseResolvers.updateOne(),\n  createProfit: ProfitTC.mongooseResolvers.createOne(),\n};\n\n// REST Controller\n\nexport async function getAll(req: Request, res: Response, next: NextFunction) {\n  try {\n    const profit = await profitService.find({});\n    return res.status(200).json({ success: true, profit });\n  } catch (err) {\n    res.status(500).json({ err: 'Internal server error', success: false });\n  }\n}\n\nexport async function getOne(req: Request, res: Response, next: NextFunction) {\n  try {\n    const profit = await profitService.findOne({\n      _id: req.params._id,\n    });\n    return res.status(200).json({ success: true, profit });\n  } catch (err) {\n    res.status(500).json({ err: 'Internal server error', success: false });\n  }\n}\n\nexport async function createOne(\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  try {\n    const profit = await profitService.create(req.body);\n    return res.status(200).json({ success: true, profit });\n  } catch (err) {\n    res.status(500).json({ err: 'Internal server error', success: false });\n  }\n}\n\nexport async function updateOne(\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  try {\n    const profit = await profitService.updateOne(\n      { _id: req.params._id },\n      req.body\n    );\n    return res.status(200).json({ success: true, profit });\n  } catch (err) {\n    res.status(500).json({ err: 'Internal server error', success: false });\n  }\n}\n\nexport async function pagination(\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  try {\n    const data = await profitService.pagination(\n      Number(req.params.page),\n      Number(req.params.perPage)\n    );\n    return res.status(200).json({ success: true, pagination: data });\n  } catch (err) {\n    res.status(500).json({ err: 'Internal server error', success: false });\n  }\n}\n\nexport { profitQueries, profitMutations };\n"]}