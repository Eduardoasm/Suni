{"version":3,"file":"profit.model.js","sourceRoot":"/","sources":["components/profit/profit.model.ts"],"names":[],"mappings":";;;AAAA,uCAAiE;AACjE,uEAA2D;AAC3D,mDAA6D;AAW7D,MAAM,YAAY,GAAG,IAAI,iBAAM,CAC7B;IACE,QAAQ,EAAE;QACR,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,UAAU;KAChB;IACD,MAAM,EAAE;QACN,IAAI,EAAE,MAAM;KACb;IACD,MAAM,EAAE;QACN,IAAI,EAAE,OAAO;KACd;CACF,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEW,QAAA,MAAM,GAAG,IAAA,gBAAK,EAA0B,QAAQ,EAAE,YAAY,CAAC,CAAC;AAEhE,QAAA,QAAQ,GAAG,IAAA,0CAAe,EAAiB,cAAa,CAAC,CAAC;AAEvE,gBAAQ,CAAC,WAAW,CAAC,UAAU,EAAE;IAC/B,QAAQ,EAAE,GAAG,EAAE,CAAC,qBAAU,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;IACvE,WAAW,EAAE;QACX,GAAG,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ;KACjC;IACD,UAAU,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE;CAC5B,CAAC,CAAC","sourcesContent":["import { Schema, Document, Types, Model, model } from 'mongoose';\nimport { composeMongoose } from 'graphql-compose-mongoose';\nimport { ContractTC, IContract } from '../contract/contract';\n\nexport interface IProfit {\n  _id?: any;\n  contract: Types.ObjectId | IContract;\n  amount: number;\n  active: boolean;\n}\n\nexport type ProfitDocument = Document<Types.ObjectId, any, IProfit> & IProfit;\n\nconst profitSchema = new Schema<IProfit>(\n  {\n    contract: {\n      type: Schema.Types.ObjectId,\n      ref: 'Contract',\n    },\n    amount: {\n      type: Number,\n    },\n    active: {\n      type: Boolean,\n    },\n  },\n  { timestamps: true }\n);\n\nexport const Profit = model<IProfit, Model<IProfit>>('Profit', profitSchema);\n\nexport const ProfitTC = composeMongoose<ProfitDocument>(Profit as any);\n\nProfitTC.addRelation('contract', {\n  resolver: () => ContractTC.mongooseResolvers.dataLoader({ lean: true }),\n  prepareArgs: {\n    _id: (source) => source.contract,\n  },\n  projection: { contract: 1 },\n});\n"]}