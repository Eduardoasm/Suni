{"version":3,"file":"loanRequest.dto.js","sourceRoot":"/","sources":["components/loanRequest/loanRequest.dto.ts"],"names":[],"mappings":";;;AACA,2DAAoD;AACpD,4CAA6C;AAEhC,QAAA,mBAAmB,GAAG,iCAAa,CAAC,WAAW,EAAE,CAAC;AAClD,QAAA,eAAe,GAAG,iCAAa,CAAC,OAAO,EAAE,CAAC;AAC1C,QAAA,qBAAqB,GAChC,iCAAa,CAAC,aAAa,EAAE,CAAC,WAAW,EAAE,CAAC;AACjC,QAAA,sBAAsB,GAAG,iCAAa,CAAC,cAAc,EAAE,CAAC;AAaxD,QAAA,sBAAsB,GAAG;;;;;;;;;;;;;CAarC,CAAC;AAWW,QAAA,oBAAoB,GAAG;;;;;;;;;CASnC,CAAC;AAEW,QAAA,uBAAuB,GAAG;;mBAEpB,uBAAe;iBACjB,yBAAa;;CAE7B,CAAC;AAEW,QAAA,yBAAyB,GAAG;;;;;;EAMvC,CAAC;AAEU,QAAA,0BAA0B,GAAG;;;;;CAKzC,CAAC;AAWW,QAAA,mBAAmB,GAAG;;;;CAIlC,CAAC;AAEW,QAAA,2BAA2B,GAAG;;mBAExB,yBAAa;;CAE/B,CAAC;AAEW,QAAA,2BAA2B,GAAG;;;;;CAK1C,CAAC;AAUW,QAAA,sBAAsB,GAAG;;;;;;;;CAQrC,CAAC;AAOW,QAAA,0BAA0B,GAAG;;;;;CAKzC,CAAC;AAOW,QAAA,sBAAsB,GAAG;;;;;CAKrC,CAAC;AAEW,QAAA,qBAAqB,GAAG;;;;;CAKpC,CAAC;AAMW,QAAA,sBAAsB,GAAG;;;;CAIrC,CAAC;AAcW,QAAA,yBAAyB,GAAG;;;;CAIxC,CAAC;AAEW,QAAA,2BAA2B,GAAG;;;;;;;;CAQ1C,CAAC","sourcesContent":["import { Types } from 'mongoose';\nimport { LoanRequestTC } from './loanRequest.model';\nimport { LoanOfferType } from '../loanOffer';\n\nexport const LoanRequestTypeName = LoanRequestTC.getTypeName();\nexport const LoanRequestType = LoanRequestTC.getType();\nexport const LoanRequestTypePlural =\n  LoanRequestTC.getTypePlural().getTypeName();\nexport const LoanRequestTypeNotNull = LoanRequestTC.getTypeNonNull();\n\nexport type versionEnum = 'v2';\n\nexport type TCreateLoanRequest = {\n  currency: string;\n  selectedWallet: string;\n  amount: number;\n  installments: number;\n  credolabReferenceNumber: string;\n  version?: versionEnum;\n};\n\nexport const CreateLoanRequestInput = `\n  input CreateLoanRequest {\n    currency: String!\n    selectedWallet: String!\n    amount: Float!\n    installments: Int!\n    credolabReferenceNumber: String!\n    version: Version\n  }\n\n  enum Version {\n    v2\n  }\n`;\n\nexport type TCreateLoanOffer = {\n  loanRequest: Types.ObjectId;\n  selectedWallet: string;\n  interestRate: number;\n  currency: string;\n  expirationHours: number;\n  expirationMinutes: number;\n};\n\nexport const CreateLoanOfferInput = `\n  input CreateLoanOfferInput {\n    loanRequest: MongoID!\n    selectedWallet: String!\n    interestRate: Float!\n    currency: String\n    expirationHours: Int\n    expirationMinutes: Int\n  }\n`;\n\nexport const getLoanOfferRequestType = `\n  type getLoanOfferRequest {\n    loanRequest: ${LoanRequestType}!\n    loanOffer: ${LoanOfferType}!\n  }\n`;\n\nexport const getUserRequestAmountsType = `\n  type getUserRequestAmounts {\n    amounts: [Float]\n    minAmount: Float\n    maxAmount: Float\n    availableCredit: Float\n}`;\n\nexport const validateForLoanRequestType = `\n  type validateForLoanRequestType {\n    isAllowed: Boolean\n    message: String\n  }\n`;\n\nexport type TGetLoanRequest = {\n  loanRequest: Types.ObjectId;\n};\n\nexport type TGetLoanOfferRequest = {\n  loanRequest: Types.ObjectId;\n  loanOffer: Types.ObjectId;\n};\n\nexport const getLoanRequestInput = `\n  input getLoanRequest {\n    loanRequest: MongoID!\n  }\n`;\n\nexport const getLoanOffersForRequestType = `\n  type getLoanOffersForRequest {\n    loanOffers: [${LoanOfferType}]\n  }\n`;\n\nexport const getOneLoanOfferRequestInput = `\n  input getOneLoanOfferRequest {\n    loanRequest: MongoID!\n    loanOffer: MongoID!\n  }\n`;\n\nexport type TGetMyLoanRequest = {\n  page: number;\n  perPage: number;\n  status: string;\n  startDate: Date;\n  endDate: Date;\n};\n\nexport const GetMyLoanRequestsInput = `\n  input GetMyLoanRequests {\n    page: Int\n    perPage: Int\n    status: String\n    startDate: Date\n    endDate: Date\n  }\n`;\n\nexport type TGetMarketLoanRequests = {\n  page: number;\n  perPage: number;\n};\n\nexport const GetMarketLoanRequestsInput = `\n  input GetMarketLoanRequests {\n    page: Int!\n    perPage: Int!\n  }\n`;\n\nexport type TGetCostsOfRequest = {\n  currency: string;\n  amountInUSDC: number;\n};\n\nexport const GetCostsOfRequestInput = `\n  input GetCostsOfRequestInput {\n    currency: String\n    amountInUSDC: Float\n  }\n`;\n\nexport const GetCostsOfRequestType = `\n  type GetCostsOfRequestType {\n    amountInSATS: Float\n    amountInUSDC: Float\n  }\n`;\n\nexport type TCancelLoanRequest = {\n  _id: Types.ObjectId;\n};\n\nexport const CancelLoanRequestInput = `\n  input CancelLoanRequest {\n    _id: MongoID!\n  }\n`;\n\nexport type TGetUserRequestAmount = {\n  version?: versionEnum;\n};\n\nexport type TValidateForLoanRequest = {\n  currency: string;\n  amount: number;\n  selectedWallet: string;\n  installments: number;\n  version?: versionEnum;\n};\n\nexport const GetUserRequestAmountInput = `\n  input GetUserRequestAmount {\n    version: Version\n  }\n`;\n\nexport const ValidateForLoanRequestInput = `\n  input ValidateForLoanRequestInput{\n    currency: String!\n    amount: Float!\n    selectedWallet: String!\n    installments: Float!\n    version: Version\n  }\n`;\n"]}