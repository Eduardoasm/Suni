{"version":3,"file":"loanRequest.service.js","sourceRoot":"/","sources":["components/loanRequest/loanRequest.service.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-plusplus */\n/* eslint-disable import/namespace */\n/* eslint-disable import/no-cycle */\nimport type {\n  FilterQuery,\n  ProjectionType,\n  QueryOptions,\n  UpdateQuery,\n  UpdateWithAggregationPipeline,\n} from 'mongoose';\nimport mongoose from 'mongoose';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport timezone from 'dayjs/plugin/timezone';\nimport { NoSentryError, paginateModel } from '../../utils';\nimport { ILoanRequest, LoanRequest } from './loanRequest.model';\nimport {\n  TCreateLoanRequest,\n  TCreateLoanOffer,\n  TGetLoanOfferRequest,\n  TGetLoanRequest,\n  TGetMyLoanRequest,\n  TGetMarketLoanRequests,\n  TGetCostsOfRequest,\n  TCancelLoanRequest,\n  TGetUserRequestAmount,\n  TValidateForLoanRequest,\n} from './loanRequest.dto';\nimport * as loanOfferService from '../loanOffer/loanOffer.service';\nimport { ILoanOffer } from '../loanOffer';\nimport * as settingsService from '../settings/settings/settings.service';\nimport { getUserInfo } from '../../utils/walletService/userInfo';\nimport * as currencyService from '../currency/currency.service';\nimport { balanceLock, getUserWallet } from '../../utils/walletService';\nimport * as creditScoreService from '../creditScore/creditScore/creditScore.service';\nimport { validateWalletAndTransactionCurrency } from '../../utils/validations/walletCurrency';\nimport {\n  getValidAmounts,\n  validateRequestFee,\n} from '../../utils/validations/request';\nimport { deleteBlock } from '../../utils/walletService/cancelAd';\nimport { convertFromUSDC } from '../../utils/coinConversion/convertFromUSDC';\nimport { apiPriceBtc } from '../../utils/apiPriceBtc';\nimport { paymentServiceFee } from '../../utils/walletService/paymentFeeService';\nimport * as notificationService from '../notification/notification.service';\nimport { sendEmail } from '../../utils/emails/wauEmail';\nimport { rejectOffers } from '../../utils/rejectOffers';\nimport * as contractService from '../contract/contract/contract.service';\nimport { sendNotifications } from '../../utils/pushNotifications/sendNotification';\nimport { ISettings } from '../settings/settings';\nimport { createNotification } from '../../utils/avilaServices/createNotification';\n\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\nexport async function findOne(\n  filter?: FilterQuery<ILoanRequest>,\n  projection?: ProjectionType<ILoanRequest> | null,\n  options?: QueryOptions<ILoanRequest> | null\n) {\n  return LoanRequest.findOne(filter, projection, options).exec();\n}\n\nexport async function find(\n  filter?: FilterQuery<ILoanRequest>,\n  projection?: ProjectionType<ILoanRequest> | null,\n  options?: QueryOptions<ILoanRequest> | null\n) {\n  return LoanRequest.find(filter, projection, options).exec();\n}\n\nexport async function updateOne(\n  filter: FilterQuery<ILoanRequest>,\n  update: UpdateQuery<ILoanRequest> | UpdateWithAggregationPipeline,\n  options?: QueryOptions<ILoanRequest> | null\n) {\n  return LoanRequest.updateOne(filter, update, options).exec();\n}\n\nexport async function create(body: TCreateLoanRequest, token: string) {\n  const { data: user } = await getUserInfo(token);\n\n  const session = await mongoose.startSession();\n\n  try {\n    session.startTransaction();\n\n    const { selectedWallet, amount, installments, credolabReferenceNumber } =\n      body;\n\n    const settings = await settingsService.findOne({ active: true });\n\n    const { userLoanRequest, serviceFee } = await validateRequestFee(\n      body.currency,\n      settings,\n      body.amount,\n      user\n    );\n\n    const { isAllowed, message } = await validateForLoanRequest(\n      token,\n      user,\n      serviceFee,\n      userLoanRequest,\n      settings,\n      {\n        currency: body.currency,\n        amount,\n        selectedWallet,\n        installments,\n        version: body.version,\n      }\n    );\n\n    if (!isAllowed) throw new NoSentryError(message);\n\n    const credolabDataset = await creditScoreService.getCredolabDataset(\n      credolabReferenceNumber\n    );\n\n    let creditScore = null;\n\n    credolabDataset.forEach((insight) => {\n      if (insight?.code === 'Score') creditScore = insight?.value?.score;\n    });\n\n    if (!creditScore) {\n      throw new NoSentryError('Credolab score not available');\n    }\n\n    const createdCreditScoreUser = await creditScoreService.create(\n      {\n        values: {\n          referenceNumber: credolabReferenceNumber,\n          value: creditScore,\n          provider: 'credolab',\n        },\n      },\n      token,\n      session\n    );\n\n    const currency = await currencyService.findOne({\n      symbol: body?.currency?.toLowerCase(),\n    });\n\n    const userName = user?.metamapStatus?.dni_firstName ?? user?.name;\n\n    const userLastName = user?.metamapStatus?.dni_lastName ?? user?.lastname;\n\n    const createdLoanRequest = await LoanRequest.create(\n      [\n        {\n          selectedWalletCurrency: currency._id,\n          borrower: user?.id,\n          borrowerInfo: {\n            name: userName,\n            lastName: userLastName,\n            country: user?.metamapStatus?.country,\n            dni: user?.metamapStatus?.dni_value,\n            email: user?.email,\n          },\n          amountInUSDC: amount,\n          installments,\n          selectedWallet,\n          country: user?.metamapStatus?.country,\n          creditScore,\n        },\n      ],\n      { session }\n    );\n\n    const creditScoreVariables = {\n      name: `${userName} ${userLastName}`,\n    };\n\n    if (createdCreditScoreUser) {\n      await sendEmail(\n        'credolab_score_created',\n        token,\n        creditScoreVariables,\n        null,\n        user?.email\n      );\n    }\n\n    const notificationBorrower = await notificationService.create(\n      {\n        user: createdLoanRequest[0].borrower,\n        collectionName: 'loan',\n        message: `Número de referencia de solicitud de préstamo: ${createdLoanRequest[0].referenceNumber}`, // Loan request reference number:\n        subject: 'Se ha creado una solicitud de préstamo',\n        active: true,\n      },\n      session\n    );\n\n    const loanRequestVariables = {\n      name: `${userName} ${userLastName}`,\n      application_number: `#${createdLoanRequest[0].referenceNumber}`,\n    };\n\n    await sendEmail(\n      'loan_request_processed',\n      token,\n      loanRequestVariables,\n      null,\n      user?.email\n    );\n\n    if (userLoanRequest) {\n      const borrowerBalanceLock = {\n        token,\n        walletId: selectedWallet,\n        fee: serviceFee,\n        service: 'loan_request',\n      };\n\n      await paymentServiceFee(borrowerBalanceLock);\n    }\n\n    await session.commitTransaction();\n\n    return createdLoanRequest[0];\n  } catch (error) {\n    await session.abortTransaction();\n    throw new NoSentryError(error);\n  } finally {\n    session.endSession();\n  }\n}\n\nexport async function pagination(\n  page: number,\n  perPage: number,\n  filter?: FilterQuery<ILoanRequest>,\n  projection?: ProjectionType<ILoanRequest> | null,\n  options?: QueryOptions<ILoanRequest> | null\n) {\n  return paginateModel(page, perPage, LoanRequest, filter, projection, options);\n}\n\nexport async function getMarketLoanRequests(\n  body: TGetMarketLoanRequests,\n  token: string\n) {\n  // servicio de buscar todas las solicitudes\n  // obtener las solicitudes que no son mias  y sort de mayor creditscore\n  const { data: user } = await getUserInfo(token);\n\n  const filters: any = {\n    status: 'active',\n    active: true,\n    borrower: {\n      $ne: user?.id,\n    },\n  };\n\n  const options: any = {\n    sort: {\n      creditScore: -1,\n    },\n  };\n\n  return pagination(body?.page, body?.perPage, filters, null, options);\n}\n\ninterface LoanOfferForRequest {\n  loanRequest: ILoanRequest;\n  loanOffer: ILoanOffer;\n}\n\nexport async function createLoanOffer(\n  body: TCreateLoanOffer,\n  token: string\n): Promise<LoanOfferForRequest> {\n  const { data: user } = await getUserInfo(token);\n\n  const session = await mongoose.startSession();\n\n  try {\n    session.startTransaction();\n\n    const userWallet = await getUserWallet(token, body.selectedWallet);\n\n    await validateWalletAndTransactionCurrency(userWallet, body.currency);\n\n    const settings = await settingsService.findOne({\n      active: true,\n    });\n\n    const loanRequest = await findOne(\n      {\n        _id: body.loanRequest,\n      },\n      null,\n      { session }\n    );\n\n    if (!loanRequest) {\n      throw new NoSentryError('Request not found');\n    }\n\n    if (user.id === loanRequest.borrower)\n      throw new NoSentryError('Cannot take your loan request');\n\n    const day = dayjs();\n\n    let expirationDate;\n    // regla de eslint de no usar doble ternario, se cambiaron por if else si no manda expiration el front lo tomamos de los settings\n    if (body.expirationHours || body.expirationMinutes) {\n      expirationDate = day\n        .add(body.expirationHours ?? 0, 'hour')\n        .add(body.expirationMinutes ?? 0, 'minute')\n        .format();\n    } else if (settings.offerExpiration.type === 'minutes') {\n      expirationDate = day\n        .add(settings?.offerExpiration?.rate, 'minute')\n        .format();\n    } else {\n      expirationDate = day\n        .add(settings?.offerExpiration?.rate, 'hour')\n        .format();\n    }\n\n    if (body.interestRate < settings?.minInterestRate)\n      throw new NoSentryError(\n        `Interest rate cannot be less than ${settings?.minInterestRate}`\n      );\n\n    if (body.interestRate > settings?.maxInterestRate)\n      throw new NoSentryError(\n        `Interest rate cannot be greater than ${settings?.maxInterestRate}`\n      );\n\n    const btcPrice = await apiPriceBtc();\n\n    const serviceFeeInUSDC =\n      settings.contractFees.lenderFee.type === 'percentage'\n        ? (settings.contractFees.lenderFee.value * loanRequest.amountInUSDC) /\n          100\n        : settings.contractFees.lenderFee.value;\n\n    const serviceFee = await convertFromUSDC(\n      body.currency.toLowerCase(),\n      btcPrice,\n      serviceFeeInUSDC\n    );\n\n    const amountInSelectedWalletCurrency = await convertFromUSDC(\n      body.currency.toLowerCase(),\n      btcPrice,\n      loanRequest.amountInUSDC\n    );\n\n    const amountPercentage =\n      ((serviceFee + amountInSelectedWalletCurrency) * 1) / 100;\n\n    if (\n      serviceFee + amountInSelectedWalletCurrency + amountPercentage >\n      userWallet.available_balance\n    )\n      throw new NoSentryError(\n        'Selected wallet balance is not enough to make offer'\n      );\n\n    const block = await balanceLock({\n      token,\n      walletId: body.selectedWallet,\n      amount: amountInSelectedWalletCurrency,\n      expiresAt: expirationDate,\n      serviceFee,\n    });\n\n    const userName = user?.metamapStatus?.dni_firstName ?? user?.name;\n\n    const userLastName = user?.metamapStatus?.dni_lastName ?? user?.lastname;\n\n    const createdLoanOffer = await loanOfferService.create(\n      {\n        lender: user?.id,\n        lenderInfo: {\n          name: userName,\n          lastName: userLastName,\n          country: user?.metamapStatus?.country,\n          dni: user?.metamapStatus?.dni_value,\n          email: user?.email,\n        },\n        interestRate: body.interestRate,\n        selectedWallet: body.selectedWallet,\n        expirationDate,\n        currency: body.currency,\n        amount: loanRequest.amountInUSDC,\n        borrower: loanRequest.borrower,\n        installments: loanRequest.installments,\n        blockId: block?.data?.id,\n        blockedAmountInWalletCurrency: block?.data?.amount,\n        lenderFeeInUSDC: serviceFeeInUSDC,\n        lenderFeeInWalletCurrency: serviceFee,\n        referenceNumberOfLoanRequest: loanRequest.referenceNumber,\n      },\n      session\n    );\n\n    const notificationLender = await notificationService.create(\n      {\n        user: createdLoanOffer[0].lender,\n        collectionName: 'loan',\n        message: `Se ha creado una oferta de préstamo para la solicitud: ${loanRequest.referenceNumber}`, // A loan offer has been created for the loan request\n        subject: 'Se ha creado una oferta de préstamo', // A loan offer has been created\n        active: true,\n      },\n      session\n    );\n\n    const notificationBorrower = await notificationService.create(\n      {\n        user: createdLoanOffer[0].borrower,\n        collectionName: 'loan',\n        message: `Has recibido una oferta de préstamo para la solicitud: ${loanRequest.referenceNumber}`, // A loan offer has been created for the loan request\n        subject: 'Has recibido una oferta de préstamo', // you have received a loan offer\n        active: true,\n      },\n      session\n    );\n\n    let offerDuration: string;\n\n    if (body.expirationHours || body.expirationMinutes) {\n      offerDuration = `${body.expirationHours ?? 0} horas y ${\n        body.expirationMinutes ?? 0\n      } minutos`;\n    } else if (settings.offerExpiration.type === 'minutes') {\n      offerDuration = `${settings?.offerExpiration?.rate} minutos`;\n    } else {\n      offerDuration = `${settings?.offerExpiration?.rate} horas`;\n    }\n\n    const variables = {\n      name: `${loanRequest?.borrowerInfo?.name} ${loanRequest?.borrowerInfo?.lastName}`,\n      application_number: `#${loanRequest?.referenceNumber}`, // TODO what is applicaton_number?\n      interest_rate: createdLoanOffer[0]?.interestRate,\n      offer_duration: offerDuration,\n    };\n\n    const paramsPush = {\n      token,\n      userId: loanRequest.borrower,\n      title: 'Oferta de préstamo recibida',\n      message: `Has recibido una nueva oferta de ${createdLoanOffer[0].interestRate}%\n      en tu solicitud de préstamos ${loanRequest.referenceNumber}`,\n    };\n\n    await sendNotifications(paramsPush);\n\n    await sendEmail(\n      'loan_offer_received',\n      token,\n      variables,\n      null,\n      loanRequest?.borrowerInfo?.email\n    );\n\n    await createNotification(\n      // notification Oferta de préstamo recibida\n      {\n        messageTemplateId: '65a834012d07da37baf04e09',\n        model: 'loanRequest',\n        module: 'loans',\n        object: loanRequest?._id,\n        recipientId: loanRequest?.borrower,\n        senderId: user?.id,\n      },\n      token\n    );\n\n    // agregar la oferta a la solicitud de prestamo\n    try {\n      loanRequest.offers.push(createdLoanOffer[0]._id);\n      await loanRequest.save();\n    } catch (error) {\n      console.log(error, 'error creating loan offer');\n      await deleteBlock(token, block?.data?.id);\n      createdLoanOffer[0].delete();\n      throw new NoSentryError('Error creating offer');\n    }\n\n    // comprobar si se creo correctamente\n    if (!createdLoanOffer[0]) {\n      await deleteBlock(token, block?.data?.id);\n      throw new NoSentryError('Error creating offer');\n    }\n\n    await session.commitTransaction();\n\n    return {\n      loanRequest,\n      loanOffer: createdLoanOffer[0],\n    };\n  } catch (error) {\n    await session.abortTransaction();\n    throw new NoSentryError(error);\n  } finally {\n    session.endSession();\n  }\n}\n\nexport async function getLoanOffersForRequest(\n  body: TGetLoanRequest,\n  token: string\n) {\n  // servicio de obtener todas las ofertas de una solicitud\n  const { data: user } = await getUserInfo(token);\n\n  if (!user) {\n    throw new NoSentryError('User not found');\n  }\n\n  // obtenemos la solicitud\n  const loanRequest = await LoanRequest.findOne({\n    _id: body.loanRequest,\n  }).populate('offers');\n  // validamos que haya una solicitud\n  if (!loanRequest) {\n    throw new NoSentryError('Not found the loan request');\n  }\n  // buscamos las ofertas de esa solicitud\n  const { offers } = loanRequest;\n\n  return { loanOffers: offers };\n}\n\nexport async function getOneLoanOfferForRequest(\n  body: TGetLoanOfferRequest,\n  token: string\n): Promise<LoanOfferForRequest> {\n  const { data: user } = await getUserInfo(token);\n\n  if (!user) {\n    throw new NoSentryError('User not found');\n  }\n\n  const loanRequest = await LoanRequest.findOne({\n    _id: body.loanRequest,\n  }).populate('offers');\n\n  const loan = loanRequest.offers.find((element) => {\n    const offer = element._id.toString() === body.loanOffer;\n    return offer;\n  });\n\n  const loanOffer = await loanOfferService.findOne({ _id: loan });\n\n  return {\n    loanRequest,\n    loanOffer,\n  };\n}\n\nexport async function getMyLoanRequests(\n  body: TGetMyLoanRequest,\n  token: string\n) {\n  const { data: user } = await getUserInfo(token);\n\n  const filters: any = {\n    borrower: user?.id,\n    active: true,\n    status: 'active',\n  };\n\n  if (body?.startDate && body?.endDate) {\n    filters.createdAt = {\n      $gte: body?.startDate ? body?.startDate : { $ne: null },\n      $lte: body?.endDate ? body?.endDate : { $ne: null },\n    };\n  }\n\n  if (body?.status) {\n    filters.status = body?.status;\n  }\n\n  return pagination(body?.page, body?.perPage, filters);\n}\n\nexport async function getUserRequestAmounts(\n  token: string,\n  body: TGetUserRequestAmount\n) {\n  const { data: user } = await getUserInfo(token);\n\n  const settings = await settingsService.findOne({\n    active: true,\n  });\n\n  const { arrOfAmounts, sumContractsRequestAmount } = await getValidAmounts(\n    user?.id,\n    settings.contract.allowedBlocks,\n    settings.contract.amountOfBlocksAllowed\n  );\n\n  if (!body?.version) {\n    return {\n      amounts: arrOfAmounts,\n    };\n  }\n\n  if (body?.version === 'v2') {\n    return {\n      minAmount: arrOfAmounts[0],\n      maxAmount: arrOfAmounts[arrOfAmounts.length - 1],\n      availableCredit:\n        arrOfAmounts[arrOfAmounts.length - 1] - sumContractsRequestAmount,\n    };\n  }\n}\n\nexport async function getCostsOfRequest(\n  body: TGetCostsOfRequest,\n  token: string\n): Promise<any> {\n  await getUserInfo(token);\n\n  const settings = await settingsService.findOne({\n    active: true,\n  });\n\n  const btcPrice = await apiPriceBtc();\n\n  const serviceFeeInUSDC =\n    settings.contractFees.lenderFee.type === 'percentage'\n      ? (settings.contractFees.lenderFee.value * body.amountInUSDC) / 100\n      : settings.contractFees.lenderFee.value;\n\n  const serviceFee = await convertFromUSDC(\n    body.currency.toLowerCase(),\n    btcPrice,\n    serviceFeeInUSDC\n  );\n\n  const amountInSelectedWalletCurrency = await convertFromUSDC(\n    body.currency.toLowerCase(),\n    btcPrice,\n    body.amountInUSDC\n  );\n\n  return {\n    amountInSATS: serviceFee + amountInSelectedWalletCurrency,\n    amountInUSDC: serviceFeeInUSDC + body.amountInUSDC,\n  };\n}\n\nexport async function cancelRequest(body: TCancelLoanRequest, token: string) {\n  const { data: user } = await getUserInfo(token);\n\n  const session = await mongoose.startSession();\n\n  try {\n    session.startTransaction();\n\n    if (!user) {\n      throw new NoSentryError('User not found');\n    }\n\n    const loanRequest = await LoanRequest.findOne(\n      {\n        $and: [\n          {\n            _id: body?._id,\n          },\n          {\n            borrower: user?.id,\n          },\n          {\n            status: 'active',\n          },\n          {\n            active: true,\n          },\n        ],\n      },\n      null,\n      { session }\n    ).populate({\n      path: 'offers',\n      model: 'LoanOffer',\n    });\n\n    if (!loanRequest) {\n      throw new NoSentryError('Loan request not found');\n    }\n\n    await Promise.all(rejectOffers(loanRequest, token, null, session));\n\n    loanRequest.status = 'canceled';\n    await loanRequest.save();\n\n    await session.commitTransaction();\n\n    return loanRequest;\n  } catch (error) {\n    await session.abortTransaction();\n    throw new NoSentryError(error);\n  } finally {\n    session.endSession();\n  }\n}\n\nexport async function validateForLoanRequest(\n  token: string,\n  user,\n  serviceFee: number,\n  userLoanRequest: ILoanRequest,\n  settings: ISettings,\n  body: TValidateForLoanRequest\n) {\n  const userWallet = await getUserWallet(token, body.selectedWallet);\n\n  const { arrOfAmounts, sumContractsRequestAmount } = await getValidAmounts(\n    user?.id,\n    settings?.contract?.allowedBlocks,\n    settings?.contract?.amountOfBlocksAllowed\n  );\n  if (!body?.version) {\n    const userRequest = await LoanRequest.findOne({\n      borrower: user.id,\n      status: 'active',\n    });\n\n    if (userRequest) {\n      return {\n        isAllowed: false,\n        message: 'You have an active loan application',\n      };\n    }\n\n    const userContract = await contractService.findOne({\n      borrower: user.id,\n      status: 'active',\n    });\n\n    if (userContract) {\n      return {\n        isAllowed: false,\n        message:\n          'You have an active contract. You must finish it to request a new loan',\n      };\n    }\n\n    if (!arrOfAmounts.includes(body.amount)) {\n      return {\n        isAllowed: false,\n        message: `Invalid amount, possible request amounts are ${arrOfAmounts}`,\n      };\n    }\n  } else if (body?.version === 'v2') {\n    if (\n      body.amount < arrOfAmounts[0] || // validacion de errores cuando el amount es menos o mayor al limite minimo y maximo de bloques\n      body.amount > arrOfAmounts[arrOfAmounts.length - 1]\n    ) {\n      return {\n        isAllowed: false,\n        message:\n          arrOfAmounts.length === 1\n            ? `Invalid amount, possible request amount is ${arrOfAmounts[0]}`\n            : `Invalid amount, possible request amounts are between ${\n                arrOfAmounts[0]\n              } and ${arrOfAmounts[arrOfAmounts.length - 1]}`,\n      };\n    }\n\n    if (\n      arrOfAmounts[arrOfAmounts.length - 1] - sumContractsRequestAmount <\n      arrOfAmounts[0]\n    ) {\n      return {\n        isAllowed: false,\n        message:\n          'The available request amount is less than the mínimum request amount',\n      };\n    }\n\n    if (\n      sumContractsRequestAmount + body.amount >\n      arrOfAmounts[arrOfAmounts.length - 1]\n    ) {\n      return {\n        isAllowed: false,\n        message: `Amount exceeds the limit, possible request amounts are between ${\n          arrOfAmounts[0]\n        } and ${\n          arrOfAmounts[arrOfAmounts.length - 1] - sumContractsRequestAmount\n        }`,\n      };\n    }\n  }\n\n  if (\n    body.installments < (settings?.contract?.minMonthlyPayments ?? 1) ||\n    body.installments > (settings?.contract?.maxMonthlyPayments ?? 1)\n  ) {\n    return {\n      isAllowed: false,\n      message: `Invalid number of installments, value most be between ${settings.contract.minMonthlyPayments} and ${settings.contract.maxMonthlyPayments}`,\n    };\n  }\n  try {\n    await validateWalletAndTransactionCurrency(userWallet, body.currency);\n  } catch (e) {\n    return { isAllowed: false, message: e.message };\n  }\n\n  // Logic to pay request fee\n\n  if (serviceFee > userWallet.available_balance && userLoanRequest)\n    return {\n      isAllowed: false,\n      message:\n        'Selected wallet available balance is not enough to make loan request',\n    };\n\n  return { isAllowed: true, message: 'User is allowed to make loan request' };\n}\n"]}