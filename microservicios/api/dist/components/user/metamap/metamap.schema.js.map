{"version":3,"file":"metamap.schema.js","sourceRoot":"/","sources":["components/user/metamap/metamap.schema.ts"],"names":[],"mappings":";;;AAAA,uCAAkC;AAClC,qDAAiD;AACjD,uEAAkE;AAerD,QAAA,aAAa,GAAG,IAAI,iBAAM,CACrC;IACE,SAAS,EAAE;QACT,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,IAAI;KACX;IACD,MAAM,EAAE;QACN,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,cAAc,EAAE,UAAU,CAAC;QAC5D,OAAO,EAAE,YAAY;KACtB;IACD,MAAM,EAAE;QACN,IAAI,EAAE,OAAO;KACd;CACF,EACD;IACE,UAAU,EAAE,IAAI;CACjB,CACF,CAAC;AAEF,IAAA,iDAAsB,EAAC,qBAAa,EAAE,SAAS,EAAE,gCAAc,CAAC,CAAC","sourcesContent":["import { Schema } from 'mongoose';\nimport { schemaComposer } from 'graphql-compose';\nimport { convertSchemaToGraphQL } from 'graphql-compose-mongoose';\n\nexport type MetamapStatusEnum =\n  | 'unverified'\n  | 'verified'\n  | 'reviewNeeded'\n  | 'rejected';\n\nexport interface IMetamap {\n  _id?: string;\n  metamapId: string;\n  status?: MetamapStatusEnum;\n  active: boolean;\n}\n\nexport const metamapSchema = new Schema<IMetamap>(\n  {\n    metamapId: {\n      type: String,\n      trim: true,\n    },\n    status: {\n      type: String,\n      enum: ['unverified', 'verified', 'reviewNeeded', 'rejected'],\n      default: 'unverified',\n    },\n    active: {\n      type: Boolean,\n    },\n  },\n  {\n    timestamps: true,\n  }\n);\n\nconvertSchemaToGraphQL(metamapSchema, 'Metamap', schemaComposer);\n"]}