{"version":3,"file":"session.schema.js","sourceRoot":"/","sources":["components/user/sessions/session.schema.ts"],"names":[],"mappings":";;;AAAA,uCAAyC;AACzC,qDAAiD;AACjD,uEAAkE;AAYrD,QAAA,aAAa,GAAG,IAAI,iBAAM,CACrC;IACE,IAAI,EAAE;QACJ,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,MAAM;KACZ;IACD,KAAK,EAAE;QACL,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,IAAI;KACX;IACD,MAAM,EAAE;QACN,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,IAAI;KACX;IACD,MAAM,EAAE;QACN,IAAI,EAAE,OAAO;KACd;CACF,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEF,IAAA,iDAAsB,EAAC,qBAAa,EAAE,SAAS,EAAE,gCAAc,CAAC,CAAC","sourcesContent":["import { Schema, Types } from 'mongoose';\nimport { schemaComposer } from 'graphql-compose';\nimport { convertSchemaToGraphQL } from 'graphql-compose-mongoose';\n\nexport interface ISession {\n  _id?: any;\n  user: Types.ObjectId;\n  token: string;\n  device: string;\n  active?: boolean;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport const sessionSchema = new Schema<ISession>(\n  {\n    user: {\n      type: Schema.Types.ObjectId,\n      ref: 'User',\n    },\n    token: {\n      type: String,\n      trim: true,\n    },\n    device: {\n      type: String,\n      trim: true,\n    },\n    active: {\n      type: Boolean,\n    },\n  },\n  { timestamps: true }\n);\n\nconvertSchemaToGraphQL(sessionSchema, 'Session', schemaComposer);\n"]}