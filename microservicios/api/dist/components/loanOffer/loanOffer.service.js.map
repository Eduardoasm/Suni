{"version":3,"file":"loanOffer.service.js","sourceRoot":"/","sources":["components/loanOffer/loanOffer.service.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable import/no-cycle */\nimport type {\n  FilterQuery,\n  ProjectionType,\n  QueryOptions,\n  UpdateQuery,\n  UpdateWithAggregationPipeline,\n} from 'mongoose';\nimport { NoSentryError, paginateModel } from '../../utils';\nimport { ILoanOffer, LoanOffer } from './loanOffer.model';\nimport {\n  TCancelLoanOffer,\n  TCreateLoanOffer,\n  TGetMyLoanOffers,\n} from './loanOffer.dto';\nimport * as currencyService from '../currency/currency.service';\nimport { getUserInfo } from '../../utils/walletService/userInfo';\nimport { deleteBlock } from '../../utils/walletService/cancelAd';\n\nexport async function findOne(\n  filter?: FilterQuery<ILoanOffer>,\n  projection?: ProjectionType<ILoanOffer> | null,\n  options?: QueryOptions<ILoanOffer> | null\n) {\n  return LoanOffer.findOne(filter, projection, options).exec();\n}\n\nexport async function find(\n  filter?: FilterQuery<ILoanOffer>,\n  projection?: ProjectionType<ILoanOffer> | null,\n  options?: QueryOptions<ILoanOffer> | null\n) {\n  return LoanOffer.find(filter, projection, options).exec();\n}\n\nexport async function updateOne(\n  filter: FilterQuery<ILoanOffer>,\n  update: UpdateQuery<ILoanOffer> | UpdateWithAggregationPipeline,\n  options?: QueryOptions<ILoanOffer> | null\n) {\n  return LoanOffer.updateOne(filter, update, options).exec();\n}\n\nexport async function create(loanOffer: TCreateLoanOffer, session?: any) {\n  const currency = await currencyService.findOne({\n    symbol: loanOffer.currency,\n  });\n  delete loanOffer.currency;\n  return LoanOffer.create(\n    [\n      {\n        ...loanOffer,\n        currency: currency._id,\n      },\n    ],\n    { session }\n  );\n}\n\nexport async function pagination(\n  page: number,\n  perPage: number,\n  filter?: FilterQuery<ILoanOffer>,\n  projection?: ProjectionType<ILoanOffer> | null,\n  options?: QueryOptions<ILoanOffer> | null\n) {\n  return paginateModel(page, perPage, LoanOffer, filter, projection, options);\n}\n\nexport async function getAllLoanOffers(token: string): Promise<ILoanOffer[]> {\n  const { data: user } = await getUserInfo(token);\n\n  if (!user) {\n    throw new NoSentryError('User not found');\n  }\n  // servicio de buscar todas las ofertas de solicitudes\n\n  const loanOffers = await LoanOffer.find({\n    status: 'active',\n    active: true,\n  }).exec();\n\n  return loanOffers;\n}\n\nexport async function cancelOffer(body: TCancelLoanOffer, token: string) {\n  const { data: user } = await getUserInfo(token);\n\n  if (!user) {\n    throw new NoSentryError('User not found');\n  }\n\n  const loanOffer = await LoanOffer.findOne({\n    $and: [\n      {\n        _id: body?._id,\n      },\n      {\n        lender: user?.id,\n      },\n      {\n        status: 'active',\n      },\n      {\n        active: true,\n      },\n    ],\n  });\n\n  if (!loanOffer) {\n    throw new NoSentryError('Loan offer not found');\n  }\n\n  await deleteBlock(token, loanOffer.blockId);\n\n  loanOffer.status = 'canceled';\n  await loanOffer.save();\n\n  return loanOffer;\n}\n\nexport async function getMyLoanOffers(body: TGetMyLoanOffers, token: string) {\n  const { data: user } = await getUserInfo(token);\n\n  const filters: any = {\n    lender: user?.id,\n    active: true,\n    status: 'active',\n  };\n\n  if (body?.status) {\n    filters.status = body?.status;\n  }\n\n  if (body?.startDate && body?.endDate) {\n    filters.createdAt = {\n      $gte: new Date(body?.startDate),\n      $lte: new Date(body?.endDate),\n    };\n  }\n\n  const options: any = {\n    sort: { createdAt: -1 },\n  };\n\n  return pagination(body?.page, body?.perPage, filters, null, options);\n}\n\nexport async function findOneAndUpdate(\n  filter: FilterQuery<ILoanOffer>,\n  update: UpdateQuery<ILoanOffer>,\n  options?: QueryOptions<ILoanOffer> | null\n) {\n  return LoanOffer.findOneAndUpdate(filter, update, options).exec();\n}\n\n// export async function getLoanOffer(loanOffer: string, token: string) {\n//   const { data: user } = getUserInfo(token)\n\n//   const offer = await LoanOffer.findOne({ _id: loanOffer })\n\n//   if (user.id !== offer.borrower || user.id !== offer.lender) {\n//     throw new NoSentryError('User is not lender or borrower to see the offer')\n//   }\n\n//   return offer\n// }\n"]}