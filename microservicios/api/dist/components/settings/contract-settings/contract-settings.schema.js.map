{"version":3,"file":"contract-settings.schema.js","sourceRoot":"/","sources":["components/settings/contract-settings/contract-settings.schema.ts"],"names":[],"mappings":";;;AAAA,uCAAkC;AAClC,qDAAiD;AACjD,uEAAkE;AAarD,QAAA,sBAAsB,GAAG,IAAI,iBAAM,CAAoB;IAClE,kBAAkB,EAAE;QAClB,IAAI,EAAE,MAAM;KACb;IACD,kBAAkB,EAAE;QAClB,IAAI,EAAE,MAAM;KACb;IACD,oBAAoB,EAAE;QACpB,IAAI,EAAE,MAAM;KACb;IACD,gCAAgC,EAAE;QAChC,IAAI,EAAE,MAAM;KACb;IACD,aAAa,EAAE;QACb,IAAI,EAAE,MAAM;KACb;IACD,qBAAqB,EAAE;QACrB,IAAI,EAAE,MAAM;KACb;IACD,eAAe,EAAE;QACf,IAAI,EAAE,MAAM;KACb;CACF,CAAC,CAAC;AAEH,IAAA,iDAAsB,EACpB,8BAAsB,EACtB,kBAAkB,EAClB,gCAAc,CACf,CAAC","sourcesContent":["import { Schema } from 'mongoose';\nimport { schemaComposer } from 'graphql-compose';\nimport { convertSchemaToGraphQL } from 'graphql-compose-mongoose';\n\nexport interface IContractSettings {\n  _id?: any;\n  minMonthlyPayments: number;\n  maxMonthlyPayments: number;\n  maxAccumulatedDebtor: number;\n  maxAccumulatedDebtorWithCreditor: number;\n  allowedBlocks: number; // max number of blocks\n  amountOfBlocksAllowed: number; // amount of each block in USDC\n  templateContent: string;\n}\n\nexport const contractSettingsSchema = new Schema<IContractSettings>({\n  minMonthlyPayments: {\n    type: Number,\n  },\n  maxMonthlyPayments: {\n    type: Number,\n  },\n  maxAccumulatedDebtor: {\n    type: Number,\n  },\n  maxAccumulatedDebtorWithCreditor: {\n    type: Number,\n  },\n  allowedBlocks: {\n    type: Number,\n  },\n  amountOfBlocksAllowed: {\n    type: Number,\n  },\n  templateContent: {\n    type: String,\n  },\n});\n\nconvertSchemaToGraphQL(\n  contractSettingsSchema,\n  'ContractSettings',\n  schemaComposer\n);\n"]}