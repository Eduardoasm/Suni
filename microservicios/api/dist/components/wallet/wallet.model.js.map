{"version":3,"file":"wallet.model.js","sourceRoot":"/","sources":["components/wallet/wallet.model.ts"],"names":[],"mappings":";;;AAAA,uCAAiE;AACjE,uEAA2D;AAC3D,0CAAoD;AAapD,MAAM,YAAY,GAAG,IAAI,iBAAM,CAC7B;IACE,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;KACb;IACD,OAAO,EAAE;QACP,IAAI,EAAE,MAAM;KACb;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,UAAU;KAChB;IACD,KAAK,EAAE;QACL,IAAI,EAAE,MAAM,EAAE,uBAAuB;KACtC;CACF,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEW,QAAA,MAAM,GAAG,IAAA,gBAAK,EAA0B,QAAQ,EAAE,YAAY,CAAC,CAAC;AAEhE,QAAA,QAAQ,GAAG,IAAA,0CAAe,EAAiB,cAAa,CAAC,CAAC;AAEvE,gBAAQ,CAAC,WAAW,CAAC,UAAU,EAAE;IAC/B,QAAQ,EAAE,GAAG,EAAE,CAAC,qBAAU,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;IACvE,WAAW,EAAE;QACX,GAAG,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ;KACjC;IACD,UAAU,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE;CAC5B,CAAC,CAAC","sourcesContent":["import { Schema, Document, Types, Model, model } from 'mongoose';\nimport { composeMongoose } from 'graphql-compose-mongoose';\nimport { CurrencyTC, ICurrency } from '../currency';\n\nexport interface IWallet {\n  _id?: any;\n  name: string;\n  address: string;\n  currency: Types.ObjectId | ICurrency;\n  owner: string;\n  active?: boolean;\n}\n\nexport type WalletDocument = Document<Types.ObjectId, any, IWallet> & IWallet;\n\nconst walletSchema = new Schema<IWallet>(\n  {\n    name: {\n      type: String,\n    },\n    address: {\n      type: String,\n    },\n    currency: {\n      type: Schema.Types.ObjectId,\n      ref: 'Currency',\n    },\n    owner: {\n      type: String, // Ref to user in SUNIs\n    },\n  },\n  { timestamps: true }\n);\n\nexport const Wallet = model<IWallet, Model<IWallet>>('Wallet', walletSchema);\n\nexport const WalletTC = composeMongoose<WalletDocument>(Wallet as any);\n\nWalletTC.addRelation('currency', {\n  resolver: () => CurrencyTC.mongooseResolvers.dataLoader({ lean: true }),\n  prepareArgs: {\n    _id: (source) => source.currency,\n  },\n  projection: { currency: 1 },\n});\n"]}