{"version":3,"file":"satsToUSDC.js","sourceRoot":"/","sources":["utils/coinConversion/satsToUSDC.ts"],"names":[],"mappings":";;;;AAAA,gDAA6C;AAC7C,oDAAiD;AAEjD,MAAM,cAAc,GAAG,SAAS,CAAC;AAEjC,SAAsB,gBAAgB,CAAC,MAAc;;QACnD,OAAO,MAAM,GAAG,cAAc,CAAC;IACjC,CAAC;CAAA;AAFD,4CAEC;AAED,SAAsB,iBAAiB,CAAC,MAAc;;QACpD,IAAI;YACF,OAAO,CAAC,MAAM,gBAAgB,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,IAAA,yBAAW,GAAE,CAAC,CAAC;SACjE;QAAC,OAAO,KAAK,EAAE;YACd,MAAM,IAAI,6BAAa,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SACxC;IACH,CAAC;CAAA;AAND,8CAMC;AAED,SAAsB,sBAAsB,CAAC,MAAc,EAAE,QAAgB;;QAC3E,OAAO,CAAC,MAAM,GAAG,cAAc,CAAC,GAAG,QAAQ,CAAC;IAC9C,CAAC;CAAA;AAFD,wDAEC","sourcesContent":["import { apiPriceBtc } from '../apiPriceBtc';\nimport { NoSentryError } from '../NoSentryError';\n\nconst btcValueInSats = 100000000;\n\nexport async function convertSatsToBtc(amount: number) {\n  return amount / btcValueInSats;\n}\n\nexport async function convertSatsToUSDC(amount: number) {\n  try {\n    return (await convertSatsToBtc(amount)) * (await apiPriceBtc());\n  } catch (error) {\n    throw new NoSentryError(error.message);\n  }\n}\n\nexport async function convertSatsToUSDCPrice(amount: number, btcPrice: number) {\n  return (amount / btcValueInSats) * btcPrice;\n}\n"]}