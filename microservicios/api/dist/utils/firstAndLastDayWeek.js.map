{"version":3,"file":"firstAndLastDayWeek.js","sourceRoot":"/","sources":["utils/firstAndLastDayWeek.ts"],"names":[],"mappings":";;;AAAA,SAAgB,eAAe,CAAC,IAAI;IAClC,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/B,MAAM,SAAS,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,qFAAqF;IACzH,MAAM,WAAW,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,iCAAiC;IACxE,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,0CAA0C;IAE9F,MAAM,SAAS,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC;IACxC,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,2CAA2C;IACzF,SAAS,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAElC,OAAO;QACL,WAAW;QACX,SAAS;KACV,CAAC;AACJ,CAAC;AAdD,0CAcC","sourcesContent":["export function getWeekFromDate(date) {\n  const newDate = new Date(date);\n  const dayOfWeek = newDate.getDay(); // Obtener el día de la semana del día dado (0 = domingo, 1 = lunes, ..., 6 = sábado)\n  const startOfWeek = new Date(newDate); // Copiar el objeto de fecha dado\n  startOfWeek.setDate(newDate.getDate() - dayOfWeek); // Restablecer al lunes de la misma semana\n\n  const endOfWeek = new Date(startOfWeek);\n  endOfWeek.setDate(startOfWeek.getDate() + 6); // Establecer al domingo de la misma semana\n  endOfWeek.setUTCHours(23, 59, 59);\n\n  return {\n    startOfWeek,\n    endOfWeek,\n  };\n}\n"]}