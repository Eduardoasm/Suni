{"version":3,"file":"contractNextPayment.js","sourceRoot":"/","sources":["utils/creditHistory/contractNextPayment.ts"],"names":[],"mappings":";;;;AAAA,6GAAuF;AAEvF,SAAsB,mBAAmB,CAAC,MAAc;;;QACtD,MAAM,QAAQ,GAAG,MAAM,eAAe,CAAC,SAAS,CAAC;YAC/C;gBACE,OAAO,EAAE,cAAc;aACxB;YACD;gBACE,MAAM,EAAE;oBACN,QAAQ,EAAE,MAAM;oBAChB,oBAAoB,EAAE,cAAc;iBACrC;aACF;YACD;gBACE,MAAM,EAAE,CAAC;aACV;YACD;gBACE,KAAK,EAAE;oBACL,yBAAyB,EAAE,CAAC;iBAC7B;aACF;SACF,CAAC,CAAC;QAEH,OAAO,MAAA,QAAQ,CAAC,CAAC,CAAC,0CAAE,WAAW,CAAC,WAAW,CAAC;;CAC7C;AAtBD,kDAsBC","sourcesContent":["import * as contractService from '../../components/contract/contract/contract.service';\n\nexport async function contractNextPayment(userId: string) {\n  const contract = await contractService.aggregate([\n    {\n      $unwind: '$paymentPlan',\n    },\n    {\n      $match: {\n        borrower: userId,\n        'paymentPlan.status': 'next_payment',\n      },\n    },\n    {\n      $limit: 1,\n    },\n    {\n      $sort: {\n        'paymentPlan.paymentDate': 1,\n      },\n    },\n  ]);\n\n  return contract[0]?.paymentPlan.paymentDate;\n}\n"]}