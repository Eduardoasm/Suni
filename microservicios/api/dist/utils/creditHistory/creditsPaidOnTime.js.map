{"version":3,"file":"creditsPaidOnTime.js","sourceRoot":"/","sources":["utils/creditHistory/creditsPaidOnTime.ts"],"names":[],"mappings":";;;;AAAA,6GAAuF;AAEvF,SAAsB,wBAAwB,CAAC,MAAc;;;QAC3D,MAAM,iBAAiB,GAAG,MAAM,eAAe,CAAC,SAAS,CAAC;YACxD;gBACE,MAAM,EAAE;oBACN,QAAQ,EAAE,MAAM;oBAChB,MAAM,EAAE,WAAW;oBACnB,SAAS,EAAE,KAAK;iBACjB;aACF;YACD;gBACE,MAAM,EAAE,WAAW;aACpB;SACF,CAAC,CAAC;QAEH,OAAO,MAAA,iBAAiB,CAAC,CAAC,CAAC,0CAAE,SAAS,CAAC;;CACxC;AAfD,4DAeC","sourcesContent":["import * as contractService from '../../components/contract/contract/contract.service';\n\nexport async function getUserCreditsPaidOnTime(userId: string) {\n  const creditsPaidOnTime = await contractService.aggregate([\n    {\n      $match: {\n        borrower: userId,\n        status: 'concluded',\n        onDefault: false,\n      },\n    },\n    {\n      $count: 'contracts',\n    },\n  ]);\n\n  return creditsPaidOnTime[0]?.contracts;\n}\n"]}