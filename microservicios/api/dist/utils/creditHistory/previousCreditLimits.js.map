{"version":3,"file":"previousCreditLimits.js","sourceRoot":"/","sources":["utils/creditHistory/previousCreditLimits.ts"],"names":[],"mappings":";;;;AAAA,0DAA0B;AAC1B,6GAAuF;AAEvF,SAAsB,uBAAuB,CAAC,MAAc;;QAC1D,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAExB,MAAM,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,yEAAyE;QACzI,0BAA0B;QAE1B,MAAM,gBAAgB,GAAG,EAAE,CAAC;QAE5B,MAAM,cAAc,GAAG,EAAE,CAAC;QAE1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;YAC/B,sDAAsD;YACtD,MAAM,KAAK,GACT,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;YAEtE,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;YAE5E,MAAM,eAAe,GAAG,IAAA,eAAK,GAAE;iBAC5B,IAAI,CAAC,IAAI,CAAC;iBACV,KAAK,CAAC,KAAK,CAAC;iBACZ,OAAO,CAAC,OAAO,CAAC;iBAChB,MAAM,EAAE,CAAC;YAEZ,MAAM,cAAc,GAAG,IAAA,eAAK,GAAE;iBAC3B,IAAI,CAAC,IAAI,CAAC;iBACV,KAAK,CAAC,KAAK,CAAC;iBACZ,KAAK,CAAC,OAAO,CAAC;iBACd,MAAM,EAAE,CAAC;YAEZ,MAAM,SAAS,GAAG;gBAChB,eAAe;gBACf,cAAc;gBACd,KAAK;aACN,CAAC;YAEF,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAChC;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,cAAc,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;YAClD,uEAAuE;YACvE,MAAM,eAAe,GAAG,MAAM,kBAAkB,CAAC,IAAI,CAAC;gBACpD,IAAI,EAAE,MAAM;gBACZ,eAAe;gBACf,4HAA4H;gBAC5H,iIAAiI;gBACjI,uDAAuD;gBACvD,sDAAsD;gBACtD,KAAK;gBACL,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,eAAe;aACvB,CAAC,CAAC;YAEH,gBAAgB,CAAC,IAAI,CAAC;gBACpB,KAAK,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK;gBAC9B,mBAAmB,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC,mBAAmB;aAC5D,CAAC,CAAC;SACJ;QAED,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,gBAAgB,CAAC,CAAC;QAEtD,OAAO,gBAAgB,CAAC;IAC1B,CAAC;CAAA;AA7DD,0DA6DC","sourcesContent":["import dayjs from 'dayjs';\nimport * as transactionService from '../../components/transaction/transaction.service';\n\nexport async function getPreviousCreditLimits(userId: string) {\n  const date = new Date();\n\n  const oldMonth = new Date(date.setMonth(date.getMonth() - 13)); // se restan -13 ya que se hace la busqueda desde los 12 meses anteriores\n  // sin tomar el mes actual\n\n  const userCreditLimits = [];\n\n  const previousMonths = [];\n\n  for (let i = 0; i <= 11; i += 1) {\n    // loop para buscar los 12 meses anteriores en numeros\n    const month =\n      new Date(oldMonth.setMonth(oldMonth.getMonth() + 1)).getMonth() + 1;\n\n    const year = new Date(oldMonth.setMonth(oldMonth.getMonth())).getFullYear();\n\n    const firstDayOfMonth = dayjs()\n      .year(year)\n      .month(month)\n      .startOf('month')\n      .format();\n\n    const lastDayOfMonth = dayjs()\n      .year(year)\n      .month(month)\n      .endOf('month')\n      .format();\n\n    const timeStamp = {\n      firstDayOfMonth,\n      lastDayOfMonth,\n      month,\n    };\n\n    previousMonths.push(timeStamp);\n  }\n\n  for (let j = 0; j <= previousMonths.length; j += 1) {\n    // loop para buscar las transacciones de acuerdo a los meses anteriores\n    const userTransaction = await transactionService.find({\n      from: userId,\n      // updatedAt: {\n      //   // se realiza la busqueda mediante el updatedAt ya que al modificarse en \"loanConcluded no se haran mas modificaciones\"\n      //   // ya que termina el contrato, y se hace la busqueda entre el primer y ultimo dia de el mes para tomar la ultima transaction\n      //   $gte: new Date(previousMonths[i].firstDayOfMonth),\n      //   $lte: new Date(previousMonths[i].lastDayOfMonth),\n      // },\n      type: 'payment',\n      event: 'loanConcluded',\n    });\n\n    userCreditLimits.push({\n      month: previousMonths[j].month,\n      borrowerCreditLimit: userTransaction[0].borrowerCreditLimit,\n    });\n  }\n\n  console.log('soy user creditlimis', userCreditLimits);\n\n  return userCreditLimits;\n}\n"]}