{"version":3,"file":"creditsReceived.js","sourceRoot":"/","sources":["utils/creditHistory/creditsReceived.ts"],"names":[],"mappings":";;;;AACA,6GAAuF;AACvF,gHAAgH;AAChH,SAAsB,cAAc,CAClC,MAAc,EACd,QAA6B,EAC7B,MAAe;;;QAEf,MAAM,UAAU,GAAQ;YACtB,CAAC,QAAQ,CAAC,EAAE,MAAM;SACnB,CAAC;QAEF,IAAI,MAAM,EAAE;YACV,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC;SAC5B;QAED,MAAM,eAAe,GAAG,MAAM,eAAe,CAAC,SAAS,CAAC;YACtD;gBACE,MAAM,EAAE,UAAU;aACnB;YACD;gBACE,MAAM,EAAE,WAAW;aACpB;SACF,CAAC,CAAC;QAEH,OAAO,MAAA,eAAe,CAAC,CAAC,CAAC,0CAAE,SAAS,CAAC;;CACtC;AAvBD,wCAuBC","sourcesContent":["import { userTransactionEnum } from '../../components/transaction';\nimport * as contractService from '../../components/contract/contract/contract.service';\n// se realizo cambio de name a getUserCredits ya que se obtienen los recibidos o dados dependiendo de el usuario\nexport async function getUserCredits(\n  userId: string,\n  userType: userTransactionEnum,\n  status?: string\n) {\n  const matchStage: any = {\n    [userType]: userId,\n  };\n\n  if (status) {\n    matchStage.status = status;\n  }\n\n  const creditsReceived = await contractService.aggregate([\n    {\n      $match: matchStage,\n    },\n    {\n      $count: 'contracts',\n    },\n  ]);\n\n  return creditsReceived[0]?.contracts;\n}\n"]}