{"version":3,"file":"email.js","sourceRoot":"/","sources":["utils/email.ts"],"names":[],"mappings":";;;;AAAA,yCAAyC;AACzC,sEAAsE;AACtE,2DAAqC;AACrC,0DAA0B;AAC1B,2BAAyB;AAGzB,eAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAUnB,0EAA0E;AAE1E,MAAM,MAAM,GAAG,IAAI,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;AACvE,MAAM,SAAS,GAAG,4BAA4B,CAAC;AAC/C,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;AAC3C,MAAM,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;AACzC,MAAM,WAAW,GAAG,MAAM,CAAC;AAC3B,MAAM,cAAc,GAAG,oBAAoB,CAAC;AAE5C,SAAsB,gBAAgB,CAAC,IAAW;;QAChD,MAAM,YAAY,GAAG;YACnB,IAAI,EAAE,mBAAmB,SAAS,GAAG;YACrC,EAAE,EAAE,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,EAAE;YACpB,aAAa,EAAE,SAAS;YACxB,aAAa,EAAE,EAAE;SAClB,CAAC;QACF,OAAO,MAAM,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;IACpD,CAAC;CAAA;AARD,4CAQC;AAQD,SAAsB,sBAAsB,CAAC,EAC3C,IAAI,EACJ,EAAE,EACF,GAAG,GACkB;;;QACrB,IAAI;YACF,MAAM,YAAY,GAAG;gBACnB,IAAI,EAAE,mBAAmB,SAAS,GAAG;gBACrC,EAAE,EAAE,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,EAAE;gBACpB,aAAa,EAAE,gBAAgB;gBAC/B,aAAa,EAAE;oBACb,WAAW,EAAE,QAAQ;oBACrB,YAAY,EAAE,WAAW;oBACzB,IAAI,EAAE,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,mCAAI,EAAE;oBAC3B,UAAU,EAAE,GAAG;oBACf,gBAAgB,EAAE,MAAA,EAAE,CAAC,EAAE,mCAAI,KAAK;oBAChC,YAAY,EAAE,GAAG,MAAA,EAAE,aAAF,EAAE,uBAAF,EAAE,CAAE,IAAI,mCAAI,KAAK,IAAI,MAAA,EAAE,aAAF,EAAE,uBAAF,EAAE,CAAE,OAAO,mCAAI,GAAG,EAAE;oBAC1D,WAAW,EAAE,GAAG,QAAQ,6BAA6B;oBACrD,YAAY,EAAE,WAAW;oBACzB,eAAe,EAAE,cAAc;iBAChC;aACF,CAAC;YACF,OAAO,MAAM,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;SACnD;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,oCAAoC,CAAC,CAAC;SAC1D;;CACF;AA1BD,wDA0BC","sourcesContent":["/* eslint-disable no-restricted-syntax */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as postmark from 'postmark';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/es';\nimport { IUser } from '../components/user/user';\n\ndayjs.locale('es');\n\ninterface BrowserDetectInfo {\n  name?: string;\n  version?: string;\n  versionNumber?: number;\n  mobile?: boolean;\n  os?: string;\n}\n\n// const client = new postmark.ServerClient(process.env.POSTMARK_API_KEY);\n\nconst client = new postmark.ServerClient(process.env.POSTMARK_API_KEY);\nconst fromEmail = 'notifications@avilatek.com';\nconst adminUrl = process.env.DASHBOARD_URL;\nconst clientUrl = process.env.CLIENT_URL;\nconst companyName = 'Suni';\nconst companyAddress = 'Caracas, Venezuela';\n\nexport async function sendWelcomeEmail(user: IUser) {\n  const emailOptions = {\n    From: `Notificaciones <${fromEmail}>`,\n    To: `${user?.email}`,\n    TemplateAlias: 'welcome',\n    TemplateModel: {},\n  };\n  return client.sendEmailWithTemplate(emailOptions);\n}\n\ninterface ResetPasswordOptions {\n  user: IUser;\n  os: BrowserDetectInfo;\n  url: string;\n}\n\nexport async function sendResetPasswordEmail({\n  user,\n  os,\n  url,\n}: ResetPasswordOptions) {\n  try {\n    const emailOptions = {\n      From: `Notificaciones <${fromEmail}>`,\n      To: `${user?.email}`,\n      TemplateAlias: 'password-reset',\n      TemplateModel: {\n        product_url: adminUrl,\n        product_name: companyName,\n        name: user?.firstName ?? '',\n        action_url: url,\n        operating_system: os.os ?? 'N/A',\n        browser_name: `${os?.name ?? 'N/A'} ${os?.version ?? '-'}`,\n        support_url: `${adminUrl}/frequently-asked-questions`, // definir\n        company_name: companyName,\n        company_address: companyAddress,\n      },\n    };\n    return client.sendEmailWithTemplate(emailOptions);\n  } catch (error) {\n    console.log(error, 'Error sending reset password email');\n  }\n}\n"]}