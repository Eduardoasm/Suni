{"version":3,"file":"transfer.js","sourceRoot":"/","sources":["utils/walletService/transfer.ts"],"names":[],"mappings":";;;;AAAA,0DAA0B;AAC1B,oDAAiD;AAQjD,SAAsB,QAAQ,CAAC,IAAe,EAAE,KAAa;;;QAC3D,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;QAClD,IAAI,CAAC,KAAK;YAAE,MAAM,IAAI,6BAAa,CAAC,oBAAoB,CAAC,CAAC;QAC1D,MAAM,MAAM,GAAG;YACb,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;YAChC,GAAG,EAAE,kBAAkB;YACvB,OAAO,EAAE;gBACP,aAAa,EAAE,UAAU,KAAK,EAAE;aACjC;YACD,IAAI,EAAE;gBACJ,MAAM;gBACN,cAAc,EAAE,YAAY;gBAC5B,YAAY,EAAE,UAAU;aACzB;SACF,CAAC;QACF,IAAI;YACF,MAAM,QAAQ,GAAG,MAAM,IAAA,eAAK,EAAC,MAAM,CAAC,CAAC;YAErC,IAAI,CAAC,CAAA,MAAA,QAAQ,CAAC,IAAI,0CAAE,OAAO,CAAA,EAAE;gBAC3B,MAAM,IAAI,6BAAa,CAAC,+BAA+B,CAAC,CAAC;aAC1D;YAED,OAAO,MAAA,MAAA,QAAQ,CAAC,IAAI,0CAAE,IAAI,0CAAG,CAAC,CAAC,CAAC;SACjC;QAAC,OAAO,KAAK,EAAE;YACd,MAAM,IAAI,6BAAa,CAAC,kCAAkC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;SAC5E;;CACF;AA3BD,4BA2BC","sourcesContent":["import axios from 'axios';\nimport { NoSentryError } from '../NoSentryError';\n\nexport interface ITransfer {\n  amount: number;\n  fromWalletId: string;\n  toWalletId: string;\n}\n\nexport async function transfer(body: ITransfer, token: string) {\n  const { amount, fromWalletId, toWalletId } = body;\n  if (!token) throw new NoSentryError('Token not provided');\n  const config = {\n    method: 'post',\n    baseURL: process.env.SERVICE_URL,\n    url: `/wallet/transfer`,\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n    data: {\n      amount,\n      from_wallet_id: fromWalletId,\n      to_wallet_id: toWalletId,\n    },\n  };\n  try {\n    const response = await axios(config);\n\n    if (!response.data?.success) {\n      throw new NoSentryError('Error in transfer transaction');\n    }\n\n    return response.data?.data?.[0];\n  } catch (error) {\n    throw new NoSentryError(`Error in transfer transaction: ${error.message}`);\n  }\n}\n"]}