{"version":3,"file":"userWallet.js","sourceRoot":"/","sources":["utils/walletService/userWallet.ts"],"names":[],"mappings":";;;;AAAA,0DAA0B;AAC1B,oDAAiD;AAqBjD,SAAsB,aAAa,CAAC,KAAa,EAAE,QAAgB;;;QACjE,MAAM,MAAM,GAAG;YACb,MAAM,EAAE,KAAK;YACb,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;YAChC,GAAG,EAAE,yBAAyB,QAAQ,EAAE;YACxC,OAAO,EAAE;gBACP,aAAa,EAAE,UAAU,KAAK,EAAE;aACjC;SACF,CAAC;QAEF,IAAI;YACF,MAAM,QAAQ,GAAG,MAAM,IAAA,eAAK,EAAC,MAAM,CAAC,CAAC;YAErC,IAAI,CAAC,CAAA,MAAA,QAAQ,CAAC,IAAI,0CAAE,OAAO,CAAA,EAAE;gBAC3B,MAAM,IAAI,6BAAa,CAAC,2BAA2B,CAAC,CAAC;aACtD;YAED,OAAO,MAAA,MAAA,QAAQ,CAAC,IAAI,0CAAE,IAAI,0CAAG,CAAC,CAAC,CAAC;SACjC;QAAC,OAAO,KAAK,EAAE;YACd,MAAM,IAAI,6BAAa,CAAC,4BAA4B,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;SACtE;;CACF;AArBD,sCAqBC","sourcesContent":["import axios from 'axios';\nimport { NoSentryError } from '../NoSentryError';\n\n/**\n * function to search wallet in the wallet services from WAU\n * @param {string} token received token from app\n * @param {string} walletId wallet received from app\n * @returns wallet that exists\n */\n\nexport interface IWallet {\n  name: string;\n  wallet: string;\n  balance: number;\n  balanceInUSDC: number;\n  blockedBalance: number;\n  blockedBalanceInUSDC: number;\n  availableBalance: number;\n  availableBalanceInUSDC: number;\n  currency: string;\n}\n\nexport async function getUserWallet(token: string, walletId: string) {\n  const config = {\n    method: 'get',\n    baseURL: process.env.SERVICE_URL,\n    url: `/wallet/user-balances/${walletId}`,\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  };\n\n  try {\n    const response = await axios(config);\n\n    if (!response.data?.success) {\n      throw new NoSentryError('Error getting user wallet');\n    }\n\n    return response.data?.data?.[0];\n  } catch (error) {\n    throw new NoSentryError(`Error in get user wallet ${error.message}`);\n  }\n}\n"]}