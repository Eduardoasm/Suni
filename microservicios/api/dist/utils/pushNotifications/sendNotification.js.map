{"version":3,"file":"sendNotification.js","sourceRoot":"/","sources":["utils/pushNotifications/sendNotification.ts"],"names":[],"mappings":";;;;AAAA,0DAA0B;AAC1B,oDAAiD;AAuBjD,SAAsB,iBAAiB,CAAC,iBAAqC;;QAC3E,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,iBAAiB,CAAC;QAE5D,IAAI;YACF,IAAI,CAAC,KAAK,EAAE;gBACV,MAAM,IAAI,6BAAa,CAAC,oBAAoB,CAAC,CAAC;aAC/C;YAED,MAAM,MAAM,GAAG;gBACb,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;gBAChC,GAAG,EAAE,OAAO;gBACZ,OAAO,EAAE;oBACP,aAAa,EAAE,UAAU,KAAK,EAAE;iBACjC;gBACD,IAAI,EAAE;oBACJ,MAAM;oBACN,aAAa;oBACb,KAAK;oBACL,OAAO;oBACP,YAAY;oBACZ,OAAO;oBACP,WAAW;iBACZ;aACF,CAAC;YAEF,MAAM,QAAQ,GAAG,MAAM,IAAA,eAAK,EAAC,MAAM,CAAC,CAAC;YAErC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE;gBAC1B,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;aAC5C;YAED,OAAO,QAAQ,CAAC;SACjB;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,6BAA6B,CAAC,CAAC;SACnD;IACH,CAAC;CAAA;AApCD,8CAoCC","sourcesContent":["import axios from 'axios';\nimport { NoSentryError } from '../NoSentryError';\n\n/**\n * @param userId id from user IS OPTIONAL\n * @param devicesId list of devices from user IS OPTIONAL\n * @param title title of message IS OPTIONAL\n * @param message body of message\n * @param imageUrl url of image for the view IS OPTIONAL\n * @param url url that will visit if the user clicks on the message IS OPTIONAL\n * @param appData object with data if we need send info in push notifications IS OPTIONAL\n */\n\nexport interface TSendNotifications {\n  token: string;\n  userId?: string;\n  devicesId?: Array<string>;\n  title?: string;\n  message: string;\n  imageUrl?: string;\n  url?: string;\n  appData?: any;\n}\n\nexport async function sendNotifications(bodyNotifications: TSendNotifications) {\n  const { userId, title, message, token } = bodyNotifications;\n\n  try {\n    if (!token) {\n      throw new NoSentryError('Token not provided');\n    }\n\n    const config = {\n      method: 'post',\n      baseURL: process.env.SERVICE_URL,\n      url: '/push',\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n      data: {\n        userId,\n        // devicesId,\n        title,\n        message,\n        // imageUrl,\n        // url,\n        // appData,\n      },\n    };\n\n    const response = await axios(config);\n\n    if (!response.data.success) {\n      console.log('Error sending notifications');\n    }\n\n    return response;\n  } catch (error) {\n    console.log(error, 'Error sending notifications');\n  }\n}\n"]}