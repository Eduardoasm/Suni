{"version":3,"file":"updateLock.js","sourceRoot":"/","sources":["utils/walletService/updateLock.ts"],"names":[],"mappings":";;;;AAAA,0DAA0B;AAC1B,0DAA0B;AAC1B,oDAAiD;AASjD;;;;;GAKG;AAEH,SAAsB,WAAW,CAAC,IAAkB;;;QAClD,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,MAAM,IAAI,6BAAa,CAAC,oBAAoB,CAAC,CAAC;SAC/C;QAED,MAAM,IAAI,GAAG,IAAA,eAAK,GAAE,CAAC;QAErB,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;QAEzC,MAAM,kBAAkB,GAAG,YAAY,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;QAEtE,IAAI;YACF,MAAM,MAAM,GAAG;gBACb,MAAM,EAAE,OAAO;gBACf,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;gBAChC,GAAG,EAAE,iBAAiB,IAAI,CAAC,OAAO,EAAE;gBACpC,OAAO,EAAE;oBACP,aAAa,EAAE,UAAU,IAAI,CAAC,KAAK,EAAE;iBACtC;gBACD,IAAI,EAAE;oBACJ,MAAM,EAAE,IAAI,CAAC,MAAM;oBACnB,SAAS,EAAE,kBAAkB;oBAC7B,UAAU,EAAE,IAAI,CAAC,QAAQ;iBAC1B;aACF,CAAC;YAEF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAA,eAAK,EAAC,MAAM,CAAC,CAAC;YAErC,IAAI,CAAC,IAAI,CAAC,OAAO;gBAAE,MAAM,IAAI,6BAAa,CAAC,wBAAwB,CAAC,CAAC;YAErE,OAAO,IAAI,CAAC;SACb;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;YAC9C,MAAM,IAAI,6BAAa,CAAC,MAAA,KAAK,CAAC,OAAO,mCAAI,wBAAwB,CAAC,CAAC;SACpE;;CACF;AAnCD,kCAmCC","sourcesContent":["import axios from 'axios';\nimport dayjs from 'dayjs';\nimport { NoSentryError } from '../NoSentryError';\n\nexport interface TUpdateBlock {\n  token: string;\n  amount: number;\n  makerFee: number;\n  blockId: string;\n}\n\n/**\n * @param token token received from app\n * @param amount the new amount for block/listing\n * @param makerFee the new makerFee for maker\n * @param blockId id for service balance lock (loanAdId)\n */\n\nexport async function updateBlock(body: TUpdateBlock): Promise<any> {\n  if (!body.token) {\n    throw new NoSentryError('Token not provided');\n  }\n\n  const date = dayjs();\n\n  const dateToExpire = date.add(30, 'day');\n\n  const formatDateToExpire = dateToExpire.format('YYYY-MM-DD HH:mm:ss');\n\n  try {\n    const config = {\n      method: 'patch',\n      baseURL: process.env.SERVICE_URL,\n      url: `/wallet/block/${body.blockId}`,\n      headers: {\n        authorization: `Bearer ${body.token}`,\n      },\n      data: {\n        amount: body.amount,\n        expiresAt: formatDateToExpire,\n        serviceFee: body.makerFee,\n      },\n    };\n\n    const { data } = await axios(config);\n\n    if (!data.success) throw new NoSentryError('Error updating listing');\n\n    return data;\n  } catch (error) {\n    console.log('Error updating listings', error);\n    throw new NoSentryError(error.message ?? 'Error updating listing');\n  }\n}\n"]}