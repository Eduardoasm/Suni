{"version":3,"file":"userWallet.js","sourceRoot":"/","sources":["utils/walletService/userWallet.ts"],"names":[],"mappings":";;;;AAAA,0DAA0B;AAC1B,oDAAiD;AAoBjD,SAAsB,aAAa,CACjC,KAAa,EACb,QAAgB;;;QAEhB,IAAI;YACF,MAAM,MAAM,GAAG;gBACb,MAAM,EAAE,KAAK;gBACb,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;gBAChC,GAAG,EAAE,yBAAyB,QAAQ,EAAE;gBACxC,OAAO,EAAE;oBACP,aAAa,EAAE,UAAU,KAAK,EAAE;iBACjC;aACF,CAAC;YAEF,MAAM,QAAQ,GAAG,MAAM,IAAA,eAAK,EAAC,MAAM,CAAC,CAAC;YAErC,IAAI,CAAC,CAAA,MAAA,QAAQ,CAAC,IAAI,0CAAE,OAAO,CAAA,EAAE;gBAC3B,MAAM,IAAI,6BAAa,CAAC,yBAAyB,CAAC,CAAC;aACpD;YAED,MAAM,MAAM,GAAY,MAAA,QAAQ,CAAC,IAAI,0CAAE,IAAI,CAAC,CAAC,CAAC,CAAC;YAE/C,OAAO,MAAM,CAAC;SACf;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;YACxC,MAAM,IAAI,6BAAa,CAAC,wBAAwB,KAAK,EAAE,CAAC,CAAC;SAC1D;;CACF;AA3BD,sCA2BC","sourcesContent":["import axios from 'axios';\nimport { NoSentryError } from '../NoSentryError';\n\n/**\n * function to search wallet in the wallet services from WAU\n * @param {string} token received token from app\n * @param {string} walletId wallet received from app\n * @returns wallet that exists\n */\n\nexport interface IWallet {\n  wallet: string;\n  name: string;\n  balance: number;\n  error: string | null;\n  business_enabled: string | null;\n  type: string;\n  blocked_balance: number;\n  available_balance: number;\n}\n\nexport async function getUserWallet(\n  token: string,\n  walletId: string\n): Promise<IWallet> {\n  try {\n    const config = {\n      method: 'get',\n      baseURL: process.env.SERVICE_URL,\n      url: `/wallet/user-balances/${walletId}`,\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    };\n\n    const response = await axios(config);\n\n    if (!response.data?.success) {\n      throw new NoSentryError('Error in obtaining data');\n    }\n\n    const wallet: IWallet = response.data?.data[0];\n\n    return wallet;\n  } catch (error) {\n    console.log('Error in get user wallet');\n    throw new NoSentryError(`Error in get wallet: ${error}`);\n  }\n}\n"]}