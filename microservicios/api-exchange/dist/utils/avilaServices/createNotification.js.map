{"version":3,"file":"createNotification.js","sourceRoot":"/","sources":["utils/avilaServices/createNotification.ts"],"names":[],"mappings":";;;;AAAA,0DAA0B;AAE1B,oDAAiD;AAEjD;;;;;;;;;;GAUG;AAEH,SAAsB,kBAAkB,CACtC,YAA2B,EAC3B,KAAa;;QAEb,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,IAAI,6BAAa,CAAC,oBAAoB,CAAC,CAAC;SAC/C;QAED,MAAM,MAAM,GAAG;YACb,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB;YACtC,GAAG,EAAE,sBAAsB;YAC3B,OAAO,EAAE;gBACP,aAAa,EAAE,KAAK;aACrB;YACD,IAAI,EAAE,YAAY;SACnB,CAAC;QAEF,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAA,eAAK,EAAC,MAAM,CAAC,CAAC;YAErC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjB,MAAM,IAAI,6BAAa,CAAC,8BAA8B,CAAC,CAAC;aACzD;YAED,OAAO,IAAI,CAAC;SACb;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;YAC5C,MAAM,IAAI,6BAAa,CAAC,KAAK,CAAC,CAAC;SAChC;IACH,CAAC;CAAA;AA9BD,gDA8BC","sourcesContent":["import axios from 'axios';\nimport { TNotification } from '../../types/notification';\nimport { NoSentryError } from '../NoSentryError';\n\n/**\n * @param {object} notification\n * @param {ObjectId} notification.messageTemplateId - message template id\n * @param {string} notification.model - model of notification: contract | loanRequest | loanOffer | listing | transaction\n * @param {string} notification.module - module of services: wallet | loans | exchange\n * @param {ObjectId | string} notification.object - id of object model\n * @param {string} notification.recipientId - id of recipient\n * @param {string} [notification.senderId ]- id of sender\n * @param {object} [notification.variables] - object dynamic variable thath will be changed\n * @return notification created\n */\n\nexport async function createNotification(\n  notification: TNotification,\n  token: string\n) {\n  if (!token) {\n    throw new NoSentryError('token not provided');\n  }\n\n  const config = {\n    method: 'post',\n    baseURL: process.env.COMMUNICATION_URL,\n    url: `/api/v1/notification`,\n    headers: {\n      authorization: token,\n    },\n    data: notification,\n  };\n\n  try {\n    const { data } = await axios(config);\n\n    if (!data.success) {\n      throw new NoSentryError('Error in create notification');\n    }\n\n    return data;\n  } catch (error) {\n    console.log('Error in create notification');\n    throw new NoSentryError(error);\n  }\n}\n"]}