{"version":3,"file":"getCryptoHolderTransFee.js","sourceRoot":"/","sources":["utils/parametersValidations/getCryptoHolderTransFee.ts"],"names":[],"mappings":";;;;AAGA,SAAsB,uBAAuB,CAC3C,IAAa,EACb,QAAmB;;QAEnB,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,KAAK,KAAK,EAAE;YAC7C,IAAI,IAAI,CAAC,iBAAiB,IAAI,QAAQ,CAAC,GAAG,CAAC,eAAe,EAAE;gBAC1D,OAAO,MAAM,CACX,CAAC,QAAQ,CAAC,GAAG,CAAC,mCAAmC,CAAC,IAAI,KAAK,OAAO;oBAChE,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,mCAAmC,CAAC,KAAK;oBACxD,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,mCAAmC,CAAC,KAAK;wBACrD,IAAI,CAAC,iBAAiB,CAAC;wBACzB,GAAG,CACN,CAAC,OAAO,CAAC,CAAC,CAAC,CACb,CAAC;aACH;YACD,OAAO,MAAM,CACX,CAAC,QAAQ,CAAC,GAAG,CAAC,kCAAkC,CAAC,IAAI,KAAK,OAAO;gBAC/D,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,kCAAkC,CAAC,KAAK;gBACvD,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,kCAAkC,CAAC,KAAK;oBACpD,IAAI,CAAC,iBAAiB,CAAC;oBACzB,GAAG,CACN,CAAC,OAAO,CAAC,CAAC,CAAC,CACb,CAAC;SACH;QACD,IAAI,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,KAAK,KAAK,EAAE;YACnD,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,GAAG,CAAC,CAAC;SAC7E;QACD,OAAO,CAAC,QAAQ,CAAC,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,GAAG,CAAC;IAClE,CAAC;CAAA;AA5BD,0DA4BC","sourcesContent":["import { TGetFee } from '../../components/transaction/transaction.dto';\nimport { ISettings } from '../../components/settings/settings.model';\n\nexport async function getCryptoHolderTransFee(\n  body: TGetFee,\n  settings: ISettings\n) {\n  if (body.assetNetwork.toLowerCase() === 'btc') {\n    if (body.transactionAmount <= settings.btc.transBreakPoint) {\n      return Number(\n        (settings.btc.cryptoHolderTransFeeUnderBreakPoint.type === 'fixed'\n          ? settings.btc.cryptoHolderTransFeeUnderBreakPoint.value\n          : (settings.btc.cryptoHolderTransFeeUnderBreakPoint.value *\n              body.transactionAmount) /\n            100\n        ).toFixed(8)\n      );\n    }\n    return Number(\n      (settings.btc.cryptoHolderTransFeeOverBreakPoint.type === 'fixed'\n        ? settings.btc.cryptoHolderTransFeeOverBreakPoint.value\n        : (settings.btc.cryptoHolderTransFeeOverBreakPoint.value *\n            body.transactionAmount) /\n          100\n      ).toFixed(8)\n    );\n  }\n  if (body.assetNetwork.toLocaleLowerCase() === 'lnd') {\n    return Math.trunc((settings.transactionFee * body.transactionAmount) / 100);\n  }\n  return (settings.transactionFee * body.transactionAmount) / 100;\n}\n"]}