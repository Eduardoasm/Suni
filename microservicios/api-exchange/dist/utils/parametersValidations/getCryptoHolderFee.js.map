{"version":3,"file":"getCryptoHolderFee.js","sourceRoot":"/","sources":["utils/parametersValidations/getCryptoHolderFee.ts"],"names":[],"mappings":";;;;AAGA,SAAsB,kBAAkB,CAAC,IAAa,EAAE,QAAmB;;QACzE,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,KAAK,KAAK,EAAE;YAC7C,IAAI,IAAI,CAAC,iBAAiB,IAAI,QAAQ,CAAC,GAAG,CAAC,eAAe,EAAE;gBAC1D,OAAO,MAAM,CACX,CAAC,QAAQ,CAAC,GAAG,CAAC,qCAAqC,CAAC,IAAI,KAAK,OAAO;oBAClE,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,qCAAqC,CAAC,KAAK;oBAC1D,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,qCAAqC,CAAC,KAAK;wBACvD,IAAI,CAAC,iBAAiB,CAAC;wBACzB,GAAG,CACN,CAAC,OAAO,CAAC,CAAC,CAAC,CACb,CAAC;aACH;YACD,OAAO,MAAM,CACX,CAAC,QAAQ,CAAC,GAAG,CAAC,oCAAoC,CAAC,IAAI,KAAK,OAAO;gBACjE,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,oCAAoC,CAAC,KAAK;gBACzD,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,oCAAoC,CAAC,KAAK;oBACtD,IAAI,CAAC,iBAAiB,CAAC;oBACzB,GAAG,CACN,CAAC,OAAO,CAAC,CAAC,CAAC,CACb,CAAC;SACH;QACD,IAAI,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,KAAK,KAAK,EAAE;YACnD,OAAO,IAAI,CAAC,KAAK,CACf,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC;gBAClE,IAAI,CAAC,iBAAiB,CAAC;gBACvB,GAAG,CACN,CAAC;SACH;QACD,OAAO,CACL,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAClE,IAAI,CAAC,iBAAiB,CAAC;YACzB,GAAG,CACJ,CAAC;IACJ,CAAC;CAAA;AAjCD,gDAiCC","sourcesContent":["import { TGetFee } from '../../components/transaction/transaction.dto';\nimport { ISettings } from '../../components/settings/settings.model';\n\nexport async function getCryptoHolderFee(body: TGetFee, settings: ISettings) {\n  if (body.assetNetwork.toLowerCase() === 'btc') {\n    if (body.transactionAmount <= settings.btc.transBreakPoint) {\n      return Number(\n        (settings.btc.cryptoHolderServiceFeeUnderBreakPoint.type === 'fixed'\n          ? settings.btc.cryptoHolderServiceFeeUnderBreakPoint.value\n          : (settings.btc.cryptoHolderServiceFeeUnderBreakPoint.value *\n              body.transactionAmount) /\n            100\n        ).toFixed(8)\n      );\n    }\n    return Number(\n      (settings.btc.cryptoHolderServiceFeeOverBreakPoint.type === 'fixed'\n        ? settings.btc.cryptoHolderServiceFeeOverBreakPoint.value\n        : (settings.btc.cryptoHolderServiceFeeOverBreakPoint.value *\n            body.transactionAmount) /\n          100\n      ).toFixed(8)\n    );\n  }\n  if (body.assetNetwork.toLocaleLowerCase() === 'lnd') {\n    return Math.trunc(\n      ((body.userRole === 'maker' ? settings.makerFee : settings.takerFee) *\n        body.transactionAmount) /\n        100\n    );\n  }\n  return (\n    ((body.userRole === 'maker' ? settings.makerFee : settings.takerFee) *\n      body.transactionAmount) /\n    100\n  );\n}\n"]}