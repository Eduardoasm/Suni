{"version":3,"file":"transactionHistory.model.js","sourceRoot":"/","sources":["components/transactionHistory/transactionHistory.model.ts"],"names":[],"mappings":";;;AAAA,uCAAiE;AACjE,uEAA2D;AAqB3D,MAAM,wBAAwB,GAAG,IAAI,iBAAM,CACzC;IACE,WAAW,EAAE;QACX,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,aAAa;KACnB;IACD,WAAW,EAAE;QACX,IAAI,EAAE,MAAM;KACb;IACD,cAAc,EAAE;QACd,IAAI,EAAE,MAAM;KACb;IACD,KAAK,EAAE;QACL,IAAI,EAAE,MAAM;KACb;CACF,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEW,QAAA,kBAAkB,GAAG,IAAA,gBAAK,EAGrC,oBAAoB,EAAE,wBAAwB,CAAC,CAAC;AAErC,QAAA,oBAAoB,GAAG,IAAA,0CAAe,EACjD,0BAAyB,CAC1B,CAAC","sourcesContent":["import { Schema, Document, Types, Model, model } from 'mongoose';\nimport { composeMongoose } from 'graphql-compose-mongoose';\nimport { ITransaction } from '../transaction/transaction.model';\n\nexport interface ITransactionHistory {\n  _id?: any;\n  transaction: Types.ObjectId | ITransaction;\n  assetAmount: number;\n  currencyAmount: number;\n  price: number;\n  active: boolean;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport type TransactionHistoryDocument = Document<\n  Types.ObjectId,\n  any,\n  ITransactionHistory\n> &\n  ITransactionHistory;\n\nconst transactionHistorySchema = new Schema<ITransactionHistory>(\n  {\n    transaction: {\n      type: Schema.Types.ObjectId,\n      ref: 'Transaction',\n    },\n    assetAmount: {\n      type: Number,\n    },\n    currencyAmount: {\n      type: Number,\n    },\n    price: {\n      type: Number,\n    },\n  },\n  { timestamps: true }\n);\n\nexport const TransactionHistory = model<\n  TransactionHistoryDocument,\n  Model<TransactionHistoryDocument>\n>('TransactionHistory', transactionHistorySchema);\n\nexport const TransactionHistoryTC = composeMongoose<TransactionHistoryDocument>(\n  TransactionHistory as any\n);\n"]}