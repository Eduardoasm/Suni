{"version":3,"file":"transactionHistory.service.js","sourceRoot":"/","sources":["components/transactionHistory/transactionHistory.service.ts"],"names":[],"mappings":";;;;AAQA,uCAA4C;AAC5C,yEAGoC;AAEpC,SAAsB,OAAO,CAC3B,MAAyC,EACzC,UAAuD,EACvD,OAAkD;;QAElD,OAAO,6CAAkB,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;IACxE,CAAC;CAAA;AAND,0BAMC;AAED,SAAsB,IAAI,CACxB,MAAyC,EACzC,UAAuD,EACvD,OAAkD;;QAElD,OAAO,6CAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;IACrE,CAAC;CAAA;AAND,oBAMC;AAED,SAAsB,SAAS,CAC7B,MAAwC,EACxC,MAAwE,EACxE,OAAkD;;QAElD,OAAO,6CAAkB,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;IACtE,CAAC;CAAA;AAND,8BAMC;AAED,SAAsB,MAAM,CAAC,kBAAuC;;QAClE,OAAO,6CAAkB,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;IACvD,CAAC;CAAA;AAFD,wBAEC;AAED,SAAsB,UAAU,CAC9B,IAAY,EACZ,OAAe,EACf,MAAyC,EACzC,UAAuD,EACvD,OAAkD;;QAElD,OAAO,IAAA,qBAAa,EAClB,IAAI,EACJ,OAAO,EACP,6CAAkB,EAClB,MAAM,EACN,UAAU,EACV,OAAO,CACR,CAAC;IACJ,CAAC;CAAA;AAfD,gCAeC","sourcesContent":["/* eslint-disable import/no-cycle */\nimport type {\n  FilterQuery,\n  ProjectionType,\n  QueryOptions,\n  UpdateQuery,\n  UpdateWithAggregationPipeline,\n} from 'mongoose';\nimport { paginateModel } from '../../utils';\nimport {\n  ITransactionHistory,\n  TransactionHistory,\n} from './transactionHistory.model';\n\nexport async function findOne(\n  filter?: FilterQuery<ITransactionHistory>,\n  projection?: ProjectionType<ITransactionHistory> | null,\n  options?: QueryOptions<ITransactionHistory> | null\n) {\n  return TransactionHistory.findOne(filter, projection, options).exec();\n}\n\nexport async function find(\n  filter?: FilterQuery<ITransactionHistory>,\n  projection?: ProjectionType<ITransactionHistory> | null,\n  options?: QueryOptions<ITransactionHistory> | null\n) {\n  return TransactionHistory.find(filter, projection, options).exec();\n}\n\nexport async function updateOne(\n  filter: FilterQuery<ITransactionHistory>,\n  update: UpdateQuery<ITransactionHistory> | UpdateWithAggregationPipeline,\n  options?: QueryOptions<ITransactionHistory> | null\n) {\n  return TransactionHistory.updateOne(filter, update, options).exec();\n}\n\nexport async function create(transactionHistory: ITransactionHistory) {\n  return TransactionHistory.create(transactionHistory);\n}\n\nexport async function pagination(\n  page: number,\n  perPage: number,\n  filter?: FilterQuery<ITransactionHistory>,\n  projection?: ProjectionType<ITransactionHistory> | null,\n  options?: QueryOptions<ITransactionHistory> | null\n) {\n  return paginateModel(\n    page,\n    perPage,\n    TransactionHistory,\n    filter,\n    projection,\n    options\n  );\n}\n"]}