{"version":3,"file":"country.model.js","sourceRoot":"/","sources":["components/country/country.model.ts"],"names":[],"mappings":";;;AAAA,uCAAiE;AACjE,uEAA2D;AAgB3D,MAAM,aAAa,GAAG,IAAI,iBAAM,CAC9B;IACE,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,IAAI;KACX;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,IAAI;KACX;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,IAAI;KACX;IACD,MAAM,EAAE;QACN,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,IAAI;KACd;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KACf;CACF,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEW,QAAA,OAAO,GAAG,IAAA,gBAAK,EAC1B,SAAS,EACT,aAAa,CACd,CAAC;AAEW,QAAA,SAAS,GAAG,IAAA,0CAAe,EAAkB,eAAc,CAAC,CAAC","sourcesContent":["import { Types, model, Document, Model, Schema } from 'mongoose';\nimport { composeMongoose } from 'graphql-compose-mongoose';\n\nexport interface ICountry {\n  _id?: any;\n  name: string;\n  code: string;\n  flag: string;\n  disabled: boolean;\n  active: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport type CountryDocument = Document<Types.ObjectId, any, ICountry> &\n  ICountry;\n\nconst countrySchema = new Schema<ICountry>(\n  {\n    name: {\n      type: String,\n      trim: true,\n    },\n    code: {\n      type: String,\n      trim: true,\n    },\n    flag: {\n      type: String,\n      trim: true,\n    },\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  { timestamps: true }\n);\n\nexport const Country = model<ICountry, Model<ICountry>>(\n  'Country',\n  countrySchema\n);\n\nexport const CountryTC = composeMongoose<CountryDocument>(Country as any);\n"]}