{"version":3,"file":"user.service.js","sourceRoot":"/","sources":["components/user/user.service.ts"],"names":[],"mappings":";;;;AAAA,0DAA0B;AAC1B,uCAA4C;AAE5C,SAAsB,eAAe;;QACnC,IAAI;YACF,MAAM,KAAK,GAAG,MAAM,eAAK,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,OAAO,EAAE;gBAC/D,OAAO,EAAE;oBACP,aAAa,EAAE,UAAU,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE;iBACxD;aACF,CAAC,CAAC;YACH,OAAO,KAAK,CAAC,IAAI,CAAC;SACnB;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAC5B,MAAM,IAAI,qBAAa,CAAC,0BAA0B,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;SACpE;IACH,CAAC;CAAA;AAZD,0CAYC;AAED,SAAsB,OAAO,CAAC,MAAc;;QAC1C,MAAM,KAAK,GAAG,MAAM,eAAe,EAAE,CAAC;QACtC,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,EAAE,MAAK,MAAM,CAAC,CAAC;IACnD,CAAC;CAAA;AAHD,0BAGC;AAED,SAAsB,cAAc,CAAC,OAAe,EAAE,OAAe;;;QACnE,MAAM,KAAK,GAAG,MAAM,eAAe,EAAE,CAAC;QACtC,MAAM,KAAK,GAAG,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,0CAAE,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,EAAE,MAAK,OAAO,CAAC,CAAC;QAChE,MAAM,KAAK,GAAG,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,0CAAE,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,EAAE,MAAK,OAAO,CAAC,CAAC;QAChE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;;CACzB;AALD,wCAKC","sourcesContent":["import axios from 'axios';\nimport { NoSentryError } from '../../utils';\n\nexport async function getUsersAPICall() {\n  try {\n    const users = await axios.get(`${process.env.SERVICE_URL}/user`, {\n      headers: {\n        Authorization: `Bearer ${process.env.TOKEN_ADMIN_SUNI}`,\n      },\n    });\n    return users.data;\n  } catch (error) {\n    console.log(error, 'ERROR');\n    throw new NoSentryError(`Error en user service: ${error.message}`);\n  }\n}\n\nexport async function findOne(userId: string) {\n  const users = await getUsersAPICall();\n  return users.find((user) => user?.id === userId);\n}\n\nexport async function findTakerMaker(takerId: string, makerId: string) {\n  const users = await getUsersAPICall();\n  const taker = users?.data?.find((user) => user?.id === takerId);\n  const maker = users?.data?.find((user) => user?.id === makerId);\n  return { taker, maker };\n}\n"]}