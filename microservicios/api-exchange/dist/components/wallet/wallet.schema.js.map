{"version":3,"file":"wallet.schema.js","sourceRoot":"/","sources":["components/wallet/wallet.schema.ts"],"names":[],"mappings":";;;AAAA,uCAAkC;AAClC,qDAAiD;AACjD,uEAAkE;AAWrD,QAAA,YAAY,GAAG,IAAI,iBAAM,CACpC;IACE,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,CAAC,IAAI,EAAE,+BAA+B,CAAC;KAClD;IACD,OAAO,EAAE;QACP,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,CAAC,IAAI,EAAE,kCAAkC,CAAC;KACrD;CACF,EACD;IACE,UAAU,EAAE,IAAI;CACjB,CACF,CAAC;AAEF,IAAA,iDAAsB,EAAC,oBAAY,EAAE,QAAQ,EAAE,gCAAc,CAAC,CAAC","sourcesContent":["import { Schema } from 'mongoose';\nimport { schemaComposer } from 'graphql-compose';\nimport { convertSchemaToGraphQL } from 'graphql-compose-mongoose';\n\nexport interface IWallet {\n  _id?: string;\n  name: string;\n  address: string;\n  active: boolean;\n  updatedAt: Date;\n  createdAt: Date;\n}\n\nexport const walletSchema = new Schema<IWallet>(\n  {\n    name: {\n      type: String,\n      trim: true,\n      required: [true, 'Please enter a name of wallet'],\n    },\n    address: {\n      type: String,\n      required: [true, 'Please enter a address of wallet'],\n    },\n  },\n  {\n    timestamps: true,\n  }\n);\n\nconvertSchemaToGraphQL(walletSchema, 'Wallet', schemaComposer);\n"]}