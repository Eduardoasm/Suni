{"version":3,"file":"streamChat.service.js","sourceRoot":"/","sources":["components/streamChat/streamChat.service.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n\nimport { StreamChat } from 'stream-chat';\nimport axios from 'axios';\nimport { getUser } from '../../utils/walletService/userWau';\nimport {\n  TStreamChatAuthInput,\n  TGetChannelById,\n  TCreateChannel,\n  TSetChannelModerator,\n} from './streamChat.dto';\nimport { NoSentryError } from '../../utils/NoSentryError';\n\nexport async function authChat(body: TStreamChatAuthInput) {\n  const { token } = body;\n  const { data: user } = await getUser(token);\n\n  const serverClient = StreamChat.getInstance(\n    process.env.STREAM_CHAT_API_KEY,\n    process.env.STREAM_CHAT_SECRET\n  );\n  const chatToken = serverClient.createToken(user.id);\n  return chatToken;\n}\n\nexport async function adminAuthChat(body: TStreamChatAuthInput) {\n  const { token } = body;\n\n  const { data } = await axios.get(\n    `${process.env.LOANS_API_BASE_URL}/auth/current-user`,\n    {\n      headers: {\n        Authorization: token,\n      },\n    }\n  );\n  const serverClient = StreamChat.getInstance(\n    process.env.STREAM_CHAT_API_KEY,\n    process.env.STREAM_CHAT_SECRET\n  );\n  console.log(data, 'data from api current user');\n  const chatToken = serverClient.createToken(data?.user?.user?._id);\n  return chatToken;\n}\n\nexport async function getChannelById(body: TGetChannelById) {\n  try {\n    const serverClient = StreamChat.getInstance(\n      process.env.STREAM_CHAT_API_KEY,\n      process.env.STREAM_CHAT_SECRET\n    );\n    const filter = { type: 'messaging', id: body.channelId };\n    const channels = await serverClient.queryChannels(\n      filter,\n      {},\n      {\n        watch: false, // this is the default\n        state: true,\n      }\n    );\n    return channels[0];\n  } catch (error) {\n    throw new NoSentryError(`Error in get channel: ${error}`);\n  }\n}\n\nexport async function createChannel(body: TCreateChannel) {\n  try {\n    const serverClient = StreamChat.getInstance(\n      process.env.STREAM_CHAT_API_KEY,\n      process.env.STREAM_CHAT_SECRET\n    );\n    await serverClient.upsertUsers([{ id: body.maker }, { id: body.taker }]);\n    const channel = serverClient.channel('messaging', body.channelId, {\n      name: body.channelId,\n      members: [body.maker, body.taker],\n      created_by_id: body.taker,\n    });\n    await channel.create();\n    return channel;\n  } catch (error) {\n    console.log('Error in create channel');\n    throw new NoSentryError(`Error in create channel: ${error.title}`);\n  }\n}\n\nexport async function setChannelModerator(body: TSetChannelModerator) {\n  try {\n    const channel = await getChannelById({\n      channelId: body?.channelId,\n    });\n    const { data } = await axios.get(\n      `${process.env.LOANS_API_BASE_URL}/auth/current-user`,\n      {\n        headers: {\n          Authorization: body?.token,\n        },\n      }\n    );\n    console.log(data, 'data in setChannelModerator');\n\n    const moderator = await channel.queryMembers({ is_moderator: true });\n    if (\n      moderator?.members?.length > 0 &&\n      moderator?.members[0]?.user_id === data?.user?.user?._id\n    ) {\n      await channel.demoteModerators([moderator?.members[0]?.user_id]);\n      await channel.addModerators([data?.user?.user?._id], {\n        text: 'Suni support joined the channel.',\n        user_id: data?.user?.user?._id,\n        name: 'Suni Support',\n      });\n      return {\n        channelId: body?.channelId,\n        message: 'Moderator updated successfully',\n        success: true,\n      };\n    }\n    if (moderator?.members?.length === 0) {\n      await channel.addModerators([data?.user?.user?._id], {\n        text: 'Suni support joined the channel.',\n        user_id: data?.user?.user?._id,\n        name: 'Suni Support',\n      });\n    }\n    return {\n      channelId: body?.channelId,\n      message: 'Chat moderator online',\n      success: true,\n    };\n  } catch (err) {\n    return {\n      channelId: body?.channelId,\n      message: 'Error adding the chat moderator',\n      errorMessage: err.message,\n      success: false,\n    };\n  }\n}\n\nexport async function deleteChannel(body: TGetChannelById) {\n  try {\n    const channel = await getChannelById(body);\n\n    await channel.delete();\n  } catch (error) {\n    console.log('Error in delete channel');\n    throw new NoSentryError('Error in delete channel');\n  }\n}\n"]}