{"version":3,"file":"paymentMethodValue.dto.js","sourceRoot":"/","sources":["components/paymentMethodValue/paymentMethodValue.dto.ts"],"names":[],"mappings":";;;AACA,yEAAkE;AAErD,QAAA,2BAA2B,GAAG,+CAAoB,CAAC,WAAW,EAAE,CAAC;AACjE,QAAA,uBAAuB,GAAG,+CAAoB,CAAC,OAAO,EAAE,CAAC;AACzD,QAAA,6BAA6B,GACxC,+CAAoB,CAAC,aAAa,EAAE,CAAC,WAAW,EAAE,CAAC;AACxC,QAAA,8BAA8B,GACzC,+CAAoB,CAAC,cAAc,EAAE,CAAC;AAW3B,QAAA,yBAAyB,GAAG;;;;;;;;;;CAUxC,CAAC;AAEW,QAAA,oBAAoB,GAAG;;;;CAInC,CAAC","sourcesContent":["import { Types } from 'mongoose';\nimport { PaymentMethodValueTC } from './paymentMethodValue.model';\n\nexport const PaymentMethodValueTypesName = PaymentMethodValueTC.getTypeName();\nexport const PaymentMethodValueTypes = PaymentMethodValueTC.getType();\nexport const PaymentMethodValueTypesPlural =\n  PaymentMethodValueTC.getTypePlural().getTypeName();\nexport const PaymentMethodValueTypesNonNull =\n  PaymentMethodValueTC.getTypeNonNull();\n\nexport type TUpdateManyValuesUser = {\n  _id: Types.ObjectId;\n  value: string;\n};\n\nexport type TUpdatesManyValues = {\n  items: Array<TUpdateManyValuesUser>;\n};\n\nexport const UpdateManyValuesUserInput = `\n  input UpdateManyValuesUser {\n    items: [Values!]\n    idPaymentMethod: MongoID!\n  }\n\n  input Values {\n    _id: MongoID!\n    value: String!\n  }\n`;\n\nexport const UpdateManyValuesType = `\n  type UpdateManyValues {\n    success: Boolean!\n  }\n`;\n"]}