{"version":3,"file":"paymentMethodValue.model.js","sourceRoot":"/","sources":["components/paymentMethodValue/paymentMethodValue.model.ts"],"names":[],"mappings":";;;AAAA,uCAAiE;AACjE,uEAA2D;AAC3D,iFAGkD;AAkBlD,MAAM,wBAAwB,GAAG,IAAI,iBAAM,CACzC;IACE,KAAK,EAAE;QACL,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,CAAC,IAAI,EAAE,kBAAkB,CAAC;QACpC,IAAI,EAAE,IAAI;KACX;IACD,kBAAkB,EAAE;QAClB,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,oBAAoB;KAC1B;IACD,MAAM,EAAE;QACN,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,IAAI;KACd;CACF,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEW,QAAA,kBAAkB,GAAG,IAAA,gBAAK,EAGrC,oBAAoB,EAAE,wBAAwB,CAAC,CAAC;AAErC,QAAA,oBAAoB,GAAG,IAAA,0CAAe,EACjD,0BAAyB,CAC1B,CAAC;AAEF,4BAAoB,CAAC,WAAW,CAAC,oBAAoB,EAAE;IACrD,QAAQ,EAAE,GAAG,EAAE,CACb,yCAAoB,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;IACnE,WAAW,EAAE;QACX,GAAG,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,kBAAkB;KAC3C;IACD,UAAU,EAAE,EAAE,kBAAkB,EAAE,CAAC,EAAE;CACtC,CAAC,CAAC","sourcesContent":["import { Types, model, Document, Model, Schema } from 'mongoose';\nimport { composeMongoose } from 'graphql-compose-mongoose';\nimport {\n  IPaymentMethodInput,\n  PaymentMethodInputTC,\n} from '../paymentMethodInput/paymentMethodInput';\n\nexport interface IPaymentMethodValue {\n  _id?: any;\n  value: string;\n  paymentMethodInput?: Types.ObjectId | IPaymentMethodInput;\n  active?: boolean;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport type PaymentMethodValueDocument = Document<\n  Types.ObjectId,\n  any,\n  IPaymentMethodValue\n> &\n  IPaymentMethodValue;\n\nconst PaymentMethodValueSchema = new Schema<IPaymentMethodValue>(\n  {\n    value: {\n      type: String,\n      required: [true, 'Ingresa un valor'],\n      trim: true,\n    },\n    paymentMethodInput: {\n      type: Schema.Types.ObjectId,\n      ref: 'PaymentMethodInput',\n    },\n    active: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  { timestamps: true }\n);\n\nexport const PaymentMethodValue = model<\n  IPaymentMethodValue,\n  Model<IPaymentMethodValue>\n>('PaymentMethodValue', PaymentMethodValueSchema);\n\nexport const PaymentMethodValueTC = composeMongoose<PaymentMethodValueDocument>(\n  PaymentMethodValue as any\n);\n\nPaymentMethodValueTC.addRelation('paymentMethodInput', {\n  resolver: () =>\n    PaymentMethodInputTC.mongooseResolvers.dataLoader({ lean: true }),\n  prepareArgs: {\n    _id: (source) => source.paymentMethodInput,\n  },\n  projection: { paymentMethodInput: 1 },\n});\n"]}