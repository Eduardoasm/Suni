{"version":3,"file":"settings.model.js","sourceRoot":"/","sources":["components/settings/settings.model.ts"],"names":[],"mappings":";;;AAAA,uEAA2D;AAC3D,uCAAiE;AAkCpD,QAAA,cAAc,GAAG,IAAI,iBAAM,CAAY;IAClD,QAAQ,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,CAAC,IAAI,EAAE,0BAA0B,CAAC;KAC7C;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,CAAC,IAAI,EAAE,0BAA0B,CAAC;KAC7C;IACD,cAAc,EAAE;QACd,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,CAAC;KACX;IACD,YAAY,EAAE;QACZ,gBAAgB,EAAE;YAChB,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,CAAC;SACX;QACD,gBAAgB,EAAE;YAChB,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,CAAC;SACX;KACF;IACD,GAAG,EAAE;QACH,cAAc,EAAE;YACd,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,KAAK;SACf;QACD,eAAe,EAAE;YACf,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,MAAM;SAChB;QACD,mCAAmC,EAAE;YACnC,IAAI,EAAE;gBACJ,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,CAAC,OAAO,EAAE,YAAY,CAAC;gBAC7B,OAAO,EAAE,OAAO;aACjB;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,MAAM;gBACZ,OAAO,EAAE,MAAM;aAChB;SACF;QACD,qCAAqC,EAAE;YACrC,IAAI,EAAE;gBACJ,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,CAAC,OAAO,EAAE,YAAY,CAAC;gBAC7B,OAAO,EAAE,YAAY;aACtB;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,MAAM;gBACZ,OAAO,EAAE,GAAG;aACb;SACF;QACD,mCAAmC,EAAE;YACnC,IAAI,EAAE;gBACJ,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,CAAC,OAAO,EAAE,YAAY,CAAC;gBAC7B,OAAO,EAAE,YAAY;aACtB;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,MAAM;gBACZ,OAAO,EAAE,GAAG;aACb;SACF;QACD,kCAAkC,EAAE;YAClC,IAAI,EAAE;gBACJ,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,CAAC,OAAO,EAAE,YAAY,CAAC;gBAC7B,OAAO,EAAE,YAAY;aACtB;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,MAAM;gBACZ,OAAO,EAAE,GAAG;aACb;SACF;QACD,oCAAoC,EAAE;YACpC,IAAI,EAAE;gBACJ,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,CAAC,OAAO,EAAE,YAAY,CAAC;gBAC7B,OAAO,EAAE,YAAY;aACtB;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,MAAM;gBACZ,OAAO,EAAE,GAAG;aACb;SACF;QACD,kCAAkC,EAAE;YAClC,IAAI,EAAE;gBACJ,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,CAAC,OAAO,EAAE,YAAY,CAAC;gBAC7B,OAAO,EAAE,YAAY;aACtB;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,MAAM;gBACZ,OAAO,EAAE,GAAG;aACb;SACF;KACF;IACD,MAAM,EAAE;QACN,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,IAAI;KACd;CACF,CAAC,CAAC;AAEU,QAAA,QAAQ,GAAG,IAAA,gBAAK,EAC3B,UAAU,EACV,sBAAc,CACf,CAAC;AAEW,QAAA,UAAU,GAAG,IAAA,0CAAe,EAAkB,gBAAe,CAAC,CAAC","sourcesContent":["import { composeMongoose } from 'graphql-compose-mongoose';\nimport { Schema, Model, Document, model, Types } from 'mongoose';\n\nexport type feeTypeEnum = 'fixed' | 'percentage';\n\nexport interface IFee {\n  type: feeTypeEnum;\n  value: number;\n}\n\nexport interface ISettings {\n  _id?: any;\n  makerFee: number;\n  takerFee: number;\n  transactionFee: number;\n  transactions: {\n    maxAmountAllowed?: number; // Max amount a user can set by transaction\n    minAmountAllowed?: number; // Min amount a user can set by transaction\n  };\n  btc: {\n    minTransAmount: number;\n    transBreakPoint: number;\n    cryptoHolderTransFeeUnderBreakPoint: IFee;\n    cryptoHolderServiceFeeUnderBreakPoint: IFee;\n    fiatHolderServiceFeeUnderBreakPoint: IFee;\n    cryptoHolderTransFeeOverBreakPoint: IFee;\n    cryptoHolderServiceFeeOverBreakPoint: IFee;\n    fiatHolderServiceFeeOverBreakPoint: IFee;\n  };\n  active?: boolean;\n}\n\nexport type SettingDocument = Document<Types.ObjectId, any, ISettings> &\n  ISettings;\n\nexport const settingsSchema = new Schema<ISettings>({\n  makerFee: {\n    type: Number,\n    required: [true, 'Please enter a maker fee'],\n  },\n  takerFee: {\n    type: Number,\n    required: [true, 'Please enter a taker fee'],\n  },\n  transactionFee: {\n    type: Number,\n    default: 0,\n  },\n  transactions: {\n    maxAmountAllowed: {\n      type: Number,\n      default: 0,\n    },\n    minAmountAllowed: {\n      type: Number,\n      default: 0,\n    },\n  },\n  btc: {\n    minTransAmount: {\n      type: Number,\n      default: 0.004,\n    },\n    transBreakPoint: {\n      type: Number,\n      default: 0.0333,\n    },\n    cryptoHolderTransFeeUnderBreakPoint: {\n      type: {\n        type: String,\n        enum: ['fixed', 'percentage'],\n        default: 'fixed',\n      },\n      value: {\n        type: Number,\n        default: 0.0001,\n      },\n    },\n    cryptoHolderServiceFeeUnderBreakPoint: {\n      type: {\n        type: String,\n        enum: ['fixed', 'percentage'],\n        default: 'percentage',\n      },\n      value: {\n        type: Number,\n        default: 0.5,\n      },\n    },\n    fiatHolderServiceFeeUnderBreakPoint: {\n      type: {\n        type: String,\n        enum: ['fixed', 'percentage'],\n        default: 'percentage',\n      },\n      value: {\n        type: Number,\n        default: 0.5,\n      },\n    },\n    cryptoHolderTransFeeOverBreakPoint: {\n      type: {\n        type: String,\n        enum: ['fixed', 'percentage'],\n        default: 'percentage',\n      },\n      value: {\n        type: Number,\n        default: 0.3,\n      },\n    },\n    cryptoHolderServiceFeeOverBreakPoint: {\n      type: {\n        type: String,\n        enum: ['fixed', 'percentage'],\n        default: 'percentage',\n      },\n      value: {\n        type: Number,\n        default: 0.5,\n      },\n    },\n    fiatHolderServiceFeeOverBreakPoint: {\n      type: {\n        type: String,\n        enum: ['fixed', 'percentage'],\n        default: 'percentage',\n      },\n      value: {\n        type: Number,\n        default: 0.5,\n      },\n    },\n  },\n  active: {\n    type: Boolean,\n    default: true,\n  },\n});\n\nexport const Settings = model<ISettings, Model<ISettings>>(\n  'Settings',\n  settingsSchema\n);\n\nexport const SettingsTC = composeMongoose<SettingDocument>(Settings as any);\n"]}