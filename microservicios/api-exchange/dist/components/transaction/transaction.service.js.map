{"version":3,"file":"transaction.service.js","sourceRoot":"/","sources":["components/transaction/transaction.service.ts"],"names":[],"mappings":";;;;AAAA,sDAAsD;AACtD,0CAA0C;AAC1C,0CAA0C;AAC1C,oCAAoC;AACpC,gEAAgC;AAQhC,0DAA0B;AAC1B,4DAA4B;AAC5B,wEAAqC;AACrC,uCAA2D;AAC3D,2DAAgE;AAShE,2FAAqE;AACrE,6EAAuD;AACvD,sFAAgE;AAChE,+DAA4D;AAC5D,oEAAqE;AACrE,qEAAqE;AACrE,+EAAwE;AACxE,uDAAkD;AAClD,0CAAkD;AAElD,sFAAgE;AAChE,yEAAuE;AACvE,4DAAyD;AACzD,uEAAoE;AACpE,qGAAkG;AAClG,6FAA0F;AAC1F,yFAAsF;AACtF,uGAAoG;AACpG,qFAAmF;AACnF,mEAAgE;AAChE,yFAAmE;AAEnE,qFAAkF;AAElF,sBAAS,CAAC,MAAM,CAAC,EAAE,cAAc,EAAE,EAAE,EAAE,aAAa,EAAE,CAAC,EAAE,CAAC,CAAC;AAE3D,SAAsB,yBAAyB,CAAC,KAAa;;QAC3D,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,MAAM,IAAA,iBAAO,EAAC,KAAK,CAAC,CAAC;QAC5C,MAAM,iBAAiB,GAAG,CAAC,SAAS,EAAE,kBAAkB,EAAE,kBAAkB,CAAC,CAAC;QAC9E,MAAM,aAAa,GAAG,CAAC,QAAQ,EAAE,gBAAgB,EAAE,SAAS,CAAC,CAAC;QAC9D,yBAAyB;QACzB,MAAM,iBAAiB,GAAG,MAAM,+BAAW,CAAC,IAAI,CAAC;YAC/C,IAAI,EAAE;gBACJ,EAAE,UAAU,EAAE,IAAI,CAAC,EAAE,EAAE;gBACvB;oBACE,MAAM,EAAE;wBACN,GAAG,EAAE,iBAAiB;qBACvB;iBACF;aACF;SACF,CAAC,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QAE3B,yBAAyB;QACzB,MAAM,aAAa,GAAG,MAAM,uBAAO,CAAC,IAAI,CAAC;YACvC,UAAU,EAAE,IAAI,CAAC,EAAE;YACnB,MAAM,EAAE;gBACN,GAAG,EAAE,aAAa;aACnB;SACF,CAAC,CAAC;QAEH,MAAM,iBAAiB,GAAG,MAAM,+BAAW,CAAC,IAAI,CAAC;YAC/C,IAAI,EAAE;gBACJ;oBACE,OAAO,EAAE;wBACP,GAAG,EAAE,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;qBACrC;iBACF;gBACD;oBACE,MAAM,EAAE;wBACN,GAAG,EAAE,iBAAiB;qBACvB;iBACF;aACF;SACF,CAAC,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QAE3B,OAAO;YACL,iBAAiB;YACjB,iBAAiB;YACjB,sBAAsB,EAAE,iBAAiB,CAAC,MAAM;YAChD,sBAAsB,EAAE,iBAAiB,CAAC,MAAM;YAChD,KAAK,EAAE,iBAAiB,CAAC,MAAM,GAAG,iBAAiB,CAAC,MAAM;SAC3D,CAAC;IACJ,CAAC;CAAA;AA9CD,8DA8CC;AAED,SAAsB,OAAO,CAC3B,MAAkC,EAClC,UAAgD,EAChD,OAA2C;;QAE3C,OAAO,+BAAW,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;IACjE,CAAC;CAAA;AAND,0BAMC;AAED,SAAsB,aAAa,CACjC,MAAkC,EAClC,UAAgD,EAChD,OAA2C;;QAE3C,OAAO,+BAAW,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC;aACpD,QAAQ,CAAC;YACR;gBACE,IAAI,EAAE,eAAe;gBACrB,KAAK,EAAE,eAAe;gBACtB,QAAQ,EAAE;oBACR;wBACE,IAAI,EAAE,QAAQ;wBACd,KAAK,EAAE,oBAAoB;wBAC3B,QAAQ,EAAE;4BACR,IAAI,EAAE,oBAAoB;4BAC1B,KAAK,EAAE,oBAAoB;yBAC5B;qBACF;oBACD;wBACE,IAAI,EAAE,MAAM;wBACZ,KAAK,EAAE,uBAAuB;wBAC9B,QAAQ,EAAE;4BACR;gCACE,IAAI,EAAE,UAAU;gCAChB,KAAK,EAAE,UAAU;6BAClB;4BACD;gCACE,IAAI,EAAE,qBAAqB;gCAC3B,KAAK,EAAE,oBAAoB;6BAC5B;yBACF;qBACF;iBACF;aACF;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,QAAQ,EAAE;oBACR;wBACE,IAAI,EAAE,UAAU;wBAChB,KAAK,EAAE,UAAU;qBAClB;oBACD;wBACE,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,OAAO;qBACf;oBACD;wBACE,IAAI,EAAE,WAAW;wBACjB,KAAK,EAAE,WAAW;wBAClB,QAAQ,EAAE;4BACR;gCACE,IAAI,EAAE,UAAU;gCAChB,KAAK,EAAE,UAAU;6BAClB;4BACD;gCACE,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE,OAAO;6BACf;yBACF;qBACF;oBACD;wBACE,IAAI,EAAE,gBAAgB;wBACtB,KAAK,EAAE,eAAe;wBACtB,QAAQ,EAAE;4BACR;gCACE,IAAI,EAAE,QAAQ;gCACd,KAAK,EAAE,oBAAoB;gCAC3B,QAAQ,EAAE;oCACR,IAAI,EAAE,oBAAoB;oCAC1B,KAAK,EAAE,oBAAoB;iCAC5B;6BACF;4BACD;gCACE,IAAI,EAAE,MAAM;gCACZ,KAAK,EAAE,uBAAuB;gCAC9B,QAAQ,EAAE;oCACR;wCACE,IAAI,EAAE,UAAU;wCAChB,KAAK,EAAE,UAAU;qCAClB;oCACD;wCACE,IAAI,EAAE,qBAAqB;wCAC3B,KAAK,EAAE,oBAAoB;qCAC5B;iCACF;6BACF;yBACF;qBACF;iBACF;aACF;SACF,CAAC;aACD,IAAI,EAAE,CAAC;IACZ,CAAC;CAAA;AA7FD,sCA6FC;AAED,SAAsB,IAAI,CACxB,MAAkC,EAClC,UAAgD,EAChD,OAA2C;;QAE3C,OAAO,+BAAW,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;IAC9D,CAAC;CAAA;AAND,oBAMC;AAED,SAAsB,SAAS,CAC7B,MAAiC,EACjC,MAAiE,EACjE,OAA2C;;QAE3C,OAAO,+BAAW,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;IAC/D,CAAC;CAAA;AAND,8BAMC;AAED,SAAe,cAAc,CAC3B,QAAmB,EACnB,OAAiB,EACjB,IAAS,EACT,IAAS,EACT,OAAkB,EAClB,KAAa;;;QAEb,sHAAsH;QACtH,kCAAkC;QAClC,MAAM,KAAK,GAAG,IAAA,gBAAM,GAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACtC,MAAM,YAAY,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;QACpC,MAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;QAE/C,IAAI,YAAY,GAAW,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,CAAC;QAE1C,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,mBAAmB,EAAE;YAChC,IAAI,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB,MAAK,MAAM,EAAE;gBAC1C,MAAM,SAAS,GAAG,MAAM,gBAAgB,CAAC,OAAO,CAAC;oBAC/C,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,CAAC,GAAG;oBACjC,OAAO,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,CAAC,GAAG;iBAC5B,CAAC,CAAC;gBACH,IAAI,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,MAAK,MAAM;oBAC1B,YAAY,GAAG,OAAO,CAAC,mBAAmB,GAAG,SAAS,CAAC,aAAa,CAAC;;oBAErE,YAAY;wBACV,OAAO,CAAC,mBAAmB,GAAG,SAAS,CAAC,iBAAiB,CAAC;aAC/D;iBAAM;gBACL,YAAY;oBACV,OAAO,CAAC,mBAAmB;wBAC3B,KAAK,CAAC,mBAAmB;wBACzB,QAAQ,CAAC,mBAAmB,CAAC;aAChC;SACF;QAED,gCAAgC;QAChC,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC;QAE9C,2BAA2B;QAC3B,MAAM,WAAW,GACf,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC,mBAAmB,CAAC;QAE9D,2GAA2G;QAC3G,MAAM,iBAAiB,GAAG,MAAM,+BAAW,CAAC,IAAI,CAAC;YAC/C,IAAI,EAAE;gBACJ,EAAE,UAAU,EAAE,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,0CAAE,EAAE,EAAE;gBAClC,EAAE,SAAS,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE;aACxD;SACF,CAAC,CAAC;QACH,MAAM,iBAAiB,GAAG,MAAM,+BAAW,CAAC,IAAI,CAAC;YAC/C,IAAI,EAAE;gBACJ,EAAE,UAAU,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,EAAE,EAAE;gBACxB,EAAE,SAAS,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE;aACxD;SACF,CAAC,CAAC;QACH,MAAM,cAAc,GAAG,iBAAiB,CAAC,MAAM,CAC7C,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,EACnC,CAAC,CACF,CAAC;QACF,MAAM,cAAc,GAAG,iBAAiB,CAAC,MAAM,CAC7C,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,EACnC,CAAC,CACF,CAAC;QACF,MAAM,yBAAyB,GAAG,WAAW,GAAG,cAAc,CAAC;QAC/D,MAAM,yBAAyB,GAAG,WAAW,GAAG,cAAc,CAAC;QAC/D,IACE,cAAc,IAAI,OAAO,CAAC,YAAY,CAAC,gBAAgB;YACvD,yBAAyB,IAAI,OAAO,CAAC,YAAY,CAAC,gBAAgB;YAElE,MAAM,IAAI,qBAAa,CAAC,iDAAiD,CAAC,CAAC;QAC7E,IACE,cAAc,IAAI,OAAO,CAAC,YAAY,CAAC,gBAAgB;YACvD,yBAAyB,IAAI,OAAO,CAAC,YAAY,CAAC,gBAAgB;YAElE,MAAM,IAAI,qBAAa,CAAC,iDAAiD,CAAC,CAAC;QAE7E,OAAO;YACL,WAAW;YACX,UAAU;YACV,YAAY;SACb,CAAC;;CACH;AAED,SAAsB,MAAM,CAAC,IAAwB,EAAE,KAAa;;;QAClE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,MAAM,IAAA,iBAAO,EAAC,KAAK,CAAC,CAAC;QAE5C,MAAM,OAAO,GAAG,MAAM,kBAAQ,CAAC,YAAY,EAAE,CAAC;QAE9C,IAAI;YACF,OAAO,CAAC,gBAAgB,EAAE,CAAC;YAE3B,MAAM,eAAe,GAAG,UAAU,CAAC;YACnC,MAAM,cAAc,GAAG,SAAS,CAAC;YACjC,qCAAqC;YACrC,MAAM,OAAO,GAAG,MAAM,cAAc,CAAC,OAAO,CAC1C,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,EAAE,EACvB,IAAI,EACJ,EAAE,OAAO,EAAE,CACZ,CAAC;YACF,IAAI,CAAC,OAAO;gBAAE,MAAM,IAAI,qBAAa,CAAC,mBAAmB,CAAC,CAAC;YAC3D,iEAAiE;YACjE,IAAI,OAAO,CAAC,MAAM,KAAK,eAAe;gBACpC,MAAM,IAAI,qBAAa,CACrB,iDAAiD,CAClD,CAAC;YACJ,IAAI,OAAO,CAAC,MAAM,KAAK,cAAc;gBACnC,MAAM,IAAI,qBAAa,CAAC,gDAAgD,CAAC,CAAC;YAC5E,8CAA8C;YAC9C,MAAM,KAAK,GAAG,MAAM,YAAY,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC;YACjE,IAAI,CAAC,KAAK;gBAAE,MAAM,IAAI,qBAAa,CAAC,iBAAiB,CAAC,CAAC;YAEvD,MAAM,OAAO,GAAG,MAAM,mBAAQ,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;YAEzD,gDAAgD;YAChD,MAAM,QAAQ,GAAG,MAAM,eAAe,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;YAE1E,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE,GAAG,MAAM,cAAc,CACpE,QAAQ,EACR,OAAO,EACP,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,KAAK,CACN,CAAC;YACF,mDAAmD;YACnD,IAAI,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,EAAE,OAAK,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,0CAAE,EAAE,CAAA;gBACjC,MAAM,IAAI,qBAAa,CAAC,0BAA0B,CAAC,CAAC;YAEtD,MAAM,IAAA,uCAAkB,EAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YACtC,MAAM,IAAA,+CAAsB,EAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;YAEnD,IAAI,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE;gBAChC,MAAM,IAAI,qBAAa,CACrB,sDAAsD,CACvD,CAAC;aACH;YAED,MAAM,QAAQ,GAAG,MAAA,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,0CAAE,aAAa,mCAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,CAAC;YAElE,MAAM,YAAY,GAAG,MAAA,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,0CAAE,YAAY,mCAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,QAAQ,CAAC;YAEzE,MAAM,eAAe,GAAG;gBACtB,OAAO,EAAE,OAAO,CAAC,GAAG;gBACpB,KAAK,EAAE;oBACL,EAAE,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,EAAE;oBACZ,KAAK,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK;oBAClB,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE,YAAY;iBACvB;gBACD,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,aAAa,EAAE,MAAA,IAAI,CAAC,aAAa,mCAAI,IAAI;gBACzC,cAAc,EAAE,IAAI,CAAC,cAAc;gBACnC,KAAK,EAAE;oBACL,EAAE,EAAE,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,0CAAE,EAAE;oBACtB,KAAK,EAAE,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,0CAAE,KAAK;oBAC5B,IAAI,EAAE,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,0CAAE,IAAI;oBAC1B,QAAQ,EAAE,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,0CAAE,QAAQ;iBACnC;gBACD,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,WAAW;gBACtB,QAAQ,EAAE,OAAO,CAAC,GAAG;gBACrB,QAAQ,EAAE,IAAI;gBACd,UAAU;aACX,CAAC;YAEF,MAAM,MAAM,GAAG,MAAM,IAAA,0BAAa,EAAC,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YAE/D,IAAI,CAAC,MAAM;gBAAE,MAAM,IAAI,qBAAa,CAAC,sBAAsB,CAAC,CAAC;YAE7D,IAAI,OAAO,CAAC,IAAI,KAAK,UAAU,EAAE;gBAC/B,MAAM,gBAAgB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;gBACjD,IAAI,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,GAAG,gBAAgB,EAAE;oBACnD,MAAM,IAAI,qBAAa,CAAC,6BAA6B,CAAC,CAAC;iBACxD;gBACD,MAAM,QAAQ,GAAG,MAAM,IAAA,uCAAkB,EACvC;oBACE,iBAAiB,EAAE,IAAI,CAAC,MAAM;oBAC9B,YAAY,EAAE,KAAK,CAAC,OAAO;oBAC3B,eAAe,EAAE,MAAM;oBACvB,QAAQ,EAAE,OAAO;iBAClB,EACD,OAAO,CACR,CAAC;gBACF,eAAe,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACpC,MAAM,EAAE,GAAG,MAAM,IAAA,6BAAW,EAAC;oBAC3B,KAAK;oBACL,MAAM,EAAE,MAAM,CAAC,MAAM;oBACrB,MAAM,EAAE,IAAI,CAAC,MAAM;oBACnB,QAAQ;iBACT,CAAC,CAAC;gBACH,eAAe,CAAC,QAAQ,GAAG,MAAA,EAAE,aAAF,EAAE,uBAAF,EAAE,CAAE,IAAI,0CAAE,EAAE,CAAC;aACzC;iBAAM;gBACL,MAAM,QAAQ,GAAG,MAAM,IAAA,mCAAgB,EACrC;oBACE,iBAAiB,EAAE,IAAI,CAAC,MAAM;oBAC9B,YAAY,EAAE,KAAK,CAAC,OAAO;oBAC3B,eAAe,EAAE,UAAU;oBAC3B,QAAQ,EAAE,OAAO;iBAClB,EACD,OAAO,CACR,CAAC;gBACF,eAAe,CAAC,QAAQ,GAAG,QAAQ,CAAC;aACrC;YAED,IAAI,OAAO,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM;gBAAE,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;YAE3D,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC;YAE9B,OAAO,CAAC,MAAM;gBACZ,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,gBAAgB,CAAC;YAEzE,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC;gBAAE,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;YAEjD,IAAI,OAAO,CAAC,cAAc,GAAG,OAAO,CAAC,MAAM,EAAE;gBAC3C,IAAA,mCAAgB,EAAC,KAAK,CAAC,OAAO,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;aACxD;YAED,MAAM,OAAO,CAAC,IAAI,EAAE,CAAC;YAErB,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;gBAChC,MAAM,iBAAiB,GAAG;oBACxB,KAAK;oBACL,MAAM,EAAE,OAAO,CAAC,KAAK,CAAC,EAAE;oBACxB,KAAK,EAAE,SAAS;oBAChB,OAAO,EAAE;4EAC2D;iBACrE,CAAC;gBAEF,MAAM,IAAA,oCAAiB,EAAC,iBAAiB,CAAC,CAAC;aAC5C;YAED,MAAM,kBAAkB,GAAG,MAAM,+BAAW,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,EAAE;gBACrE,OAAO;aACR,CAAC,CAAC;YAEH,MAAM,qBAAqB,GAAG;gBAC5B,IAAI,EACF,OAAO,CAAC,IAAI,KAAK,UAAU;oBACzB,CAAC,CAAC,GAAG,QAAQ,IAAI,YAAY,EAAE;oBAC/B,CAAC,CAAC,GAAG,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,0CAAE,IAAI,IAAI,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,0CAAE,QAAQ,EAAE;aAC5D,CAAC;YAEF,MAAM,qBAAqB,GACzB,OAAO,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,CAAC,CAAC,CAAC,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,0CAAE,KAAK,CAAC;YAEpE,MAAM,UAAU,GAAG;gBACjB,KAAK;gBACL,MAAM,EAAE,OAAO,CAAC,KAAK,CAAC,EAAE;gBACxB,KAAK,EAAE,aAAa;gBACpB,OAAO,EAAE,+BAA+B,kBAAkB,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE;aAChF,CAAC;YAEF,MAAM,IAAA,oCAAiB,EAAC,UAAU,CAAC,CAAC;YAEpC,MAAM,IAAA,qBAAS,EACb,8BAA8B,EAC9B,KAAK,EACL,qBAAqB,EACrB,IAAI,EACJ,qBAAqB,CACtB,CAAC;YAEF,MAAM,WAAW,CAAC,aAAa,CAAC;gBAC9B,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE;gBAC/C,KAAK,EAAE,MAAA,MAAA,kBAAkB,CAAC,CAAC,CAAC,0CAAE,KAAK,0CAAE,EAAE;gBACvC,KAAK,EAAE,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,0CAAE,EAAE;aAC1B,CAAC,CAAC;YAEH,MAAM,IAAA,uCAAkB;YACtB,wCAAwC;YACxC;gBACE,iBAAiB,EAAE,iBAAiB;gBACpC,KAAK,EAAE,aAAa;gBACpB,MAAM,EAAE,UAAU;gBAClB,MAAM,EAAE,MAAA,kBAAkB,CAAC,CAAC,CAAC,0CAAE,GAAG;gBAClC,WAAW,EAAE,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,0CAAE,EAAE;gBAC/B,QAAQ,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,EAAE;aACnB,EACD,KAAK,CACN,CAAC;YAEF,MAAM,OAAO,CAAC,iBAAiB,EAAE,CAAC;YAElC,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC;SAC9B;QAAC,OAAO,KAAK,EAAE;YACd,MAAM,OAAO,CAAC,gBAAgB,EAAE,CAAC;YACjC,MAAM,IAAI,qBAAa,CAAC,KAAK,CAAC,CAAC;SAChC;gBAAS;YACR,OAAO,CAAC,UAAU,EAAE,CAAC;SACtB;;CACF;AA/MD,wBA+MC;AAED,SAAsB,MAAM,CAAC,IAAwB,EAAE,KAAa;;;QAClE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,MAAM,IAAA,iBAAO,EAAC,KAAK,CAAC,CAAC;QAE5C,MAAM,WAAW,GAAG,MAAM,+BAAW,CAAC,OAAO,CAAC;YAC5C,GAAG,EAAE,IAAI,CAAC,aAAa;SACxB,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW;YAAE,MAAM,IAAI,qBAAa,CAAC,uBAAuB,CAAC,CAAC;QAEnE,MAAM,OAAO,GAAG,MAAM,cAAc,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;QAE3E,MAAM,KAAK,GAAG,MAAM,YAAY,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,0CAAE,GAAG,EAAE,CAAC,CAAC;QAEvE,MAAM,QAAQ,GAAG,MAAM,eAAe,CAAC,OAAO,CAAC;YAC7C,GAAG,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,CAAC,GAAG;SAC3B,CAAC,CAAC;QAEH,IAAI,OAAO,CAAC,IAAI,KAAK,UAAU,EAAE;YAC/B,IAAI,IAAI,CAAC,EAAE,MAAK,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,0CAAE,EAAE,CAAA;gBAChC,MAAM,IAAI,qBAAa,CAAC,iCAAiC,CAAC,CAAC;YAC7D,MAAM,MAAM,GAAG;gBACb,MAAM,EAAE,QAAQ;gBAChB,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;gBAChC,GAAG,EAAE,iBAAiB,WAAW,CAAC,QAAQ,EAAE;gBAC5C,OAAO,EAAE;oBACP,aAAa,EAAE,UAAU,KAAK,EAAE;iBACjC;aACF,CAAC;YACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,eAAK,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YACxD,IAAI,CAAC,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,CAAA,EAAE;gBAClB,MAAM,IAAI,qBAAa,CAAC,6BAA6B,CAAC,CAAC;aACxD;SACF;aAAM,IAAI,IAAI,CAAC,EAAE,MAAK,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,0CAAE,EAAE,CAAA;YAC3C,MAAM,IAAI,qBAAa,CAAC,iCAAiC,CAAC,CAAC;QAE7D,IAAI,YAAY,GAAW,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,CAAC;QAE1C,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,mBAAmB,EAAE;YAChC,IAAI,OAAO,CAAC,kBAAkB,KAAK,MAAM,EAAE;gBACzC,MAAM,SAAS,GAAG,MAAM,gBAAgB,CAAC,OAAO,CAAC;oBAC/C,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,CAAC,GAAG;oBACjC,OAAO,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,CAAC,GAAG;iBAC5B,CAAC,CAAC;gBACH,IAAI,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,MAAK,MAAM;oBAC1B,YAAY,GAAG,OAAO,CAAC,mBAAmB,GAAG,SAAS,CAAC,aAAa,CAAC;;oBAErE,YAAY;wBACV,OAAO,CAAC,mBAAmB,GAAG,SAAS,CAAC,iBAAiB,CAAC;aAC/D;iBAAM;gBACL,YAAY;oBACV,OAAO,CAAC,mBAAmB;wBAC3B,KAAK,CAAC,mBAAmB;wBACzB,QAAQ,CAAC,mBAAmB,CAAC;aAChC;SACF;QAED,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC1B,OAAO,CAAC,MAAM,IAAI,WAAW,CAAC,MAAM,CAAC;QACrC,OAAO,CAAC,cAAc;YACpB,OAAO,CAAC,cAAc,GAAG,WAAW,CAAC,MAAM,GAAG,OAAO,CAAC,sBAAsB;gBAC1E,CAAC,CAAC,OAAO,CAAC,sBAAsB;gBAChC,CAAC,CAAC,OAAO,CAAC,cAAc,GAAG,WAAW,CAAC,MAAM,CAAC;QAClD,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,cAAc,GAAG,YAAY,CAAC;QAC1D,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;QACtB,MAAM,OAAO,CAAC,IAAI,EAAE,CAAC;QAErB,WAAW,CAAC,MAAM,GAAG,WAAW,CAAC;QACjC,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;QACzB,OAAO,WAAW,CAAC;;CACpB;AArED,wBAqEC;AAED,SAAsB,aAAa,CAAC,IAAoB,EAAE,KAAa;;;QACrE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,MAAM,IAAA,iBAAO,EAAC,KAAK,CAAC,CAAC;QAE5C,MAAM,OAAO,GAAG,MAAM,kBAAQ,CAAC,YAAY,EAAE,CAAC;QAE9C,IAAI;YACF,OAAO,CAAC,gBAAgB,EAAE,CAAC;YAE3B,MAAM,WAAW,GAAG,MAAM,+BAAW,CAAC,OAAO,CAC3C;gBACE,GAAG,EAAE,IAAI,CAAC,aAAa;aACxB,EACD,IAAI,EACJ,EAAE,OAAO,EAAE,CACZ,CAAC;YAEF,IAAI,CAAC,WAAW;gBAAE,MAAM,IAAI,qBAAa,CAAC,uBAAuB,CAAC,CAAC;YAEnE,WAAW,CAAC,MAAM,GAAG,kBAAkB,CAAC;YAExC,MAAM,QAAQ,GAAG,WAAW,CAAC,QAAQ;gBACnC,CAAC,CAAC,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,0CAAE,IAAI;gBAC1B,CAAC,CAAC,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,0CAAE,IAAI,CAAC;YAE7B,MAAM,YAAY,GAAG,WAAW,CAAC,QAAQ;gBACvC,CAAC,CAAC,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,0CAAE,QAAQ;gBAC9B,CAAC,CAAC,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,0CAAE,QAAQ,CAAC;YAEjC,MAAM,SAAS,GAAG;gBAChB,IAAI,EAAE,GAAG,QAAQ,IAAI,YAAY,EAAE;aACpC,CAAC;YAEF,MAAM,SAAS,GAAG,WAAW,CAAC,QAAQ;gBACpC,CAAC,CAAC,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,0CAAE,KAAK;gBAC3B,CAAC,CAAC,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,0CAAE,KAAK,CAAC;YAE9B,MAAM,UAAU,GAAG;gBACjB,KAAK;gBACL,MAAM,EAAE,WAAW,CAAC,QAAQ;oBAC1B,CAAC,CAAC,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,0CAAE,EAAE;oBACxB,CAAC,CAAC,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,0CAAE,EAAE;gBAC1B,KAAK,EAAE,yCAAyC;gBAChD,OAAO,EAAE,oCAAoC,WAAW,CAAC,eAAe,uCAAuC;aAChH,CAAC;YAEF,MAAM,IAAA,oCAAiB,EAAC,UAAU,CAAC,CAAC;YAEpC,MAAM,IAAA,qBAAS,EACb,wBAAwB,EACxB,KAAK,EACL,SAAS,EACT,IAAI,EACJ,SAAS,CACV,CAAC;YAEF,IAAI,IAAI,CAAC,aAAa;gBAAE,WAAW,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;YACvE,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;YAEzB,MAAM,OAAO,GAAG,MAAM,WAAW,CAAC,cAAc,CAAC;gBAC/C,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;aACzC,CAAC,CAAC;YACH,MAAM,IAAI,GAAG,uBAAuB,CAAC;YACrC,MAAM,OAAO,GAAG;gBACd,IAAI;gBACJ,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE;gBACrB,IAAI,EAAE,QAAQ;aACf,CAAC;YACF,MAAM,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAEnC,MAAM,OAAO,CAAC,iBAAiB,EAAE,CAAC;YAElC,OAAO,WAAW,CAAC;SACpB;QAAC,OAAO,KAAK,EAAE;YACd,MAAM,OAAO,CAAC,gBAAgB,EAAE,CAAC;YACjC,MAAM,IAAI,qBAAa,CAAC,KAAK,CAAC,CAAC;SAChC;gBAAS;YACR,OAAO,CAAC,UAAU,EAAE,CAAC;SACtB;;CACF;AA9ED,sCA8EC;AAED,SAAsB,aAAa,CAAC,IAAoB,EAAE,KAAa;;;QACrE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,MAAM,IAAA,iBAAO,EAAC,KAAK,CAAC,CAAC;QAE5C,MAAM,OAAO,GAAG,MAAM,kBAAQ,CAAC,YAAY,EAAE,CAAC;QAC9C,IAAI;YACF,OAAO,CAAC,gBAAgB,EAAE,CAAC;YAE3B,MAAM,WAAW,GAAG,MAAM,+BAAW,CAAC,OAAO,CAC3C;gBACE,GAAG,EAAE,IAAI,CAAC,aAAa;aACxB,EACD,IAAI,EACJ,EAAE,OAAO,EAAE,CACZ,CAAC;YAEF,IAAI,CAAC,WAAW;gBAAE,MAAM,IAAI,qBAAa,CAAC,uBAAuB,CAAC,CAAC;YAEnE,IAAI,WAAW,CAAC,MAAM,KAAK,kBAAkB;gBAC3C,MAAM,IAAI,qBAAa,CAAC,+BAA+B,CAAC,CAAC;YAE3D,MAAM,OAAO,GAAG,MAAM,cAAc,CAAC,OAAO,CAC1C,EAAE,GAAG,EAAE,WAAW,CAAC,OAAO,EAAE,EAC5B,IAAI,EACJ,EAAE,OAAO,EAAE,CACZ,CAAC;YAEF,MAAM,QAAQ,GAAG,MAAM,eAAe,CAAC,OAAO,CAAC;gBAC7C,GAAG,EAAE,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,0CAAE,GAAG;aAC5B,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO;gBAAE,MAAM,IAAI,qBAAa,CAAC,mBAAmB,CAAC,CAAC;YAC3D,IACE,CAAC,OAAO,CAAC,IAAI,KAAK,UAAU,IAAI,IAAI,CAAC,EAAE,MAAK,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,0CAAE,EAAE,CAAA,CAAC;gBACnE,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,IAAI,IAAI,CAAC,EAAE,MAAK,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,0CAAE,EAAE,CAAA,CAAC,EAC3D;gBACA,MAAM,IAAI,qBAAa,CAAC,2BAA2B,CAAC,CAAC;aACtD;YAED,IAAI,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,MAAK,MAAM,EAAE;gBAC5B,MAAM,IAAA,4BAAa,EAAC;oBAClB,KAAK;oBACL,QAAQ,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,cAAc;oBACrC,MAAM,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM;oBAC3B,QAAQ,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,QAAQ;oBAC/B,OAAO,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ;oBAC1B,WAAW,EAAE,wBAAwB,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,MAAM,gBAAgB,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,eAAe,EAAE;iBACvH,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,IAAA,4BAAa,EAAC;oBAClB,KAAK;oBACL,QAAQ,EAAE,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,cAAc,0CAAE,OAAO;oBAC1C,MAAM,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM;oBAC3B,QAAQ,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,QAAQ;oBAC/B,OAAO,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,QAAQ;oBAC9B,WAAW,EAAE,wBAAwB,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,MAAM,gBAAgB,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,eAAe,EAAE;iBACvH,CAAC,CAAC;aACJ;YAED,WAAW,CAAC,MAAM,GAAG,YAAY,CAAC;YAClC,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;YAEzB,OAAO,CAAC,MAAM;gBACZ,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC;YACjE,MAAM,OAAO,CAAC,IAAI,EAAE,CAAC;YAErB,MAAM,UAAU,GAAG;gBACjB,KAAK;gBACL,MAAM,EAAE,WAAW,CAAC,QAAQ;oBAC1B,CAAC,CAAC,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,0CAAE,EAAE;oBACxB,CAAC,CAAC,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,0CAAE,EAAE;gBAC1B,KAAK,EAAE,mCAAmC;gBAC1C,OAAO,EAAE,oCAAoC,WAAW,CAAC,eAAe,gCAAgC;aACzG,CAAC;YAEF,MAAM,IAAA,oCAAiB,EAAC,UAAU,CAAC,CAAC;YAEpC,MAAM,aAAa,GAAG,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,0CAAE,IAAI,CAAC;YAE/C,MAAM,iBAAiB,GAAG,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,0CAAE,QAAQ,CAAC;YAEvD,MAAM,cAAc,GAAG;gBACrB,IAAI,EAAE,GAAG,aAAa,IAAI,iBAAiB,EAAE;aAC9C,CAAC;YAEF,MAAM,SAAS,GAAG,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,0CAAE,KAAK,CAAC;YAE5C,MAAM,IAAA,qBAAS,EACb,4BAA4B,EAC5B,KAAK,EACL,cAAc,EACd,IAAI,EACJ,SAAS,CACV,CAAC;YAEF,MAAM,aAAa,GAAG,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,0CAAE,IAAI,CAAC;YAE/C,MAAM,iBAAiB,GAAG,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,0CAAE,QAAQ,CAAC;YAEvD,MAAM,cAAc,GAAG;gBACrB,IAAI,EAAE,GAAG,aAAa,IAAI,iBAAiB,EAAE;aAC9C,CAAC;YAEF,MAAM,SAAS,GAAG,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,0CAAE,KAAK,CAAC;YAE5C,MAAM,IAAA,qBAAS,EACb,4BAA4B,EAC5B,KAAK,EACL,cAAc,EACd,IAAI,EACJ,SAAS,CACV,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,WAAW,CAAC,cAAc,CAAC;gBAC/C,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;aACzC,CAAC,CAAC;YACH,MAAM,IAAI,GAAG,mDAAmD,CAAC;YACjE,MAAM,OAAO,GAAG;gBACd,IAAI;gBACJ,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE;gBACrB,IAAI,EAAE,QAAQ;aACf,CAAC;YAEF,MAAM,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAEnC,MAAM,OAAO,CAAC,iBAAiB,EAAE,CAAC;YAElC,OAAO,WAAW,CAAC;SACpB;QAAC,OAAO,GAAG,EAAE;YACZ,MAAM,OAAO,CAAC,gBAAgB,EAAE,CAAC;YACjC,MAAM,IAAI,qBAAa,CAAC,GAAG,CAAC,CAAC;SAC9B;gBAAS;YACR,OAAO,CAAC,UAAU,EAAE,CAAC;SACtB;;CACF;AArID,sCAqIC;AAED,SAAsB,UAAU,CAC9B,IAAY,EACZ,OAAe,EACf,MAAkC,EAClC,UAAgD,EAChD,OAA2C;;QAE3C,OAAO,IAAA,qBAAa,EAAC,IAAI,EAAE,OAAO,EAAE,+BAAW,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;IAChF,CAAC;CAAA;AARD,gCAQC;AAED,SAAsB,kBAAkB,CACtC,IAAyB,EACzB,KAAa;;QAEb,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,MAAM,IAAA,iBAAO,EAAC,KAAK,CAAC,CAAC;QAE5C,MAAM,KAAK,GAAG,MAAM,YAAY,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;QAE9D,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE;YAC5B,MAAM,iBAAiB,GAAG,MAAM,+BAAW,CAAC,SAAS,CAAC;gBACpD;oBACE,OAAO,EAAE;wBACP,IAAI,EAAE,UAAU;wBAChB,UAAU,EAAE,SAAS;wBACrB,YAAY,EAAE,KAAK;wBACnB,EAAE,EAAE,gBAAgB;qBACrB;iBACF;gBACD;oBACE,MAAM,EAAE;wBACN,sBAAsB,EAAE,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,EAAC,CAAC,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE;wBAC/D,GAAG,EAAE;4BACH,EAAE,UAAU,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,EAAE,EAAE,qBAAqB,EAAE,MAAM,EAAE;4BACvD,EAAE,UAAU,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,EAAE,EAAE,qBAAqB,EAAE,UAAU,EAAE;yBAC5D;wBACD,MAAM,EAAE,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,EAAC,CAAC,CAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE;qBACpD;iBACF;gBACD;oBACE,KAAK,EAAE;wBACL,SAAS,EAAE,CAAC,CAAC;qBACd;iBACF;aACF,CAAC,CAAC;YAEH,OAAO,IAAA,qBAAQ,EAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;SAC7D;QAED,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;YACxB,MAAM,iBAAiB,GAAG,MAAM,+BAAW,CAAC,SAAS,CAAC;gBACpD;oBACE,OAAO,EAAE;wBACP,IAAI,EAAE,UAAU;wBAChB,UAAU,EAAE,SAAS;wBACrB,YAAY,EAAE,KAAK;wBACnB,EAAE,EAAE,gBAAgB;qBACrB;iBACF;gBACD;oBACE,MAAM,EAAE;wBACN,sBAAsB,EAAE,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,EAAC,CAAC,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE;wBAC/D,GAAG,EAAE;4BACH,EAAE,UAAU,EAAE,IAAI,CAAC,EAAE,EAAE,qBAAqB,EAAE,UAAU,EAAE;4BAC1D,EAAE,UAAU,EAAE,IAAI,CAAC,EAAE,EAAE,qBAAqB,EAAE,MAAM,EAAE;yBACvD;wBACD,MAAM,EAAE,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,EAAC,CAAC,CAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE;qBACpD;iBACF;gBACD;oBACE,KAAK,EAAE;wBACL,SAAS,EAAE,CAAC,CAAC;qBACd;iBACF;aACF,CAAC,CAAC;YAEH,OAAO,IAAA,qBAAQ,EAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;SAC7D;QAED,MAAM,qBAAqB,GAAG,MAAM,+BAAW,CAAC,SAAS,CAAC;YACxD;gBACE,OAAO,EAAE;oBACP,IAAI,EAAE,UAAU;oBAChB,UAAU,EAAE,SAAS;oBACrB,YAAY,EAAE,KAAK;oBACnB,EAAE,EAAE,gBAAgB;iBACrB;aACF;YACD;gBACE,MAAM,EAAE;oBACN,sBAAsB,EAAE,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,EAAC,CAAC,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE;oBAC/D,GAAG,EAAE,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC;oBACvD,MAAM,EAAE,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,EAAC,CAAC,CAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE;iBACpD;aACF;YACD;gBACE,KAAK,EAAE;oBACL,SAAS,EAAE,CAAC,CAAC;iBACd;aACF;SACF,CAAC,CAAC;QAEH,OAAO,IAAA,qBAAQ,EAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,qBAAqB,CAAC,CAAC;IAClE,CAAC;CAAA;AA5FD,gDA4FC;AAED,SAAsB,MAAM,CAAC,IAAa;;QACxC,MAAM,QAAQ,GAAG,MAAM,mBAAQ,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QAE1D,MAAM,KAAK,GAAG,CAAC,CACb,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,KAAK,KAAK;YACzC,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,GAAG,CAAC,cAAc,CACrD,CAAC;QAEF,MAAM,UAAU,GACd,IAAI,CAAC,eAAe,KAAK,UAAU;YACjC,CAAC,CAAC,MAAM,IAAA,mCAAgB,EAAC,IAAI,EAAE,QAAQ,CAAC;YACxC,CAAC,CAAC,MAAM,IAAA,uCAAkB,EAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAE/C,MAAM,QAAQ,GACZ,IAAI,CAAC,eAAe,KAAK,MAAM;YAC7B,CAAC,CAAC,MAAM,IAAA,iDAAuB,EAAC,IAAI,EAAE,QAAQ,CAAC;YAC/C,CAAC,CAAC,CAAC,CAAC;QAER,OAAO;YACL,GAAG,EAAE,UAAU,GAAG,QAAQ;YAC1B,KAAK;YACL,cAAc,EAAE,QAAQ,CAAC,GAAG,CAAC,cAAc;SAC5C,CAAC;IACJ,CAAC;CAAA;AAvBD,wBAuBC","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable array-callback-return */\n/* eslint-disable import/no-cycle */\nimport mongoose from 'mongoose';\nimport type {\n  FilterQuery,\n  ProjectionType,\n  QueryOptions,\n  UpdateQuery,\n  UpdateWithAggregationPipeline,\n} from 'mongoose';\nimport axios from 'axios';\nimport moment from 'moment';\nimport BigNumber from 'bignumber.js';\nimport { NoSentryError, paginateModel } from '../../utils';\nimport { ITransaction, Transaction } from './transaction.model';\nimport {\n  TCreateTransaction,\n  TCancelTransaction,\n  TNotifyPayment,\n  TReleaseCrypto,\n  TGetTransactionUser,\n  TGetFee,\n} from './transaction.dto';\nimport * as listingService from '../listing/listing/listing.service';\nimport * as assetService from '../asset/asset.service';\nimport * as chatService from '../streamChat/streamChat.service';\nimport { getUser } from '../../utils/walletService/userWau';\nimport { IListing, Listing } from '../listing/listing/listing.model';\nimport { getUserWallet } from '../../utils/walletService/userWallet';\nimport { balanceLock } from '../../utils/walletService/userBalanceLock';\nimport { paginate } from '../../utils/pagination';\nimport { ISettings, Settings } from '../settings';\nimport { ICurrency } from '../currency';\nimport * as currencyService from '../currency/currency.service';\nimport { unlockBalance } from '../../utils/walletService/amountUnlock';\nimport { sendEmail } from '../../utils/emails/sendEmail';\nimport { amountAssetConvert } from '../../utils/amountAssetConvert';\nimport { validateBtcTransAmount } from '../../utils/parametersValidations/validateBtcTransAmount';\nimport { getCryptoHolderFee } from '../../utils/parametersValidations/getCryptoHolderFee';\nimport { getFiatHolderFee } from '../../utils/parametersValidations/getFiatHolderFee';\nimport { getCryptoHolderTransFee } from '../../utils/parametersValidations/getCryptoHolderTransFee';\nimport { sendNotifications } from '../../utils/pushNotifications/sendNotification';\nimport { maxAmountConvert } from '../../utils/maxAmountConvert';\nimport * as bestPriceService from '../bestPrice/bestPrice.service';\nimport { IAsset } from '../asset';\nimport { createNotification } from '../../utils/avilaServices/createNotification';\n\nBigNumber.config({ DECIMAL_PLACES: 10, ROUNDING_MODE: 4 });\n\nexport async function getInProgressTransactions(token: string) {\n  const { data: user } = await getUser(token);\n  const statusTransaction = ['pending', 'payment_executed', 'payment_received'];\n  const statusListing = ['active', 'taker_assigned', 'default'];\n  /// Transactions as taker\n  const takerTransactions = await Transaction.find({\n    $and: [\n      { 'taker.id': user.id },\n      {\n        status: {\n          $in: statusTransaction,\n        },\n      },\n    ],\n  }).sort({ createdAt: -1 });\n\n  /// Transactions as maker\n  const makerListings = await Listing.find({\n    'maker.id': user.id,\n    status: {\n      $in: statusListing,\n    },\n  });\n\n  const makerTransactions = await Transaction.find({\n    $and: [\n      {\n        listing: {\n          $in: makerListings.map((e) => e._id),\n        },\n      },\n      {\n        status: {\n          $in: statusTransaction,\n        },\n      },\n    ],\n  }).sort({ createdAt: -1 });\n\n  return {\n    makerTransactions,\n    takerTransactions,\n    totalMakerTransactions: makerTransactions.length,\n    totalTakerTransactions: takerTransactions.length,\n    total: makerTransactions.length + takerTransactions.length,\n  };\n}\n\nexport async function findOne(\n  filter?: FilterQuery<ITransaction>,\n  projection?: ProjectionType<ITransaction> | null,\n  options?: QueryOptions<ITransaction> | null\n) {\n  return Transaction.findOne(filter, projection, options).exec();\n}\n\nexport async function customFindOne(\n  filter?: FilterQuery<ITransaction>,\n  projection?: ProjectionType<ITransaction> | null,\n  options?: QueryOptions<ITransaction> | null\n) {\n  return Transaction.findOne(filter, projection, options)\n    .populate([\n      {\n        path: 'paymentMethod',\n        model: 'PaymentMethod',\n        populate: [\n          {\n            path: 'values',\n            model: 'PaymentMethodValue',\n            populate: {\n              path: 'paymentMethodInput',\n              model: 'PaymentMethodInput',\n            },\n          },\n          {\n            path: 'type',\n            model: 'PaymentMethodCategory',\n            populate: [\n              {\n                path: 'currency',\n                model: 'Currency',\n              },\n              {\n                path: 'paymentMethodInputs',\n                model: 'PaymentMethodInput',\n              },\n            ],\n          },\n        ],\n      },\n      {\n        path: 'listing',\n        model: 'Listing',\n        populate: [\n          {\n            path: 'currency',\n            model: 'Currency',\n          },\n          {\n            path: 'asset',\n            model: 'Asset',\n          },\n          {\n            path: 'bestPrice',\n            model: 'BestPrice',\n            populate: [\n              {\n                path: 'currency',\n                model: 'Currency',\n              },\n              {\n                path: 'asset',\n                model: 'Asset',\n              },\n            ],\n          },\n          {\n            path: 'paymentMethods',\n            model: 'PaymentMethod',\n            populate: [\n              {\n                path: 'values',\n                model: 'PaymentMethodValue',\n                populate: {\n                  path: 'paymentMethodInput',\n                  model: 'PaymentMethodInput',\n                },\n              },\n              {\n                path: 'type',\n                model: 'PaymentMethodCategory',\n                populate: [\n                  {\n                    path: 'currency',\n                    model: 'Currency',\n                  },\n                  {\n                    path: 'paymentMethodInputs',\n                    model: 'PaymentMethodInput',\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      },\n    ])\n    .exec();\n}\n\nexport async function find(\n  filter?: FilterQuery<ITransaction>,\n  projection?: ProjectionType<ITransaction> | null,\n  options?: QueryOptions<ITransaction> | null\n) {\n  return Transaction.find(filter, projection, options).exec();\n}\n\nexport async function updateOne(\n  filter: FilterQuery<ITransaction>,\n  update: UpdateQuery<ITransaction> | UpdateWithAggregationPipeline,\n  options?: QueryOptions<ITransaction> | null\n) {\n  return Transaction.updateOne(filter, update, options).exec();\n}\n\nasync function validateAmount(\n  currency: ICurrency,\n  listing: IListing,\n  user: any,\n  body: any,\n  setting: ISettings,\n  asset: IAsset\n) {\n  // TODO ...hacer cambio de buscar amountMax de asset a currency para multiplicarlo por el precio o hacer la conversion\n  // TODO ...dependiendo de el asset\n  const today = moment().startOf('day');\n  const startOfToday = today.toDate();\n  const endOfToday = today.endOf('day').toDate();\n\n  let listingPrice: number = listing?.price;\n\n  if (listing?.bestPricePercentage) {\n    if (listing?.priceReferenceType === 'suni') {\n      const bestPrice = await bestPriceService.findOne({\n        currencyId: listing?.currency._id,\n        assetId: listing?.asset._id,\n      });\n      if (listing?.type === 'sale')\n        listingPrice = listing.bestPricePercentage * bestPrice.saleBestPrice;\n      else\n        listingPrice =\n          listing.bestPricePercentage * bestPrice.purchaseBestPrice;\n    } else {\n      listingPrice =\n        listing.bestPricePercentage *\n        asset.conversionRateToUsd *\n        currency.conversionRateToUsd;\n    }\n  }\n\n  // obtener el amount de currency\n  const fiatAmount = body.amount * listingPrice;\n\n  // obtener el amount en usd\n  const amountInUsd =\n    (listingPrice * body.amount) / currency.conversionRateToUsd;\n\n  // obtener todas las transacciones de maker y taker de el dia para validar que no supere al settings amount\n  const makerTransactions = await Transaction.find({\n    $and: [\n      { 'maker.id': listing?.maker?.id },\n      { createdAt: { $gte: startOfToday, $lte: endOfToday } },\n    ],\n  });\n  const takerTransactions = await Transaction.find({\n    $and: [\n      { 'taker.id': user?.id },\n      { createdAt: { $gte: startOfToday, $lte: endOfToday } },\n    ],\n  });\n  const takerMaxAmount = takerTransactions.reduce(\n    (acc, curr) => acc + curr.amountUsd,\n    0\n  );\n  const makerMaxAmount = makerTransactions.reduce(\n    (acc, curr) => acc + curr.amountUsd,\n    0\n  );\n  const totalUsdTakerTransactions = amountInUsd + takerMaxAmount;\n  const totalUsdMakerTransactions = amountInUsd + takerMaxAmount;\n  if (\n    takerMaxAmount >= setting.transactions.maxAmountAllowed ||\n    totalUsdTakerTransactions >= setting.transactions.maxAmountAllowed\n  )\n    throw new NoSentryError('taker exceeded the amount of daily transactions');\n  if (\n    makerMaxAmount >= setting.transactions.maxAmountAllowed ||\n    totalUsdMakerTransactions >= setting.transactions.maxAmountAllowed\n  )\n    throw new NoSentryError('maker exceeded the amount of daily transactions');\n\n  return {\n    amountInUsd,\n    fiatAmount,\n    listingPrice,\n  };\n}\n\nexport async function create(body: TCreateTransaction, token: string) {\n  const { data: user } = await getUser(token);\n\n  const session = await mongoose.startSession();\n\n  try {\n    session.startTransaction();\n\n    const STATUS_CANCELED = 'canceled';\n    const STATUS_DEFAULT = 'default';\n    // validar que este el listing creado\n    const listing = await listingService.findOne(\n      { _id: body.listingId },\n      null,\n      { session }\n    );\n    if (!listing) throw new NoSentryError('Listing not found');\n    // validar que no este en status canceled o default para proceder\n    if (listing.status === STATUS_CANCELED)\n      throw new NoSentryError(\n        'Cannot create Transaction with listing canceled'\n      );\n    if (listing.status === STATUS_DEFAULT)\n      throw new NoSentryError('Cannot create Transaction with listing default');\n    // validar que este el asset indicado en la BD\n    const asset = await assetService.findOne({ _id: listing.asset });\n    if (!asset) throw new NoSentryError('Asset not found');\n\n    const setting = await Settings.findOne({ active: true });\n\n    // buscar el currency que se usara en el listing\n    const currency = await currencyService.findOne({ _id: listing.currency });\n\n    const { amountInUsd, fiatAmount, listingPrice } = await validateAmount(\n      currency,\n      listing,\n      user,\n      body,\n      setting,\n      asset\n    );\n    // validar que el usuario no tome su propio listing\n    if (user?.id === listing?.maker?.id)\n      throw new NoSentryError('Cannot take your listing');\n\n    await amountAssetConvert(body, asset);\n    await validateBtcTransAmount(setting, asset, body);\n\n    if (body.amount > listing.amount) {\n      throw new NoSentryError(\n        'The amount cannot be greater than the listing amount'\n      );\n    }\n\n    const userName = user?.metamapStatus?.dni_firstName ?? user?.name;\n\n    const userLastName = user?.metamapStatus?.dni_lastName ?? user?.lastname;\n\n    const transactionData = {\n      listing: listing._id,\n      taker: {\n        id: user?.id,\n        email: user?.email,\n        name: userName,\n        lastname: userLastName,\n      },\n      amount: body.amount,\n      paymentMethod: body.paymentMethod ?? null,\n      selectedWallet: body.selectedWallet,\n      maker: {\n        id: listing?.maker?.id,\n        email: listing?.maker?.email,\n        name: listing?.maker?.name,\n        lastname: listing?.maker?.lastname,\n      },\n      loanAdId: null,\n      amountUsd: amountInUsd,\n      makerFee: listing.fee,\n      takerFee: null,\n      fiatAmount,\n    };\n\n    const wallet = await getUserWallet(token, body.selectedWallet);\n\n    if (!wallet) throw new NoSentryError('Wallet doesn`t exist');\n\n    if (listing.type === 'purchase') {\n      const amountPercentage = (body.amount * 1) / 100;\n      if (wallet.balance < body.amount + amountPercentage) {\n        throw new NoSentryError('Doesn`t have enough balance');\n      }\n      const makerFee = await getCryptoHolderFee(\n        {\n          transactionAmount: body.amount,\n          assetNetwork: asset.network,\n          transactionType: 'sale',\n          userRole: 'taker',\n        },\n        setting\n      );\n      transactionData.takerFee = makerFee;\n      const ad = await balanceLock({\n        token,\n        wallet: wallet.wallet,\n        amount: body.amount,\n        makerFee,\n      });\n      transactionData.loanAdId = ad?.data?.id;\n    } else {\n      const takerFee = await getFiatHolderFee(\n        {\n          transactionAmount: body.amount,\n          assetNetwork: asset.network,\n          transactionType: 'purchase',\n          userRole: 'taker',\n        },\n        setting\n      );\n      transactionData.takerFee = takerFee;\n    }\n\n    if (listing.amount === body.amount) listing.active = false;\n\n    listing.amount -= body.amount;\n\n    listing.status =\n      listing.amount < listing.minAmountAsset ? 'default' : 'taker_assigned';\n\n    if (listing.amount === 1) listing.active = false;\n\n    if (listing.maxAmountAsset > listing.amount) {\n      maxAmountConvert(asset.network, listing, listingPrice);\n    }\n\n    await listing.save();\n\n    if (listing.status === 'default') {\n      const paramsPushListing = {\n        token,\n        userId: listing.maker.id,\n        title: 'Anuncio',\n        message: `La disponibilidad de tu anuncio se encuentra por debajo del límite mínimo,\n        actualízalo para que pueda ser visualizado nuevamente en el mercado`,\n      };\n\n      await sendNotifications(paramsPushListing);\n    }\n\n    const createdTransaction = await Transaction.create([transactionData], {\n      session,\n    });\n\n    const variablesHolderCrypto = {\n      name:\n        listing.type === 'purchase'\n          ? `${userName} ${userLastName}`\n          : `${listing?.maker?.name} ${listing?.maker?.lastname}`,\n    };\n\n    const userEmailHolderCrypto =\n      listing.type === 'purchase' ? user?.email : listing?.maker?.email;\n\n    const paramsPush = {\n      token,\n      userId: listing.maker.id,\n      title: 'Transacción',\n      message: `Se ha creado la transacción ${createdTransaction[0].referenceNumber}`,\n    };\n\n    await sendNotifications(paramsPush);\n\n    await sendEmail(\n      'exchange_transaction_started',\n      token,\n      variablesHolderCrypto,\n      null,\n      userEmailHolderCrypto\n    );\n\n    await chatService.createChannel({\n      channelId: createdTransaction[0]._id.toString(),\n      taker: createdTransaction[0]?.taker?.id,\n      maker: listing?.maker?.id,\n    });\n\n    await createNotification(\n      // notification Oferta de Listing tomado\n      {\n        messageTemplateId: '585364632313533',\n        model: 'transaction',\n        module: 'exchange',\n        object: createdTransaction[0]?._id,\n        recipientId: listing?.maker?.id,\n        senderId: user?.id,\n      },\n      token\n    );\n\n    await session.commitTransaction();\n\n    return createdTransaction[0];\n  } catch (error) {\n    await session.abortTransaction();\n    throw new NoSentryError(error);\n  } finally {\n    session.endSession();\n  }\n}\n\nexport async function cancel(body: TCancelTransaction, token: string) {\n  const { data: user } = await getUser(token);\n\n  const transaction = await Transaction.findOne({\n    _id: body.transactionId,\n  });\n\n  if (!transaction) throw new NoSentryError('Transaction not found');\n\n  const listing = await listingService.findOne({ _id: transaction.listing });\n\n  const asset = await assetService.findOne({ _id: listing?.asset?._id });\n\n  const currency = await currencyService.findOne({\n    _id: listing?.currency._id,\n  });\n\n  if (listing.type === 'purchase') {\n    if (user.id !== listing?.maker?.id)\n      throw new NoSentryError('User can not cancel transaction');\n    const config = {\n      method: 'delete',\n      baseURL: process.env.SERVICE_URL,\n      url: `/wallet/block/${transaction.loanAdId}`,\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    };\n    const { data } = await axios.delete(config.url, config);\n    if (!data?.success) {\n      throw new NoSentryError('Error deleting ad in wallet');\n    }\n  } else if (user.id !== transaction?.taker?.id)\n    throw new NoSentryError('User can not cancel transaction');\n\n  let listingPrice: number = listing?.price;\n\n  if (listing?.bestPricePercentage) {\n    if (listing.priceReferenceType === 'suni') {\n      const bestPrice = await bestPriceService.findOne({\n        currencyId: listing?.currency._id,\n        assetId: listing?.asset._id,\n      });\n      if (listing?.type === 'sale')\n        listingPrice = listing.bestPricePercentage * bestPrice.saleBestPrice;\n      else\n        listingPrice =\n          listing.bestPricePercentage * bestPrice.purchaseBestPrice;\n    } else {\n      listingPrice =\n        listing.bestPricePercentage *\n        asset.conversionRateToUsd *\n        currency.conversionRateToUsd;\n    }\n  }\n\n  listing.status = 'active';\n  listing.amount += transaction.amount;\n  listing.maxAmountAsset =\n    listing.maxAmountAsset + transaction.amount > listing.originalMaxAssetAmount\n      ? listing.originalMaxAssetAmount\n      : listing.maxAmountAsset + transaction.amount;\n  listing.maxAmount = listing.maxAmountAsset * listingPrice;\n  listing.active = true;\n  await listing.save();\n\n  transaction.status = 'cancelled';\n  await transaction.save();\n  return transaction;\n}\n\nexport async function notifyPayment(body: TNotifyPayment, token: string) {\n  const { data: user } = await getUser(token);\n\n  const session = await mongoose.startSession();\n\n  try {\n    session.startTransaction();\n\n    const transaction = await Transaction.findOne(\n      {\n        _id: body.transactionId,\n      },\n      null,\n      { session }\n    );\n\n    if (!transaction) throw new NoSentryError('Transaction not found');\n\n    transaction.status = 'payment_executed';\n\n    const userName = transaction.loanAdId\n      ? transaction?.taker?.name\n      : transaction?.maker?.name;\n\n    const userLastName = transaction.loanAdId\n      ? transaction?.taker?.lastname\n      : transaction?.maker?.lastname;\n\n    const variables = {\n      name: `${userName} ${userLastName}`,\n    };\n\n    const userEmail = transaction.loanAdId\n      ? transaction?.taker?.email\n      : transaction?.maker?.email;\n\n    const paramsPush = {\n      token,\n      userId: transaction.loanAdId\n        ? transaction?.taker?.id\n        : transaction?.maker?.id,\n      title: 'Se ha confirmado el envío de los fondos',\n      message: `Tu contraparte de la transacción ${transaction.referenceNumber} ha confirmado el envío de los fondos`,\n    };\n\n    await sendNotifications(paramsPush);\n\n    await sendEmail(\n      'fiat_sent_confirmation',\n      token,\n      variables,\n      null,\n      userEmail\n    );\n\n    if (body.paymentMethod) transaction.paymentMethod = body.paymentMethod;\n    await transaction.save();\n\n    const channel = await chatService.getChannelById({\n      channelId: body.transactionId.toString(),\n    });\n    const text = 'Payment has been made';\n    const message = {\n      text,\n      user: { id: user.id },\n      type: 'system',\n    };\n    await channel.sendMessage(message);\n\n    await session.commitTransaction();\n\n    return transaction;\n  } catch (error) {\n    await session.abortTransaction();\n    throw new NoSentryError(error);\n  } finally {\n    session.endSession();\n  }\n}\n\nexport async function releaseCrypto(body: TReleaseCrypto, token: string) {\n  const { data: user } = await getUser(token);\n\n  const session = await mongoose.startSession();\n  try {\n    session.startTransaction();\n\n    const transaction = await Transaction.findOne(\n      {\n        _id: body.transactionId,\n      },\n      null,\n      { session }\n    );\n\n    if (!transaction) throw new NoSentryError('Transaction not found');\n\n    if (transaction.status !== 'payment_executed')\n      throw new NoSentryError('Payment has not been notified');\n\n    const listing = await listingService.findOne(\n      { _id: transaction.listing },\n      null,\n      { session }\n    );\n\n    const currency = await currencyService.findOne({\n      _id: listing?.currency?._id,\n    });\n\n    if (!listing) throw new NoSentryError('Listing not found');\n    if (\n      (listing.type === 'purchase' && user.id !== transaction?.taker?.id) ||\n      (listing.type === 'sale' && user.id !== listing?.maker?.id)\n    ) {\n      throw new NoSentryError('User is not crypto holder');\n    }\n\n    if (listing?.type === 'sale') {\n      await unlockBalance({\n        token,\n        toWallet: transaction?.selectedWallet,\n        amount: transaction?.amount,\n        takerFee: transaction?.takerFee,\n        blockId: listing?.loanAdId,\n        description: `Release of funds for ${transaction?.amount} ${currency?.symbol} in listing #${listing?.referenceNumber}`,\n      });\n    } else {\n      await unlockBalance({\n        token,\n        toWallet: listing?.selectedWallet?.address,\n        amount: transaction?.amount,\n        takerFee: transaction?.takerFee,\n        blockId: transaction?.loanAdId,\n        description: `Release of funds for ${transaction?.amount} ${currency?.symbol} in listing #${listing?.referenceNumber}`,\n      });\n    }\n\n    transaction.status = 'successful';\n    await transaction.save();\n\n    listing.status =\n      listing.amount < listing.minAmountAsset ? 'default' : 'active';\n    await listing.save();\n\n    const paramsPush = {\n      token,\n      userId: transaction.loanAdId\n        ? transaction?.maker?.id\n        : transaction?.taker?.id,\n      title: 'Se han liberado las criptomonedas',\n      message: `Tu contraparte de la transacción ${transaction.referenceNumber} ha liberado las criptomonedas`,\n    };\n\n    await sendNotifications(paramsPush);\n\n    const userMakerName = transaction?.maker?.name;\n\n    const userMakerLastName = transaction?.maker?.lastname;\n\n    const variablesMaker = {\n      name: `${userMakerName} ${userMakerLastName}`,\n    };\n\n    const userMaker = transaction?.maker?.email;\n\n    await sendEmail(\n      'fiat_received_confirmation',\n      token,\n      variablesMaker,\n      null,\n      userMaker\n    );\n\n    const userTakerName = transaction?.taker?.name;\n\n    const userTakerLastName = transaction?.taker?.lastname;\n\n    const variablesTaker = {\n      name: `${userTakerName} ${userTakerLastName}`,\n    };\n\n    const userTaker = transaction?.taker?.email;\n\n    await sendEmail(\n      'fiat_received_confirmation',\n      token,\n      variablesTaker,\n      null,\n      userTaker\n    );\n\n    const channel = await chatService.getChannelById({\n      channelId: body.transactionId.toString(),\n    });\n    const text = 'Payment received. Crypto amount has been released';\n    const message = {\n      text,\n      user: { id: user.id },\n      type: 'system',\n    };\n\n    await channel.sendMessage(message);\n\n    await session.commitTransaction();\n\n    return transaction;\n  } catch (err) {\n    await session.abortTransaction();\n    throw new NoSentryError(err);\n  } finally {\n    session.endSession();\n  }\n}\n\nexport async function pagination(\n  page: number,\n  perPage: number,\n  filter?: FilterQuery<ITransaction>,\n  projection?: ProjectionType<ITransaction> | null,\n  options?: QueryOptions<ITransaction> | null\n) {\n  return paginateModel(page, perPage, Transaction, filter, projection, options);\n}\n\nexport async function getTransactionUser(\n  body: TGetTransactionUser,\n  token: string\n) {\n  const { data: user } = await getUser(token);\n\n  const asset = await assetService.findOne({ _id: body.asset });\n\n  if (body.role === 'purchase') {\n    const transactionFilter = await Transaction.aggregate([\n      {\n        $lookup: {\n          from: 'listings',\n          localField: 'listing',\n          foreignField: '_id',\n          as: 'listingDetails',\n        },\n      },\n      {\n        $match: {\n          'listingDetails.asset': asset?._id ? asset?._id : { $ne: null },\n          $or: [\n            { 'taker.id': user?.id, 'listingDetails.type': 'sale' },\n            { 'maker.id': user?.id, 'listingDetails.type': 'purchase' },\n          ],\n          status: body?.status ? body?.status : { $ne: null },\n        },\n      },\n      {\n        $sort: {\n          createdAt: -1,\n        },\n      },\n    ]);\n\n    return paginate(body.page, body.perPage, transactionFilter);\n  }\n\n  if (body.role === 'sale') {\n    const transactionFilter = await Transaction.aggregate([\n      {\n        $lookup: {\n          from: 'listings',\n          localField: 'listing',\n          foreignField: '_id',\n          as: 'listingDetails',\n        },\n      },\n      {\n        $match: {\n          'listingDetails.asset': asset?._id ? asset?._id : { $ne: null },\n          $or: [\n            { 'taker.id': user.id, 'listingDetails.type': 'purchase' },\n            { 'maker.id': user.id, 'listingDetails.type': 'sale' },\n          ],\n          status: body?.status ? body?.status : { $ne: null },\n        },\n      },\n      {\n        $sort: {\n          createdAt: -1,\n        },\n      },\n    ]);\n\n    return paginate(body.page, body.perPage, transactionFilter);\n  }\n\n  const transactionFilterUser = await Transaction.aggregate([\n    {\n      $lookup: {\n        from: 'listings',\n        localField: 'listing',\n        foreignField: '_id',\n        as: 'listingDetails',\n      },\n    },\n    {\n      $match: {\n        'listingDetails.asset': asset?._id ? asset?._id : { $ne: null },\n        $or: [{ 'maker.id': user.id }, { 'taker.id': user.id }],\n        status: body?.status ? body?.status : { $ne: null },\n      },\n    },\n    {\n      $sort: {\n        createdAt: -1,\n      },\n    },\n  ]);\n\n  return paginate(body.page, body.perPage, transactionFilterUser);\n}\n\nexport async function getFee(body: TGetFee) {\n  const settings = await Settings.findOne({ active: true });\n\n  const valid = !(\n    body.assetNetwork.toLowerCase() === 'btc' &&\n    body.transactionAmount < settings.btc.minTransAmount\n  );\n\n  const serviceFee =\n    body.transactionType === 'purchase'\n      ? await getFiatHolderFee(body, settings)\n      : await getCryptoHolderFee(body, settings);\n\n  const transFee =\n    body.transactionType === 'sale'\n      ? await getCryptoHolderTransFee(body, settings)\n      : 0;\n\n  return {\n    fee: serviceFee + transFee,\n    valid,\n    minTransAmount: settings.btc.minTransAmount,\n  };\n}\n"]}