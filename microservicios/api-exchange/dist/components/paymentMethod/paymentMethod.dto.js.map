{"version":3,"file":"paymentMethod.dto.js","sourceRoot":"/","sources":["components/paymentMethod/paymentMethod.dto.ts"],"names":[],"mappings":";;;AACA,+DAAwD;AAG3C,QAAA,qBAAqB,GAAG,qCAAe,CAAC,WAAW,EAAE,CAAC;AACtD,QAAA,iBAAiB,GAAG,qCAAe,CAAC,OAAO,EAAE,CAAC;AAC9C,QAAA,uBAAuB,GAClC,qCAAe,CAAC,aAAa,EAAE,CAAC,WAAW,EAAE,CAAC;AACnC,QAAA,wBAAwB,GAAG,qCAAe,CAAC,cAAc,EAAE,CAAC;AAa5D,QAAA,4BAA4B,GAAG;;;;;;;;;;;CAW3C,CAAC;AAMW,QAAA,yBAAyB,GAAG;;;;CAIxC,CAAC;AAMW,QAAA,wBAAwB,GAAG;;;;CAIvC,CAAC;AAEW,QAAA,uBAAuB,GAAG;;;qBAGlB,yBAAiB;;CAErC,CAAC;AAcW,QAAA,wBAAwB,GAAG;;;;;;;;;;;;CAYvC,CAAC","sourcesContent":["import { Types } from 'mongoose';\nimport { PaymentMethodTC } from './paymentMethod.model';\nimport { IPaymentMethodValue } from '../paymentMethodValue';\n\nexport const PaymentMethodTypeName = PaymentMethodTC.getTypeName();\nexport const PaymentMethodType = PaymentMethodTC.getType();\nexport const PaymentMethodTypePlural =\n  PaymentMethodTC.getTypePlural().getTypeName();\nexport const PaymentMethodTypeNonNull = PaymentMethodTC.getTypeNonNull();\n\nexport type TCreatePaymentValue = {\n  value: string;\n  paymentMethodInput: Types.ObjectId;\n};\n\nexport type TCreatePaymentMethodUser = {\n  type: Types.ObjectId;\n  values: [TCreatePaymentValue];\n  requiredInfo: Array<string>;\n};\n\nexport const CreatePaymentMethodUserInput = `\n  input CreatePaymentMethodUser {\n    type: MongoID!\n    values: [PaymenthMethodValue]!\n    requiredInfo: [String]\n  }\n\n  input PaymenthMethodValue {\n    value: String!\n    paymentMethodInput: MongoID!\n  }\n`;\n\nexport type TGetPaymentMethodUser = {\n  currency: Types.ObjectId;\n};\n\nexport const GetPaymentMethodUserInput = `\n  input GetPaymentMethodUser {\n    currency: MongoID\n  }\n`;\n\nexport type TCancelPaymentMethod = {\n  paymentMethodId: Types.ObjectId;\n};\n\nexport const CancelPaymentMethodInput = `\n  input CancelPaymentMethod {\n    paymentMethodId: MongoID!\n  }\n`;\n\nexport const CancelPaymentMethodType = `\n  type CancelPaymentMethodType {\n    success: Boolean\n    paymentMethod: ${PaymentMethodType}\n  }\n`;\n\nexport type TUpdatePaymentValue = {\n  value: string;\n  paymentMethodInput: Types.ObjectId;\n};\n\nexport type TUpdatePaymentMethod = {\n  paymentMethodId: Types.ObjectId;\n  type: Types.ObjectId;\n  values: [TUpdatePaymentValue];\n  requiredInfo?: Array<string>;\n};\n\nexport const UpdatePaymentMethodInput = `\n  input UpdatePaymentMethod {\n    paymentMethodId: MongoID!\n    type: MongoID\n    values: [PaymenthMethodValueUser!]\n    requiredInfo: [String]\n  }\n\n  input PaymenthMethodValueUser {\n      value: String!\n      paymentMethodInput: MongoID!\n  }\n`;\n"]}