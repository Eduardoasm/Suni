{"version":3,"file":"bestPrice.model.js","sourceRoot":"/","sources":["components/bestPrice/bestPrice.model.ts"],"names":[],"mappings":";;;AAAA,uCAAiE;AACjE,uEAA2D;AAC3D,0CAAoD;AACpD,oCAA2C;AAgB3C,MAAM,eAAe,GAAG,IAAI,iBAAM,CAChC;IACE,QAAQ,EAAE;QACR,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,KAAK,EAAE,UAAU;KAClB;IACD,KAAK,EAAE;QACL,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,KAAK,EAAE,OAAO;KACf;IACD,aAAa,EAAE;QACb,IAAI,EAAE,MAAM;KACb;IACD,iBAAiB,EAAE;QACjB,IAAI,EAAE,MAAM;KACb;CACF,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEW,QAAA,SAAS,GAAG,IAAA,gBAAK,EAC5B,WAAW,EACX,eAAe,CAChB,CAAC;AAEW,QAAA,WAAW,GAAG,IAAA,0CAAe,EAAoB,iBAAgB,CAAC,CAAC;AAEhF,mBAAW,CAAC,WAAW,CAAC,UAAU,EAAE;IAClC,QAAQ,EAAE,GAAG,EAAE,CAAC,qBAAU,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;IACvE,WAAW,EAAE;QACX,GAAG,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ;KACjC;IACD,UAAU,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE;CAC5B,CAAC,CAAC;AAEH,mBAAW,CAAC,WAAW,CAAC,OAAO,EAAE;IAC/B,QAAQ,EAAE,GAAG,EAAE,CAAC,eAAO,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;IACpE,WAAW,EAAE;QACX,GAAG,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK;KAC9B;IACD,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;CACzB,CAAC,CAAC","sourcesContent":["import { Types, model, Document, Model, Schema } from 'mongoose';\nimport { composeMongoose } from 'graphql-compose-mongoose';\nimport { CurrencyTC, ICurrency } from '../currency';\nimport { AssetTC, IAsset } from '../asset';\n\nexport interface IBestPrice {\n  _id?: any;\n  currency: Types.ObjectId | ICurrency;\n  asset: Types.ObjectId | IAsset;\n  saleBestPrice: number;\n  purchaseBestPrice: number;\n  active?: boolean;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport type BestPriceDocument = Document<Types.ObjectId, any, IBestPrice> &\n  IBestPrice;\n\nconst bestPriceSchema = new Schema<IBestPrice>(\n  {\n    currency: {\n      type: Schema.Types.ObjectId,\n      model: 'Currency',\n    },\n    asset: {\n      type: Schema.Types.ObjectId,\n      model: 'Asset',\n    },\n    saleBestPrice: {\n      type: Number,\n    },\n    purchaseBestPrice: {\n      type: Number,\n    },\n  },\n  { timestamps: true }\n);\n\nexport const BestPrice = model<IBestPrice, Model<IBestPrice>>(\n  'BestPrice',\n  bestPriceSchema\n);\n\nexport const BestPriceTC = composeMongoose<BestPriceDocument>(BestPrice as any);\n\nBestPriceTC.addRelation('currency', {\n  resolver: () => CurrencyTC.mongooseResolvers.dataLoader({ lean: true }),\n  prepareArgs: {\n    _id: (source) => source.currency,\n  },\n  projection: { currency: 1 },\n});\n\nBestPriceTC.addRelation('asset', {\n  resolver: () => AssetTC.mongooseResolvers.dataLoader({ lean: true }),\n  prepareArgs: {\n    _id: (source) => source.asset,\n  },\n  projection: { asset: 1 },\n});\n"]}