{"version":3,"file":"bestPrice.controller.js","sourceRoot":"/","sources":["components/bestPrice/bestPrice.controller.ts"],"names":[],"mappings":";;;;AAAA,qDAAiD;AACjD,uDAAgD;AAChD,mDAAmE;AACnE,8EAAwD;AAE3C,QAAA,YAAY,GAAG,gCAAc,CAAC,cAAc,CAAM;IAC7D,IAAI,EAAE,oBAAoB;IAC1B,IAAI,EAAE,OAAO;IACb,WAAW,EAAE,0CAA0C;IACvD,IAAI,EAAE,6BAAa;IACnB,IAAI,EAAE;QACJ,IAAI,EAAE,iCAAiB;KACxB;IACK,OAAO,CAAC,EAAE,IAAI,EAAE;;YACpB,MAAM,SAAS,GAAG,MAAM,gBAAgB,CAAC,YAAY,CAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,CAAC,CAAC;YAClE,OAAO,SAAS,CAAC;QACnB,CAAC;KAAA;CACF,CAAC,CAAC;AAEH,MAAM,kBAAkB,GAAG;IACzB,eAAe,EAAE,6BAAW,CAAC,iBAAiB,CAAC,SAAS,EAAE;IAC1D,eAAe,EAAE,6BAAW,CAAC,iBAAiB,CAAC,SAAS,EAAE;CAC3D,CAAC;AASyB,gDAAkB;AAP7C,MAAM,gBAAgB,GAAG;IACvB,SAAS,EAAE,6BAAW,CAAC,iBAAiB,CAAC,OAAO,EAAE;IAClD,UAAU,EAAE,6BAAW,CAAC,iBAAiB,CAAC,QAAQ,EAAE;IACpD,cAAc,EAAE,6BAAW,CAAC,iBAAiB,CAAC,KAAK,EAAE;IACrD,YAAY,EAAZ,oBAAY;CACb,CAAC;AAEO,4CAAgB","sourcesContent":["import { schemaComposer } from 'graphql-compose';\nimport { BestPriceTC } from './bestPrice.model';\nimport { BestPriceType, GetBestPriceInput } from './bestPrice.dto';\nimport * as bestPriceService from './bestPrice.service';\n\nexport const getBestPrice = schemaComposer.createResolver<any>({\n  name: 'best listing price',\n  kind: 'query',\n  description: 'get best purchase and sale listing price',\n  type: BestPriceType,\n  args: {\n    data: GetBestPriceInput,\n  },\n  async resolve({ args }) {\n    const bestPrice = await bestPriceService.getBestPrice(args?.data);\n    return bestPrice;\n  },\n});\n\nconst bestPriceMutations = {\n  createBestPrice: BestPriceTC.mongooseResolvers.createOne(),\n  updateBestPrice: BestPriceTC.mongooseResolvers.updateOne(),\n};\n\nconst bestPriceQueries = {\n  bestPrice: BestPriceTC.mongooseResolvers.findOne(),\n  bestPrices: BestPriceTC.mongooseResolvers.findMany(),\n  totalBestPrice: BestPriceTC.mongooseResolvers.count(),\n  getBestPrice,\n};\n\nexport { bestPriceQueries, bestPriceMutations };\n"]}