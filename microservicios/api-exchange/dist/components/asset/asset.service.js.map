{"version":3,"file":"asset.service.js","sourceRoot":"/","sources":["components/asset/asset.service.ts"],"names":[],"mappings":";;;;AAQA,uCAA4C;AAC5C,+CAA8C;AAE9C,SAAsB,OAAO,CAC3B,MAA4B,EAC5B,UAA0C,EAC1C,OAAqC;;QAErC,OAAO,mBAAK,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;IAC3D,CAAC;CAAA;AAND,0BAMC;AAED,SAAsB,IAAI,CACxB,MAA4B,EAC5B,UAA0C,EAC1C,OAAqC;;QAErC,OAAO,mBAAK,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;IACxD,CAAC;CAAA;AAND,oBAMC;AAED,SAAsB,SAAS,CAC7B,MAA2B,EAC3B,MAA2D,EAC3D,OAAqC;;QAErC,OAAO,mBAAK,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;IACzD,CAAC;CAAA;AAND,8BAMC;AAED,SAAsB,MAAM,CAAC,KAAa;;QACxC,OAAO,mBAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;CAAA;AAFD,wBAEC;AAED,SAAsB,UAAU,CAC9B,IAAY,EACZ,OAAe,EACf,MAA4B,EAC5B,UAA0C,EAC1C,OAAqC;;QAErC,OAAO,IAAA,qBAAa,EAAC,IAAI,EAAE,OAAO,EAAE,mBAAK,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;IAC1E,CAAC;CAAA;AARD,gCAQC;AAED,SAAsB,SAAS;;QAC7B,OAAO,mBAAK,CAAC,SAAS,CAAC;YACrB,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE;YAC5B,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE;SACxB,CAAC,CAAC;IACL,CAAC;CAAA;AALD,8BAKC","sourcesContent":["/* eslint-disable import/no-cycle */\nimport type {\n  FilterQuery,\n  ProjectionType,\n  QueryOptions,\n  UpdateQuery,\n  UpdateWithAggregationPipeline,\n} from 'mongoose';\nimport { paginateModel } from '../../utils';\nimport { IAsset, Asset } from './asset.model';\n\nexport async function findOne(\n  filter?: FilterQuery<IAsset>,\n  projection?: ProjectionType<IAsset> | null,\n  options?: QueryOptions<IAsset> | null\n) {\n  return Asset.findOne(filter, projection, options).exec();\n}\n\nexport async function find(\n  filter?: FilterQuery<IAsset>,\n  projection?: ProjectionType<IAsset> | null,\n  options?: QueryOptions<IAsset> | null\n) {\n  return Asset.find(filter, projection, options).exec();\n}\n\nexport async function updateOne(\n  filter: FilterQuery<IAsset>,\n  update: UpdateQuery<IAsset> | UpdateWithAggregationPipeline,\n  options?: QueryOptions<IAsset> | null\n) {\n  return Asset.updateOne(filter, update, options).exec();\n}\n\nexport async function create(asset: IAsset) {\n  return Asset.create(asset);\n}\n\nexport async function pagination(\n  page: number,\n  perPage: number,\n  filter?: FilterQuery<IAsset>,\n  projection?: ProjectionType<IAsset> | null,\n  options?: QueryOptions<IAsset> | null\n) {\n  return paginateModel(page, perPage, Asset, filter, projection, options);\n}\n\nexport async function getAssets() {\n  return Asset.aggregate([\n    { $match: { active: true } },\n    { $sort: { index: 1 } },\n  ]);\n}\n"]}