{"version":3,"file":"asset.controller.js","sourceRoot":"/","sources":["components/asset/asset.controller.ts"],"names":[],"mappings":";;;;AAAA,qDAAiD;AACjD,+CAAwC;AACxC,2CAA8C;AAC9C,sEAAgD;AAEnC,QAAA,SAAS,GAAG,gCAAc,CAAC,cAAc,CAAM;IAC1D,IAAI,EAAE,WAAW;IACjB,IAAI,EAAE,OAAO;IACb,WAAW,EAAE,2CAA2C;IACxD,IAAI,EAAE,2BAAe;IACf,OAAO;;YACX,OAAO,YAAY,CAAC,SAAS,EAAE,CAAC;QAClC,CAAC;KAAA;CACF,CAAC,CAAC;AAEH,MAAM,cAAc,GAAG;IACrB,WAAW,EAAE,qBAAO,CAAC,iBAAiB,CAAC,SAAS,EAAE;IAClD,WAAW,EAAE,qBAAO,CAAC,iBAAiB,CAAC,SAAS,EAAE;CACnD,CAAC;AASqB,wCAAc;AAPrC,MAAM,YAAY,GAAG;IACnB,KAAK,EAAE,qBAAO,CAAC,iBAAiB,CAAC,OAAO,EAAE;IAC1C,MAAM,EAAE,qBAAO,CAAC,iBAAiB,CAAC,QAAQ,EAAE;IAC5C,UAAU,EAAE,qBAAO,CAAC,iBAAiB,CAAC,KAAK,EAAE;IAC7C,SAAS,EAAT,iBAAS;CACV,CAAC;AAEO,oCAAY","sourcesContent":["import { schemaComposer } from 'graphql-compose';\nimport { AssetTC } from './asset.model';\nimport { AssetTypePlural } from './asset.dto';\nimport * as assetService from './asset.service';\n\nexport const getAssets = schemaComposer.createResolver<any>({\n  name: 'getAssets',\n  kind: 'query',\n  description: 'get active assets ordered by custom index',\n  type: AssetTypePlural,\n  async resolve() {\n    return assetService.getAssets();\n  },\n});\n\nconst assetMutations = {\n  createAsset: AssetTC.mongooseResolvers.createOne(),\n  updateAsset: AssetTC.mongooseResolvers.updateOne(),\n};\n\nconst assetQueries = {\n  asset: AssetTC.mongooseResolvers.findOne(),\n  assets: AssetTC.mongooseResolvers.findMany(),\n  totalAsset: AssetTC.mongooseResolvers.count(),\n  getAssets,\n};\n\nexport { assetQueries, assetMutations };\n"]}