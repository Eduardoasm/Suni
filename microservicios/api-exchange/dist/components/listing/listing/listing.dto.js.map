{"version":3,"file":"listing.dto.js","sourceRoot":"/","sources":["components/listing/listing/listing.dto.ts"],"names":[],"mappings":";;;AACA,mDAMyB;AAGZ,QAAA,eAAe,GAAG,yBAAS,CAAC,WAAW,EAAE,CAAC;AAC1C,QAAA,WAAW,GAAG,yBAAS,CAAC,OAAO,EAAE,CAAC;AAClC,QAAA,iBAAiB,GAAG,yBAAS,CAAC,aAAa,EAAE,CAAC,WAAW,EAAE,CAAC;AAC5D,QAAA,kBAAkB,GAAG,yBAAS,CAAC,cAAc,EAAE,CAAC;AAahD,QAAA,qBAAqB,GAAG;;;;;;;;;;;;;;;;;CAiBpC,CAAC;AAUW,QAAA,yBAAyB,GAAG;;;;;;;;CAQxC,CAAC;AAsBW,QAAA,kBAAkB,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA+BjC,CAAC;AASW,QAAA,wBAAwB,GAAG;;;;;;;CAOvC,CAAC;AAEW,QAAA,oBAAoB,GAAG;;;;;CAKnC,CAAC;AAEW,QAAA,sBAAsB,GAAG;;;cAGxB,mBAAW;;;;;;;;;;;CAWxB,CAAC;AAwBW,QAAA,sBAAsB,GAAG;;;;;;;;;;;;;;;;;;;;;;CAsBrC,CAAC;AAMW,QAAA,kBAAkB,GAAG;;;;CAIjC,CAAC;AAEW,QAAA,iBAAiB,GAAG;;;;CAIhC,CAAC;AAMW,QAAA,kBAAkB,GAAG;;;;CAIjC,CAAC;AAOW,QAAA,sBAAsB,GAAG;;;;;CAKrC,CAAC;AAEW,QAAA,qBAAqB,GAAG;;;;CAIpC,CAAC","sourcesContent":["import { Types } from 'mongoose';\nimport {\n  ListingStatusEnum,\n  ListingTC,\n  ListingTypeEnum,\n  PriceTypeEnum,\n  priceReferenceTypeEnum,\n} from './listing.model';\nimport { ITakerConditions } from '../takerConditions';\n\nexport const ListingTypeName = ListingTC.getTypeName();\nexport const ListingType = ListingTC.getType();\nexport const ListingTypePlural = ListingTC.getTypePlural().getTypeName();\nexport const ListingTypeNonNull = ListingTC.getTypeNonNull();\n\nexport type TGetListingFilter = {\n  type: string;\n  amount: number;\n  currency: Types.ObjectId;\n  asset: Types.ObjectId;\n  paymentMethods: Types.ObjectId;\n  page: number;\n  perPage: number;\n  order?: string;\n};\n\nexport const getListingFilterInput = `\n  input getListingFilter {\n    type: String!\n    amount: Float\n    currency: MongoID\n    asset: MongoID\n    paymentMethods: MongoID\n    page: Int!\n    perPage: Int!\n    order: ListingOrder\n  }\n\n  enum ListingOrder {\n    order\n    completionRate\n    price\n  }\n`;\n\nexport type TGetListingFilterUser = {\n  type: string;\n  asset: Types.ObjectId;\n  status: ListingStatusEnum;\n  page: number;\n  perPage: number;\n};\n\nexport const getListingFilterUserInput = `\n  input getListingFilterUser {\n    type: String\n    asset: MongoID\n    status: String\n    page: Int!\n    perPage: Int!\n  }\n`;\n\nexport type TCreateListing = {\n  currency: Types.ObjectId;\n  amount: number;\n  asset: Types.ObjectId;\n  price?: number;\n  priceType: PriceTypeEnum;\n  comments?: string;\n  autoReply?: string;\n  paymentMethods: Array<Types.ObjectId>;\n  maxAmount: number;\n  minAmount: number;\n  walletUser: string;\n  takerConditions?: Array<ITakerConditions>;\n  timeMinutes: number;\n  pricePercentage: number;\n  amountInAsset: boolean;\n  bestPricePercentage?: number;\n  priceReferenceType?: priceReferenceTypeEnum;\n};\n\nexport const CreateListingInput = `\n  input createListingSale {\n    currency: MongoID!\n    amount: Float!\n    asset: MongoID!\n    price: Float\n    walletUser: String!\n    comments: String\n    autoReply: String\n    paymentMethods: [MongoID]\n    maxAmount: Float!\n    minAmount: Float!\n    takerConditions: [takerCond]\n    priceType: String\n    timeMinutes: Int!\n    pricePercentage: Float\n    amountInAsset: Boolean!\n    bestPricePercentage: Float\n    priceReferenceType: PriceReference\n  }\n\n  input takerCond {\n    conditionName: String\n    conditionValue: String\n  }\n\n  enum PriceReference {\n    suni\n    market\n  }\n  \n`;\n\nexport type TGetBestPricesListing = {\n  currency: Types.ObjectId;\n  asset: Types.ObjectId;\n  type: ListingTypeEnum;\n  pricetype?: PriceTypeEnum;\n};\n\nexport const GetBestPriceListingInput = `\n  input GetBestPriceListing {\n    currency: MongoID!\n    asset: MongoID!\n    type: String!\n    pricetype: String\n  }\n`;\n\nexport const GetPricesListingType = `\n  type GetPricesListingType {\n    median: Float!\n    bestPrice: Float!\n  }\n`;\n\nexport const listingsPaginationType = `\n  type Pagination {\n    count: Int!\n    items: [${ListingType}]\n    pageInfo: PageInfo!\n  }\n  type PageInfo {\n    currentPage: Int\n    perPage: Int\n    itemCount: Int\n    pageCount: Int\n    hasPreviousPage: Boolean\n    hasNextPage: Boolean\n  }\n`;\n\nexport type TUpdateListingUser = {\n  listing: Types.ObjectId;\n  currency: Types.ObjectId;\n  asset: Types.ObjectId;\n  amount: number;\n  price?: number;\n  priceType: PriceTypeEnum;\n  comments: string;\n  autoReply: string;\n  paymentMethods: Array<Types.ObjectId>;\n  maxAmount: number;\n  minAmount: number;\n  selectedWallet: string;\n  type: ListingTypeEnum;\n  takerConditions: Array<string>;\n  timeMinutes: number;\n  pricePercentage: number;\n  amountInAsset: boolean;\n  bestPricePercentage?: number;\n  priceReferenceType?: priceReferenceTypeEnum;\n};\n\nexport const UpdateListingUserInput = `\n  input UpdateListingUser {\n    listing: MongoID!\n    currency: MongoID\n    asset: MongoID\n    amount: Float\n    price: Float\n    priceType: String\n    comments: String\n    autoReply: String\n    paymentMethods:[MongoID]\n    maxAmount: Float\n    minAmount: Float\n    selectedWallet: String\n    type: String\n    takerConditions: [String]\n    timeMinutes: Int\n    pricePercentage: Float\n    amountInAsset: Boolean\n    bestPricePercentage: Float\n    priceReferenceType: PriceReference\n  }\n`;\n\nexport type TDeleteListing = {\n  listing: Types.ObjectId;\n};\n\nexport const DeleteListingInput = `\n  input DeleteListing {\n    listing: MongoID!\n  }\n`;\n\nexport const DeleteListingType = `\n  type TypeDeleteListing {\n    success: Boolean!\n  }\n`;\n\nexport type TCancelListing = {\n  listing: Types.ObjectId;\n};\n\nexport const CancelListingInput = `\n  input CancelListing {\n    listing: MongoID!\n  }\n`;\n\nexport type TGetKpiMarketPrice = {\n  asset: string;\n  fiat: string;\n};\n\nexport const GetKpiMarketPriceInput = `\n  input GetKpiMarketPrice {\n    asset: String\n    fiat: String\n  }\n`;\n\nexport const GetKpiMarketPriceType = `\n  type GetKpiMarketPriceType {\n    rate: Float\n  }\n`;\n"]}