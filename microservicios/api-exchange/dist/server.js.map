{"version":3,"file":"server.js","sourceRoot":"/","sources":["server.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable import/newline-after-import */\n/* eslint-disable import/first */\nimport http from 'http';\nimport dotenv from 'dotenv';\ndotenv.config({ path: './src/variables.env' });\nimport * as Sentry from '@sentry/node';\nimport * as Tracing from '@sentry/tracing';\nimport mongoose from 'mongoose';\nimport express from 'express';\nimport swaggerUI from 'swagger-ui-express';\nimport swaggerJSDoc from 'swagger-jsdoc';\nimport bodyParser from 'body-parser';\nimport cookieParser from 'cookie-parser';\nimport cors from 'cors';\nimport helmet from 'helmet';\nimport { RewriteFrames } from '@sentry/integrations';\nimport { ApolloServer } from '@apollo/server';\nimport { expressMiddleware } from '@apollo/server/express4';\nimport { ApolloServerPluginDrainHttpServer } from '@apollo/server/plugin/drainHttpServer';\nimport { ApolloServerPluginLandingPageLocalDefault } from '@apollo/server/plugin/landingPage/default';\nimport { ApolloServerPluginLandingPageDisabled } from '@apollo/server/plugin/disabled';\nimport { ApolloServerPluginCacheControl } from '@apollo/server/plugin/cacheControl';\nimport { applyMiddleware } from 'graphql-middleware';\nimport { rule, shield } from 'graphql-shield';\nimport { InMemoryLRUCache } from '@apollo/utils.keyvaluecache';\nimport axios from 'axios';\nimport { SentryPlugin } from './utils/SentryPlugin';\nimport schema from './graphql/schema';\nimport paymentMethodCategoryRouter from './components/paymentMethodCategory/paymentMethodCategory.routes';\nimport { currencyRouter } from './components/currency';\nimport { settingsRouter } from './components/settings';\nimport { appealRouter } from './components/appeal/appeal';\nimport { userRouter } from './components/user';\nimport { streamChatRouter } from './components/streamChat';\nimport { countryRouter } from './components/country';\nimport transactionsRouter from './components/transaction/transaction.routes';\nimport listingRouter from './components/listing/listing/listing.routes';\n\ndeclare global {\n  namespace NodeJS {\n    interface Global {\n      __rootdir__: string;\n    }\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\nglobal.__rootdir__ = process.cwd() || __dirname;\n\ninterface IContext {\n  req: express.Request;\n  res: express.Response;\n}\n\nasync function initSever() {\n  let connection: typeof mongoose | null = null;\n  try {\n    connection = await mongoose\n      .connect(String(process.env.DATABASE))\n      .then((conn) => {\n        console.log('Connected to database');\n        return conn;\n      });\n\n    mongoose.connection.on('error', (err) => `‚ùåü§¨‚ùåü§¨ ${err}`);\n\n    const app = express();\n\n    const PORT = Number(process.env.PORT);\n\n    app.set('port', PORT || 3004);\n    app.use(\n      cors<cors.CorsRequest>({\n        origin: JSON.parse(\n          process?.env?.CORS_ORIGINS ?? '[\"studio.apollographql.com\"]'\n        ).push('studio.apollographql.com'),\n        credentials: true,\n      })\n    );\n    app.use(bodyParser.json());\n    app.use(bodyParser.urlencoded({ extended: true }));\n    app.use(cookieParser());\n    if (process.env.NODE_ENV === 'production') {\n      app.use(\n        helmet({\n          contentSecurityPolicy:\n            process.env.NODE_ENV === 'production' ? undefined : false,\n        })\n      );\n    }\n    app.use(Sentry.Handlers.requestHandler());\n    app.use(Sentry.Handlers.tracingHandler());\n    app.use(Sentry.Handlers.errorHandler());\n\n    app.use('/api', paymentMethodCategoryRouter);\n    app.use('/api', currencyRouter);\n    app.use('/api', settingsRouter);\n    app.use('/api', appealRouter);\n    app.use('/api', userRouter);\n    app.use('/api', streamChatRouter);\n    app.use('/api', countryRouter);\n    app.use('/api', transactionsRouter);\n    app.use('/api', listingRouter);\n\n    const isAuthenticated = rule()(async (parent, args, context, info) => {\n      const token = context.req.headers?.authorization;\n      const config = {\n        method: 'get',\n        baseURL: process.env.SERVICE_URL,\n        url: '/auth/userinfo',\n        headers: {\n          authorization: `Bearer ${token}`,\n        },\n      };\n\n      const { data } = await axios(config);\n      return data.success;\n    });\n\n    const permissions = shield({\n      Query: { '*': isAuthenticated },\n      Mutation: { '*': isAuthenticated },\n    });\n\n    const schemaWithPermissions = applyMiddleware(schema, permissions); // middleware-permisos de graphql\n\n    const httpServer = http.createServer(app);\n\n    const server = new ApolloServer<IContext>({\n      schema,\n      introspection: true,\n      cache: new InMemoryLRUCache({\n        maxSize: 100 * 1024 * 1024,\n        ttl: 60 * 60 * 8,\n      }),\n      plugins: [\n        process.env.NODE_ENV === 'production'\n          ? ApolloServerPluginLandingPageDisabled()\n          : ApolloServerPluginLandingPageLocalDefault({ footer: false }),\n        ApolloServerPluginDrainHttpServer({ httpServer }),\n        ApolloServerPluginCacheControl({\n          defaultMaxAge: 60,\n          calculateHttpHeaders: true,\n        }),\n        new SentryPlugin(),\n      ],\n    });\n\n    await server.start();\n\n    app.use(\n      expressMiddleware(server, {\n        context: async ({ req, res }) => ({ req, res }),\n      })\n    );\n\n    const swaggerSpec = swaggerJSDoc({\n      definition: {\n        openapi: '3.0.0',\n        info: {\n          title: 'Suni exchange API',\n          version: '1.0.0',\n        },\n        host:\n          process.env.NODE_ENV === 'development'\n            ? 'http://localhost:3004'\n            : 'https://api.sun-exchange.avilatek.com/graphql',\n      },\n      apis: ['./src/components/**/*.routes.ts'],\n    });\n    app.use('/api/docs', swaggerUI.serve, swaggerUI.setup(swaggerSpec));\n\n    if (process.env.NODE_ENV !== 'development') {\n      Sentry.init({\n        dsn: process.env.SENTRY_DSN,\n        tracesSampleRate: 0.5,\n        integrations: [\n          new RewriteFrames({\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            root: global.__rootdir__,\n          }),\n          new Sentry.Integrations.Http({ tracing: true }),\n          new Tracing.Integrations.Mongo({ useMongoose: true }),\n          new Tracing.Integrations.Express({ app }),\n          new Tracing.Integrations.Apollo(),\n        ],\n      });\n    }\n\n    await new Promise<void>((resolve) => {\n      httpServer.listen({ port: PORT }, resolve);\n    });\n    console.log(`üöÄ Server ready at http://localhost:${PORT}/graphql`);\n  } catch (err) {\n    if (connection) {\n      connection.connection.close();\n    }\n    console.log(err);\n    process.exit(1);\n  }\n}\n\ninitSever();\n"]}