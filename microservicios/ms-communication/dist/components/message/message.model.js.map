{"version":3,"file":"message.model.js","sourceRoot":"/","sources":["components/message/message.model.ts"],"names":[],"mappings":";;;AAAA,uCAAiE;AACjE,uEAA2D;AAC3D,+DAAmE;AAetD,QAAA,aAAa,GAAG,IAAI,iBAAM,CACrC;IACE,QAAQ,EAAE;QACR,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,UAAU;KAChB;IACD,KAAK,EAAE;QACL,IAAI,EAAE,MAAM;KACb;IACD,OAAO,EAAE;QACP,IAAI,EAAE,MAAM;KACb;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,IAAI;KACd;CACF,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEW,QAAA,OAAO,GAAG,IAAA,gBAAK,EAC1B,SAAS,EACT,qBAAa,CACd,CAAC;AAEW,QAAA,SAAS,GAAG,IAAA,0CAAe,EAAkB,eAAc,CAAC,CAAC;AAE1E,iBAAS,CAAC,WAAW,CAAC,UAAU,EAAE;IAChC,QAAQ,EAAE,GAAG,EAAE,CAAC,2BAAU,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;IACvE,WAAW,EAAE;QACX,GAAG,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ;KACjC;IACD,UAAU,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE;CAC5B,CAAC,CAAC","sourcesContent":["import { Schema, Document, Types, Model, model } from 'mongoose';\nimport { composeMongoose } from 'graphql-compose-mongoose';\nimport { ILanguage, LanguageTC } from '../language/language.model';\n\nexport interface IMessage {\n  _id?: any;\n  language: Types.ObjectId | ILanguage;\n  title: string;\n  content: string;\n  isActive?: boolean;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport type MessageDocument = Document<Types.ObjectId, any, IMessage> &\n  IMessage;\n\nexport const messageSchema = new Schema<IMessage>(\n  {\n    language: {\n      type: Schema.Types.ObjectId,\n      ref: 'Language',\n    },\n    title: {\n      type: String,\n    },\n    content: {\n      type: String,\n    },\n    isActive: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  { timestamps: true }\n);\n\nexport const Message = model<IMessage, Model<IMessage>>(\n  'Message',\n  messageSchema\n);\n\nexport const MessageTC = composeMongoose<MessageDocument>(Message as any);\n\nMessageTC.addRelation('language', {\n  resolver: () => LanguageTC.mongooseResolvers.dataLoader({ lean: true }),\n  prepareArgs: {\n    _id: (source) => source.language,\n  },\n  projection: { language: 1 },\n});\n"]}