{"version":3,"file":"message.controller.js","sourceRoot":"/","sources":["components/message/message.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport { MessageTC } from './message.model';\nimport * as messageService from './message.service';\n\nconst messageQueries = {\n  message: MessageTC.mongooseResolvers.findOne(),\n  messages: MessageTC.mongooseResolvers.findMany({\n    limit: { defaultValue: 1000000 },\n  }),\n  messagePagination: MessageTC.mongooseResolvers.pagination(),\n};\n\nconst messageMutations = {\n  createMessage: MessageTC.mongooseResolvers.createOne(),\n  updateMessage: MessageTC.mongooseResolvers.updateOne(),\n};\n\n// REST Controller\n\nexport async function getAll(req: Request, res: Response, next: NextFunction) {\n  try {\n    const messages = await messageService.find({});\n    return res.status(200).json({ success: true, messages });\n  } catch (err) {\n    res.status(500).json({ err: 'Internal server error', success: false });\n  }\n}\n\nexport async function getOne(req: Request, res: Response, next: NextFunction) {\n  try {\n    const message = await messageService.findOne({\n      _id: req.params._id,\n    });\n    return res.status(200).json({ success: true, message });\n  } catch (err) {\n    res.status(500).json({ err: 'Internal server error', success: false });\n  }\n}\n\nexport async function createOne(\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  try {\n    const message = await messageService.create(req.body);\n    return res.status(200).json({ success: true, message });\n  } catch (err) {\n    res.status(500).json({ err: 'Internal server error', success: false });\n  }\n}\n\nexport async function updateOne(\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  try {\n    const message = await messageService.updateOne(\n      { _id: req.params._id },\n      req.body\n    );\n    return res.status(200).json({ success: true, message });\n  } catch (err) {\n    res.status(500).json({ err: 'Internal server error', success: false });\n  }\n}\n\nexport async function pagination(\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  try {\n    const data = await messageService.pagination(\n      Number(req.params.page),\n      Number(req.params.perPage)\n    );\n    return res.status(200).json({ success: true, pagination: data });\n  } catch (err) {\n    res.status(500).json({ err: 'Internal server error', success: false });\n  }\n}\n\nexport { messageQueries, messageMutations };\n"]}