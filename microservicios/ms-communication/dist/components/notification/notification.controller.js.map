{"version":3,"file":"notification.controller.js","sourceRoot":"/","sources":["components/notification/notification.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import mongoose from 'mongoose';\nimport { schemaComposer } from 'graphql-compose';\nimport { NextFunction, Request, Response } from 'express';\nimport { NotificationTC } from './notification.model';\nimport {\n  GetNotificationsInput,\n  NotificationType,\n  DeleteNotificationInput,\n  ReadNotificationInput,\n  CreateNotificationInput,\n  CustomGetOneNotificationInput,\n  CustomGetOneNotificationType,\n} from './notification.dto';\nimport { buildPaginationType } from '../../utils';\nimport * as notificationService from './notification.service';\n\nconst notificationPaginationType = buildPaginationType('Notification');\n\nconst getNotifications = schemaComposer.createResolver<any>({\n  name: 'get notification',\n  description: 'get all notifications with filter by module optionally',\n  kind: 'query',\n  type: notificationPaginationType,\n  args: {\n    data: GetNotificationsInput,\n  },\n  async resolve({ args, context }) {\n    const token = context.req.headers.authorization;\n    const notifications = await notificationService.getNotifications(\n      args?.data,\n      token\n    );\n    return notifications;\n  },\n});\n\nconst deleteNotification = schemaComposer.createResolver<any>({\n  name: 'Delete notification',\n  description: 'soft delete for one notification',\n  kind: 'mutation',\n  type: NotificationType,\n  args: {\n    data: DeleteNotificationInput,\n  },\n  async resolve({ args, context }) {\n    const token = context.req.headers?.authorization;\n    const deletedNotification =\n      await notificationService.softDeleteNotification(args?.data, token);\n    return deletedNotification;\n  },\n});\n\nconst readOneNotification = schemaComposer.createResolver<any>({\n  name: 'read notification',\n  description: 'read notification',\n  kind: 'mutation',\n  type: NotificationType,\n  args: {\n    data: ReadNotificationInput,\n  },\n  async resolve({ args, context }) {\n    const token = context.req.headers?.authorization;\n    const notificationRead = await notificationService.readNotification(\n      args?.data,\n      token\n    );\n    return notificationRead;\n  },\n});\n\nconst readManyNotifications = schemaComposer.createResolver<any>({\n  name: 'read many notifications',\n  description: 'read many notifications with user token',\n  kind: 'mutation',\n  type: 'Boolean',\n  async resolve({ args, context }) {\n    const token = context.req.headers?.authorization;\n    const notifications = await notificationService.readManyNotifications(\n      token\n    );\n    return notifications;\n  },\n});\n\nconst customCreateNotification = schemaComposer.createResolver<any>({\n  name: 'create notification',\n  description: 'custom create notification',\n  kind: 'mutation',\n  type: NotificationType,\n  args: {\n    data: CreateNotificationInput,\n  },\n  async resolve({ args, context }) {\n    const token = context.req.headers?.authorization;\n    const notificationCreated =\n      await notificationService.customCreateNotification(args?.data, token);\n    return notificationCreated;\n  },\n});\n\nconst customGetOne = schemaComposer.createResolver<any>({\n  name: 'custom get one notification',\n  description: 'custom get one notification with relation object model',\n  kind: 'query',\n  type: CustomGetOneNotificationType,\n  args: {\n    data: CustomGetOneNotificationInput,\n  },\n  async resolve({ args, context }) {\n    const token = context.req.headers?.authorization;\n    const notification = await notificationService.customFindOne(\n      args?.data,\n      token\n    );\n    return notification;\n  },\n});\n\nconst unreadNotification = schemaComposer.createResolver<any>({\n  name: 'unread notification',\n  description: 'unread notification',\n  kind: 'mutation',\n  type: NotificationType,\n  args: {\n    data: ReadNotificationInput,\n  },\n  async resolve({ args, context }) {\n    const token = context.req.headers?.authorization;\n    const notificationUnread = await notificationService.unreadNotification(\n      args?.data,\n      token\n    );\n    return notificationUnread;\n  },\n});\n\nconst notificationQueries = {\n  notification: NotificationTC.mongooseResolvers.findOne(),\n  notifications: NotificationTC.mongooseResolvers.findMany({\n    limit: { defaultValue: 1000000 },\n  }),\n  notificationPagination: NotificationTC.mongooseResolvers.pagination(),\n  getNotifications,\n  customGetOne,\n};\n\nconst notificationMutations = {\n  createNotification: NotificationTC.mongooseResolvers.createOne(),\n  updateNotification: NotificationTC.mongooseResolvers.updateOne(),\n  deleteNotification,\n  readOneNotification,\n  readManyNotifications,\n  customCreateNotification,\n  unreadNotification,\n};\n\n// REST Controller\n\nexport async function getAll(req: Request, res: Response, next: NextFunction) {\n  try {\n    const notifications = await notificationService.find({});\n    return res.status(200).json({ success: true, notifications });\n  } catch (err) {\n    res.status(500).json({ err: 'Internal server error', success: false });\n  }\n}\n\nexport async function getOne(req: Request, res: Response, next: NextFunction) {\n  try {\n    const notification = await notificationService.findOne({\n      _id: req.params._id,\n    });\n    return res.status(200).json({ success: true, notification });\n  } catch (err) {\n    res.status(500).json({ err: 'Internal server error', success: false });\n  }\n}\n\nexport async function createOne(\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  try {\n    const notification = await notificationService.create(req.body);\n    return res.status(200).json({ success: true, notification });\n  } catch (err) {\n    res.status(500).json({ err: 'Internal server error', success: false });\n  }\n}\n\nexport async function updateOne(\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  try {\n    const notification = await notificationService.updateOne(\n      { _id: req.params._id },\n      req.body\n    );\n    return res.status(200).json({ success: true, notification });\n  } catch (err) {\n    res.status(500).json({ err: 'Internal server error', success: false });\n  }\n}\n\nexport async function pagination(\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  try {\n    const data = await notificationService.pagination(\n      Number(req.params.page),\n      Number(req.params.perPage)\n    );\n    return res.status(200).json({ success: true, pagination: data });\n  } catch (err) {\n    res.status(500).json({ err: 'Internal server error', success: false });\n  }\n}\n\nexport async function getAllWithPagination(\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  try {\n    if (!req.headers?.authorization) {\n      return res\n        .status(401)\n        .json({ success: false, msg: 'Token not provided' });\n    }\n    const notifications = await notificationService.getNotifications(\n      {\n        page: Number(req.params.page),\n        perPage: Number(req.params.perPage),\n        module: req.body.module,\n      },\n      req.headers.authorization\n    );\n\n    return res.status(200).json({ success: true, notifications });\n  } catch (error) {\n    return res\n      .status(500)\n      .json({ err: 'Internal server error', success: false });\n  }\n}\n\nexport async function softDeleteNotification(\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  try {\n    if (!req.headers?.authorization) {\n      return res\n        .status(401)\n        .json({ success: false, msg: 'Token not provided' });\n    }\n    const deletedNotification =\n      await notificationService.softDeleteNotification(\n        {\n          notificationId: new mongoose.Types.ObjectId(req.params?._id),\n        },\n        req.headers?.authorization\n      );\n\n    return res.status(200).json({ success: true, deletedNotification });\n  } catch (error) {\n    return res\n      .status(500)\n      .json({ success: false, err: 'Internal server error' });\n  }\n}\n\nexport async function readNotification(\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  try {\n    if (!req.headers?.authorization) {\n      return res\n        .status(401)\n        .json({ success: false, msg: 'Token not provided' });\n    }\n    const notificationRead = await notificationService.readNotification(\n      {\n        notificationId: new mongoose.Types.ObjectId(req.params?._id),\n      },\n      req.headers?.authorization\n    );\n\n    return res.status(200).json({ success: true, notificationRead });\n  } catch (error) {\n    return res\n      .status(500)\n      .json({ success: false, err: 'Internal server error' });\n  }\n}\n\nexport async function readManyNotification(\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  try {\n    if (!req.headers?.authorization) {\n      return res\n        .status(401)\n        .json({ success: false, msg: 'Token not provided' });\n    }\n    const notificationsRead = await notificationService.readManyNotifications(\n      req.headers?.authorization\n    );\n\n    return res.status(200).json({ success: true, notificationsRead });\n  } catch (error) {\n    return res\n      .status(500)\n      .json({ success: false, err: 'Internal server error' });\n  }\n}\n\nexport async function createNotification(\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  try {\n    if (!req.headers?.authorization) {\n      return res\n        .status(401)\n        .json({ success: false, msg: 'Token not provided' });\n    }\n    const notificationCreated =\n      await notificationService.customCreateNotification(\n        {\n          messageTemplateId: req.body?.messageTemplateId,\n          model: req.body?.model,\n          module: req.body?.module,\n          object: req.body?.object,\n          recipientId: req.body?.recipientId,\n          senderId: req.body?.senderId,\n          variables: req.body?.variables,\n        },\n        req.headers?.authorization\n      );\n    return res.status(200).json({ success: true, notificationCreated });\n  } catch (error) {\n    return res\n      .status(500)\n      .json({ success: false, err: 'Internal server error' });\n  }\n}\n\nexport async function customFindOne(\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  try {\n    if (!req.headers?.authorization) {\n      return res.status(401).json({\n        success: false,\n        msg: 'Token not provided',\n      });\n    }\n    const notification = await notificationService.customFindOne(\n      {\n        _id: new mongoose.Types.ObjectId(req.params?._id),\n      },\n      req.headers.authorization\n    );\n    return res.status(200).json({ success: true, data: notification });\n  } catch (error) {\n    return res.status(500).json({\n      success: false,\n      msg: 'Internal server error',\n    });\n  }\n}\n\nexport { notificationQueries, notificationMutations };\n"]}